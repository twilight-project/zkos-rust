{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7","program":"/Users/quasar/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","bulletproofs","--edition=2018","/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"rand\"","--cfg","feature=\"std\"","--cfg","feature=\"thiserror\"","--cfg","feature=\"yoloproofs\"","-C","metadata=931cc9ff5bb0a048","-C","extra-filename=-931cc9ff5bb0a048","--out-dir","/Users/quasar/Work/ZkOS/target/rls/debug/deps","-L","dependency=/Users/quasar/Work/ZkOS/target/rls/debug/deps","--extern","byteorder=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libbyteorder-0ce55f650b56b15d.rmeta","--extern","clear_on_drop=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libclear_on_drop-c12523141cc3fc45.rmeta","--extern","curve25519_dalek=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libcurve25519_dalek-a43fd538070d8b4b.rmeta","--extern","digest=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libdigest-896bb5ebae9a20a4.rmeta","--extern","merlin=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libmerlin-08a09505ab958d87.rmeta","--extern","rand=/Users/quasar/Work/ZkOS/target/rls/debug/deps/librand-ef169f3f1fc05ff0.rmeta","--extern","rand_core=/Users/quasar/Work/ZkOS/target/rls/debug/deps/librand_core-93f2a50b5d08e178.rmeta","--extern","serde=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libserde-04ea56dd166ab525.rmeta","--extern","serde_derive=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libserde_derive-119f647bbeaed4c8.dylib","--extern","sha3=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libsha3-314819a63a65751c.rmeta","--extern","subtle=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libsubtle-2250b354e3c52de9.rmeta","--extern","thiserror=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libthiserror-baddb2e203a1d4b7.rmeta","--cap-lints","allow","-L","native=/Users/quasar/Work/ZkOS/target/rls/debug/build/clear_on_drop-6ccede1e6428ff6e/out","--error-format=json","--sysroot","/Users/quasar/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/quasar/Work/ZkOS/target/rls/debug/deps/libbulletproofs-931cc9ff5bb0a048.rmeta"},"prelude":{"crate_id":{"name":"bulletproofs","disambiguator":[14698641180078286405,0]},"crate_root":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src","external_crates":[{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9466577767187306432,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/inner_product_proof.rs","num":2,"id":{"name":"core","disambiguator":[14994039406269911217,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5853163823225339907,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1613820703869417062,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18340735221876698540,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10150905723878426537,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[229357149764065237,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15407212597538225447,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8032230038358104220,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[33896783953523308,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[3991480156182438634,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[18236313526837676259,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[5224209857403294135,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16589749146088117410,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[6077239280078533383,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10957113670411776616,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[3291110756457894307,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12879821285339372091,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[4006686117836668289,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","num":20,"id":{"name":"serde_derive","disambiguator":[13896667971260411819,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","num":21,"id":{"name":"rand","disambiguator":[5433947015813427445,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","num":22,"id":{"name":"rand_core","disambiguator":[1771010891496197965,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","num":23,"id":{"name":"getrandom","disambiguator":[3355488486754017736,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","num":24,"id":{"name":"cfg_if","disambiguator":[14076372081617451223,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","num":25,"id":{"name":"libc","disambiguator":[7297379989608468165,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","num":26,"id":{"name":"rand_chacha","disambiguator":[2687016278795919078,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","num":27,"id":{"name":"ppv_lite86","disambiguator":[14005720374031907967,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","num":28,"id":{"name":"clear_on_drop","disambiguator":[16123378033320775073,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","num":29,"id":{"name":"curve25519_dalek","disambiguator":[7115565161585912385,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","num":30,"id":{"name":"byteorder","disambiguator":[2897270399911922009,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","num":31,"id":{"name":"digest","disambiguator":[1811346007130239792,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","num":32,"id":{"name":"generic_array","disambiguator":[15322946022414442601,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","num":33,"id":{"name":"typenum","disambiguator":[5246703807370073154,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","num":34,"id":{"name":"zeroize","disambiguator":[262959138545614003,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","num":35,"id":{"name":"zeroize_derive","disambiguator":[17431344712616089433,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","num":36,"id":{"name":"subtle","disambiguator":[7536280764138109691,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","num":37,"id":{"name":"serde","disambiguator":[14848142353744379967,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","num":38,"id":{"name":"thiserror","disambiguator":[13940418843096908018,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","num":39,"id":{"name":"thiserror_impl","disambiguator":[16646450988268564521,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","num":40,"id":{"name":"sha3","disambiguator":[16381362110203769201,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","num":41,"id":{"name":"block_buffer","disambiguator":[15969824528336058381,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","num":42,"id":{"name":"block_padding","disambiguator":[6891713577374935808,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","num":43,"id":{"name":"opaque_debug","disambiguator":[408801683698616065,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","num":44,"id":{"name":"keccak","disambiguator":[7741602788605100672,0]}},{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/inner_product_proof.rs","num":45,"id":{"name":"merlin","disambiguator":[5052616027842596096,0]}}],"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":0,"byte_end":1454,"line_start":1,"line_end":51,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":989,"byte_end":999,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"alias_span":null,"name":"ProofError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1296},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1029,"byte_end":1044,"line_start":38,"line_end":38,"column_start":29,"column_end":44},"alias_span":null,"name":"BulletproofGens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1046,"byte_end":1066,"line_start":38,"line_end":38,"column_start":46,"column_end":66},"alias_span":null,"name":"BulletproofGensShare","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1290},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1068,"byte_end":1080,"line_start":38,"line_end":38,"column_start":68,"column_end":80},"alias_span":null,"name":"PedersenGens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1614},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1111,"byte_end":1121,"line_start":39,"line_end":39,"column_start":29,"column_end":39},"alias_span":null,"name":"RangeProof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1252,"byte_end":1260,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"alias_span":null,"name":"MPCError","value":"","parent":{"krate":0,"index":702}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1294,"byte_end":1300,"line_start":44,"line_end":44,"column_start":33,"column_end":39},"alias_span":null,"name":"dealer","value":"","parent":{"krate":0,"index":702}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1334,"byte_end":1342,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"alias_span":null,"name":"messages","value":"","parent":{"krate":0,"index":702}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1376,"byte_end":1381,"line_start":46,"line_end":46,"column_start":33,"column_end":38},"alias_span":null,"name":"party","value":"","parent":{"krate":0,"index":702}},{"kind":"Use","ref_id":{"krate":0,"index":734},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":111962,"byte_end":111978,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"alias_span":null,"name":"ConstraintSystem","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":111980,"byte_end":112008,"line_start":14,"line_end":14,"column_start":23,"column_end":51},"alias_span":null,"name":"RandomizableConstraintSystem","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112010,"byte_end":112036,"line_start":14,"line_end":14,"column_start":53,"column_end":79},"alias_span":null,"name":"RandomizedConstraintSystem","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":1651},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112076,"byte_end":112093,"line_start":16,"line_end":16,"column_start":36,"column_end":53},"alias_span":null,"name":"LinearCombination","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":1627},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112095,"byte_end":112103,"line_start":16,"line_end":16,"column_start":55,"column_end":63},"alias_span":null,"name":"Variable","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":1661},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112129,"byte_end":112136,"line_start":17,"line_end":17,"column_start":24,"column_end":31},"alias_span":null,"name":"Metrics","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112159,"byte_end":112168,"line_start":18,"line_end":18,"column_start":22,"column_end":31},"alias_span":null,"name":"R1CSProof","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":960},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112192,"byte_end":112198,"line_start":19,"line_end":19,"column_start":23,"column_end":29},"alias_span":null,"name":"Prover","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112224,"byte_end":112232,"line_start":20,"line_end":20,"column_start":25,"column_end":33},"alias_span":null,"name":"Verifier","value":"","parent":{"krate":0,"index":715}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":112258,"byte_end":112267,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"alias_span":null,"name":"R1CSError","value":"","parent":{"krate":0,"index":715}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":0,"byte_end":1454,"line_start":1,"line_end":51,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":95},{"krate":0,"index":187},{"krate":0,"index":246},{"krate":0,"index":649},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":715}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13225,"byte_end":13242,"line_start":15,"line_end":15,"column_start":5,"column_end":22},"name":"VerificationError","qualname":"::errors::ProofError::VerificationError","value":"ProofError::VerificationError","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" This error occurs when a proof failed to verify.\n","sig":null,"attributes":[{"value":"/ This error occurs when a proof failed to verify.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13098,"byte_end":13150,"line_start":13,"line_end":13,"column_start":5,"column_end":57}},{"value":"error(\"Proof verification failed.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13183,"byte_end":13218,"line_start":14,"line_end":14,"column_start":33,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13387,"byte_end":13398,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::errors::ProofError::FormatError","value":"ProofError::FormatError","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" This error occurs when the proof encoding is malformed.\n","sig":null,"attributes":[{"value":"/ This error occurs when the proof encoding is malformed.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13248,"byte_end":13307,"line_start":16,"line_end":16,"column_start":5,"column_end":64}},{"value":"error(\"Proof data could not be parsed.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13340,"byte_end":13380,"line_start":17,"line_end":17,"column_start":33,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13610,"byte_end":13633,"line_start":22,"line_end":22,"column_start":5,"column_end":28},"name":"WrongNumBlindingFactors","qualname":"::errors::ProofError::WrongNumBlindingFactors","value":"ProofError::WrongNumBlindingFactors","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" This error occurs during proving if the number of blinding\n factors does not match the number of values.\n","sig":null,"attributes":[{"value":"/ This error occurs during proving if the number of blinding","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13404,"byte_end":13466,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ factors does not match the number of values.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13471,"byte_end":13519,"line_start":20,"line_end":20,"column_start":5,"column_end":53}},{"value":"error(\"Wrong number of blinding factors supplied.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13552,"byte_end":13603,"line_start":21,"line_end":21,"column_start":33,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13859,"byte_end":13873,"line_start":26,"line_end":26,"column_start":5,"column_end":19},"name":"InvalidBitsize","qualname":"::errors::ProofError::InvalidBitsize","value":"ProofError::InvalidBitsize","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" This error occurs when attempting to create a proof with\n bitsize other than \\\\(8\\\\), \\\\(16\\\\), \\\\(32\\\\), or \\\\(64\\\\).\n","sig":null,"attributes":[{"value":"/ This error occurs when attempting to create a proof with","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13639,"byte_end":13699,"line_start":23,"line_end":23,"column_start":5,"column_end":65}},{"value":"/ bitsize other than \\\\(8\\\\), \\\\(16\\\\), \\\\(32\\\\), or \\\\(64\\\\).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13704,"byte_end":13768,"line_start":24,"line_end":24,"column_start":5,"column_end":69}},{"value":"error(\"Invalid bitsize, must have n = 8,16,32,64.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13801,"byte_end":13852,"line_start":25,"line_end":25,"column_start":33,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14114,"byte_end":14132,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"name":"InvalidAggregation","qualname":"::errors::ProofError::InvalidAggregation","value":"ProofError::InvalidAggregation","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" This error occurs when attempting to create an aggregated\n proof with non-power-of-two aggregation size.\n","sig":null,"attributes":[{"value":"/ This error occurs when attempting to create an aggregated","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13879,"byte_end":13940,"line_start":27,"line_end":27,"column_start":5,"column_end":66}},{"value":"/ proof with non-power-of-two aggregation size.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13945,"byte_end":13994,"line_start":28,"line_end":28,"column_start":5,"column_end":54}},{"value":"error(\"Invalid aggregation size, m must be a power of 2.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14044,"byte_end":14102,"line_start":31,"line_end":31,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14337,"byte_end":14360,"line_start":39,"line_end":39,"column_start":5,"column_end":28},"name":"InvalidGeneratorsLength","qualname":"::errors::ProofError::InvalidGeneratorsLength","value":"ProofError::InvalidGeneratorsLength","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" This error occurs when there are insufficient generators for the proof.\n","sig":null,"attributes":[{"value":"/ This error occurs when there are insufficient generators for the proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14138,"byte_end":14213,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"error(\"Invalid generators size, too few generators for proof\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14263,"byte_end":14325,"line_start":37,"line_end":37,"column_start":9,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14770,"byte_end":14782,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"ProvingError","qualname":"::errors::ProofError::ProvingError","value":"ProofError::ProvingError(MPCError)","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" This error results from an internal error during proving.","sig":null,"attributes":[{"value":"/ This error results from an internal error during proving.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14366,"byte_end":14427,"line_start":40,"line_end":40,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14432,"byte_end":14435,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The single-party prover is implemented by performing","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14440,"byte_end":14496,"line_start":42,"line_end":42,"column_start":5,"column_end":61}},{"value":"/ multiparty computation with ourselves.  However, because the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14501,"byte_end":14565,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ MPC protocol is not exposed by the single-party API, we","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14570,"byte_end":14629,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"/ consider its errors to be internal errors.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14634,"byte_end":14680,"line_start":45,"line_end":45,"column_start":5,"column_end":51}},{"value":"error(\"Internal error during proof creation: {0}\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14713,"byte_end":14763,"line_start":46,"line_end":46,"column_start":33,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14783,"byte_end":14791,"line_start":47,"line_end":47,"column_start":18,"column_end":26},"name":"0","qualname":"::errors::ProofError::ProvingError::0","value":"errors::MPCError","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":13081,"byte_end":13091,"line_start":12,"line_end":12,"column_start":10,"column_end":20},"name":"ProofError","qualname":"::errors::ProofError","value":"enum ProofError {\n    VerificationError,\n    FormatError,\n    WrongNumBlindingFactors,\n    InvalidBitsize,\n    InvalidAggregation,\n    InvalidGeneratorsLength,\n    ProvingError(MPCError),\n}","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231}],"decl_id":null,"docs":" Represents an error in proof creation, verification, or parsing.\n","sig":null,"attributes":[{"value":"/ Represents an error in proof creation, verification, or parsing.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":12920,"byte_end":12988,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14841,"byte_end":14845,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<ProofError as std::convert::From>::from","value":"fn from(MPCError) -> ProofError","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15815,"byte_end":15830,"line_start":74,"line_end":74,"column_start":5,"column_end":20},"name":"MaliciousDealer","qualname":"::errors::MPCError::MaliciousDealer","value":"MPCError::MaliciousDealer","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when the dealer gives a zero challenge,\n which would annihilate the blinding factors.\n","sig":null,"attributes":[{"value":"/ This error occurs when the dealer gives a zero challenge,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15612,"byte_end":15673,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ which would annihilate the blinding factors.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15678,"byte_end":15726,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"error(\"Dealer gave a malicious challenge value.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15759,"byte_end":15808,"line_start":73,"line_end":73,"column_start":33,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16055,"byte_end":16069,"line_start":78,"line_end":78,"column_start":5,"column_end":19},"name":"InvalidBitsize","qualname":"::errors::MPCError::InvalidBitsize","value":"MPCError::InvalidBitsize","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when attempting to create a proof with\n bitsize other than \\\\(8\\\\), \\\\(16\\\\), \\\\(32\\\\), or \\\\(64\\\\).\n","sig":null,"attributes":[{"value":"/ This error occurs when attempting to create a proof with","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15836,"byte_end":15896,"line_start":75,"line_end":75,"column_start":5,"column_end":65}},{"value":"/ bitsize other than \\\\(8\\\\), \\\\(16\\\\), \\\\(32\\\\), or \\\\(64\\\\).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15901,"byte_end":15965,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"error(\"Invalid bitsize, must have n = 8,16,32,64\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15998,"byte_end":16048,"line_start":77,"line_end":77,"column_start":33,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16309,"byte_end":16327,"line_start":85,"line_end":85,"column_start":5,"column_end":23},"name":"InvalidAggregation","qualname":"::errors::MPCError::InvalidAggregation","value":"MPCError::InvalidAggregation","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when attempting to create an aggregated\n proof with non-power-of-two aggregation size.\n","sig":null,"attributes":[{"value":"/ This error occurs when attempting to create an aggregated","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16075,"byte_end":16136,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/ proof with non-power-of-two aggregation size.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16141,"byte_end":16190,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"error(\"Invalid aggregation size, m must be a power of 2\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16240,"byte_end":16297,"line_start":83,"line_end":83,"column_start":9,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16532,"byte_end":16555,"line_start":91,"line_end":91,"column_start":5,"column_end":28},"name":"InvalidGeneratorsLength","qualname":"::errors::MPCError::InvalidGeneratorsLength","value":"MPCError::InvalidGeneratorsLength","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when there are insufficient generators for the proof.\n","sig":null,"attributes":[{"value":"/ This error occurs when there are insufficient generators for the proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16333,"byte_end":16408,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"error(\"Invalid generators size, too few generators for proof\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16458,"byte_end":16520,"line_start":89,"line_end":89,"column_start":9,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16736,"byte_end":16758,"line_start":95,"line_end":95,"column_start":5,"column_end":27},"name":"WrongNumBitCommitments","qualname":"::errors::MPCError::WrongNumBitCommitments","value":"MPCError::WrongNumBitCommitments","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when the dealer is given the wrong number of\n value commitments.\n","sig":null,"attributes":[{"value":"/ This error occurs when the dealer is given the wrong number of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16561,"byte_end":16627,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/ value commitments.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16632,"byte_end":16654,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"error(\"Wrong number of value commitments\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16687,"byte_end":16729,"line_start":94,"line_end":94,"column_start":33,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16944,"byte_end":16967,"line_start":99,"line_end":99,"column_start":5,"column_end":28},"name":"WrongNumPolyCommitments","qualname":"::errors::MPCError::WrongNumPolyCommitments","value":"MPCError::WrongNumPolyCommitments","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when the dealer is given the wrong number of\n polynomial commitments.\n","sig":null,"attributes":[{"value":"/ This error occurs when the dealer is given the wrong number of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16764,"byte_end":16830,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ polynomial commitments.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16835,"byte_end":16862,"line_start":97,"line_end":97,"column_start":5,"column_end":32}},{"value":"error(\"Wrong number of value commitments\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16895,"byte_end":16937,"line_start":98,"line_end":98,"column_start":33,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17138,"byte_end":17157,"line_start":103,"line_end":103,"column_start":5,"column_end":24},"name":"WrongNumProofShares","qualname":"::errors::MPCError::WrongNumProofShares","value":"MPCError::WrongNumProofShares","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when the dealer is given the wrong number of\n proof shares.\n","sig":null,"attributes":[{"value":"/ This error occurs when the dealer is given the wrong number of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":16973,"byte_end":17039,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ proof shares.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17044,"byte_end":17061,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"error(\"Wrong number of proof shares\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17094,"byte_end":17131,"line_start":102,"line_end":102,"column_start":33,"column_end":70}}]},{"kind":"StructVariant","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17369,"byte_end":17389,"line_start":110,"line_end":110,"column_start":5,"column_end":25},"name":"MalformedProofShares","qualname":"::errors::MPCError::MalformedProofShares","value":"MPCError::MalformedProofShares { bad_shares }","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" This error occurs when one or more parties submit malformed\n proof shares.\n","sig":null,"attributes":[{"value":"/ This error occurs when one or more parties submit malformed","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17163,"byte_end":17226,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/ proof shares.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17231,"byte_end":17248,"line_start":105,"line_end":105,"column_start":5,"column_end":22}},{"value":"error(\"Malformed proof shares from parties {bad_shares:?}\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17298,"byte_end":17357,"line_start":108,"line_end":108,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17482,"byte_end":17492,"line_start":112,"line_end":112,"column_start":9,"column_end":19},"name":"bad_shares","qualname":"::errors::MPCError::MalformedProofShares::bad_shares","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" A vector with the indexes of the parties whose shares were malformed.\n","sig":null,"attributes":[{"value":"/ A vector with the indexes of the parties whose shares were malformed.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17400,"byte_end":17473,"line_start":111,"line_end":111,"column_start":9,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15597,"byte_end":15605,"line_start":70,"line_end":70,"column_start":10,"column_end":18},"name":"MPCError","qualname":"::errors::MPCError","value":"enum MPCError {\n    MaliciousDealer,\n    InvalidBitsize,\n    InvalidAggregation,\n    InvalidGeneratorsLength,\n    WrongNumBitCommitments,\n    WrongNumPolyCommitments,\n    WrongNumProofShares,\n    MalformedProofShares {\n            bad_shares: Vec<usize>,\n        },\n}","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263}],"decl_id":null,"docs":" Represents an error during the multiparty computation protocol for\n proof aggregation.","sig":null,"attributes":[{"value":"/ Represents an error during the multiparty computation protocol for","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15188,"byte_end":15258,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ proof aggregation.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15259,"byte_end":15281,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15282,"byte_end":15285,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This is a separate type from the `ProofError` to allow a layered","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15286,"byte_end":15354,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ API: although the MPC protocol is used internally for single-party","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15355,"byte_end":15425,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ proving, its API should not expose the complexity of the MPC","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15426,"byte_end":15490,"line_start":66,"line_end":66,"column_start":1,"column_end":65}},{"value":"/ protocol.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":15491,"byte_end":15504,"line_start":67,"line_end":67,"column_start":1,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17981,"byte_end":18004,"line_start":128,"line_end":128,"column_start":5,"column_end":28},"name":"InvalidGeneratorsLength","qualname":"::errors::R1CSError::InvalidGeneratorsLength","value":"R1CSError::InvalidGeneratorsLength","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Occurs when there are insufficient generators for the proof.\n","sig":null,"attributes":[{"value":"/ Occurs when there are insufficient generators for the proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17793,"byte_end":17857,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"error(\"Invalid generators size, too few generators for proof\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17907,"byte_end":17969,"line_start":126,"line_end":126,"column_start":9,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18149,"byte_end":18160,"line_start":131,"line_end":131,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::errors::R1CSError::FormatError","value":"R1CSError::FormatError","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" This error occurs when the proof encoding is malformed.\n","sig":null,"attributes":[{"value":"/ This error occurs when the proof encoding is malformed.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18010,"byte_end":18069,"line_start":129,"line_end":129,"column_start":5,"column_end":64}},{"value":"error(\"Proof data could not be parsed.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18102,"byte_end":18142,"line_start":130,"line_end":130,"column_start":33,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18332,"byte_end":18349,"line_start":135,"line_end":135,"column_start":5,"column_end":22},"name":"VerificationError","qualname":"::errors::R1CSError::VerificationError","value":"R1CSError::VerificationError","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Occurs when verification of an\n [`R1CSProof`](::r1cs::R1CSProof) fails.\n","sig":null,"attributes":[{"value":"/ Occurs when verification of an","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18166,"byte_end":18200,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ [`R1CSProof`](::r1cs::R1CSProof) fails.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18205,"byte_end":18248,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"error(\"R1CSProof did not verify correctly.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18281,"byte_end":18325,"line_start":134,"line_end":134,"column_start":33,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18651,"byte_end":18668,"line_start":141,"line_end":141,"column_start":5,"column_end":22},"name":"MissingAssignment","qualname":"::errors::R1CSError::MissingAssignment","value":"R1CSError::MissingAssignment","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Occurs when trying to use a missing variable assignment.\n Used by gadgets that build the constraint system to signal that\n a variable assignment is not provided when the prover needs it.\n","sig":null,"attributes":[{"value":"/ Occurs when trying to use a missing variable assignment.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18356,"byte_end":18416,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/ Used by gadgets that build the constraint system to signal that","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18421,"byte_end":18488,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/ a variable assignment is not provided when the prover needs it.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18493,"byte_end":18560,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"error(\"Variable does not have a value assignment.\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18593,"byte_end":18644,"line_start":140,"line_end":140,"column_start":33,"column_end":84}}]},{"kind":"StructVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18809,"byte_end":18820,"line_start":145,"line_end":145,"column_start":5,"column_end":16},"name":"GadgetError","qualname":"::errors::R1CSError::GadgetError","value":"R1CSError::GadgetError { description }","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" Occurs when a gadget receives an inconsistent input.\n","sig":null,"attributes":[{"value":"/ Occurs when a gadget receives an inconsistent input.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18675,"byte_end":18731,"line_start":143,"line_end":143,"column_start":5,"column_end":61}},{"value":"error(\"Gadget error: {description:?}\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18764,"byte_end":18802,"line_start":144,"line_end":144,"column_start":33,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18889,"byte_end":18900,"line_start":147,"line_end":147,"column_start":9,"column_end":20},"name":"description","qualname":"::errors::R1CSError::GadgetError::description","value":"std::string::String","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The description of the reasons for the error.\n","sig":null,"attributes":[{"value":"/ The description of the reasons for the error.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18831,"byte_end":18880,"line_start":146,"line_end":146,"column_start":9,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17777,"byte_end":17786,"line_start":122,"line_end":122,"column_start":10,"column_end":19},"name":"R1CSError","qualname":"::errors::R1CSError","value":"enum R1CSError {\n    InvalidGeneratorsLength,\n    FormatError,\n    VerificationError,\n    MissingAssignment,\n    GadgetError {\n            description: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288}],"decl_id":null,"docs":" Represents an error during the proving or verifying of a constraint system.","sig":null,"attributes":[{"value":"/ Represents an error during the proving or verifying of a constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17516,"byte_end":17595,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17596,"byte_end":17599,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ XXX: should this be separate from a `ProofError`?","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17600,"byte_end":17653,"line_start":118,"line_end":118,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"yoloproofs\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":17654,"byte_end":17684,"line_start":119,"line_end":119,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18996,"byte_end":19000,"line_start":153,"line_end":153,"column_start":8,"column_end":12},"name":"from","qualname":"<R1CSError as std::convert::From>::from","value":"fn from(ProofError) -> R1CSError","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20351,"byte_end":20363,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"PedersenGens","qualname":"::generators::PedersenGens","value":"PedersenGens { B, B_blinding }","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"decl_id":null,"docs":" Represents a pair of base points for Pedersen commitments.","sig":null,"attributes":[{"value":"/ Represents a pair of base points for Pedersen commitments.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":19909,"byte_end":19971,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":19972,"byte_end":19975,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The Bulletproofs implementation and API is designed to support","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":19976,"byte_end":20042,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ pluggable bases for Pedersen commitments, so that the choice of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20043,"byte_end":20110,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ bases is not hard-coded.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20111,"byte_end":20139,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20140,"byte_end":20143,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The default generators are:","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20144,"byte_end":20175,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20176,"byte_end":20179,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `B`: the `ristretto255` basepoint;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20180,"byte_end":20220,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ * `B_blinding`: the result of `ristretto255` SHA3-512","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20221,"byte_end":20278,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ hash-to-group on input `B_bytes`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20279,"byte_end":20316,"line_start":28,"line_end":28,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20411,"byte_end":20412,"line_start":32,"line_end":32,"column_start":9,"column_end":10},"name":"B","qualname":"::generators::PedersenGens::B","value":"curve25519_dalek::ristretto::RistrettoPoint","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Base for the committed value\n","sig":null,"attributes":[{"value":"/ Base for the committed value","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20370,"byte_end":20402,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20475,"byte_end":20485,"line_start":34,"line_end":34,"column_start":9,"column_end":19},"name":"B_blinding","qualname":"::generators::PedersenGens::B_blinding","value":"curve25519_dalek::ristretto::RistrettoPoint","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Base for the blinding factor\n","sig":null,"attributes":[{"value":"/ Base for the blinding factor","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20434,"byte_end":20466,"line_start":33,"line_end":33,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20621,"byte_end":20627,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"commit","qualname":"<PedersenGens>::commit","value":"fn commit(&Self, Scalar, Scalar) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Creates a Pedersen commitment using the value scalar and a blinding factor.\n","sig":null,"attributes":[{"value":"/ Creates a Pedersen commitment using the value scalar and a blinding factor.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20530,"byte_end":20609,"line_start":38,"line_end":38,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20824,"byte_end":20831,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"default","qualname":"<PedersenGens as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23650,"byte_end":23665,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"BulletproofGens","qualname":"::generators::BulletproofGens","value":"BulletproofGens { gens_capacity, party_capacity }","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"decl_id":null,"docs":" The `BulletproofGens` struct contains all the generators needed\n for aggregating up to `m` range proofs of up to `n` bits each.","sig":null,"attributes":[{"value":"/ The `BulletproofGens` struct contains all the generators needed","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22376,"byte_end":22443,"line_start":106,"line_end":106,"column_start":1,"column_end":68}},{"value":"/ for aggregating up to `m` range proofs of up to `n` bits each.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22444,"byte_end":22510,"line_start":107,"line_end":107,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22511,"byte_end":22514,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # Extensible Generator Generation","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22515,"byte_end":22552,"line_start":109,"line_end":109,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22553,"byte_end":22556,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Instead of constructing a single vector of size `m*n`, as","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22557,"byte_end":22618,"line_start":111,"line_end":111,"column_start":1,"column_end":62}},{"value":"/ described in the Bulletproofs paper, we construct each party's","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22619,"byte_end":22685,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ generators separately.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22686,"byte_end":22712,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22713,"byte_end":22716,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ To construct an arbitrary-length chain of generators, we apply","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22717,"byte_end":22783,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ SHAKE256 to a domain separator label, and feed each 64 bytes of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22784,"byte_end":22851,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/ XOF output into the `ristretto255` hash-to-group function.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22852,"byte_end":22914,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ Each of the `m` parties' generators are constructed using a","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22915,"byte_end":22978,"line_start":118,"line_end":118,"column_start":1,"column_end":64}},{"value":"/ different domain separation label, and proving and verification","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22979,"byte_end":23046,"line_start":119,"line_end":119,"column_start":1,"column_end":68}},{"value":"/ uses the first `n` elements of the arbitrary-length chain.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23047,"byte_end":23109,"line_start":120,"line_end":120,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23110,"byte_end":23113,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This means that the aggregation size (number of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23114,"byte_end":23165,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/ parties) is orthogonal to the rangeproof size (number of bits),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23166,"byte_end":23233,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ and allows using the same `BulletproofGens` object for different","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23234,"byte_end":23302,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/ proving parameters.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23303,"byte_end":23326,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23327,"byte_end":23330,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This construction is also forward-compatible with constraint","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23331,"byte_end":23395,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/ system proofs, which use a much larger slice of the generator","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23396,"byte_end":23461,"line_start":128,"line_end":128,"column_start":1,"column_end":66}},{"value":"/ chain, and even forward-compatible to multiparty aggregation of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23462,"byte_end":23529,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ constraint system proofs, since the generators are namespaced by","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23530,"byte_end":23598,"line_start":130,"line_end":130,"column_start":1,"column_end":69}},{"value":"/ their party index.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23599,"byte_end":23621,"line_start":131,"line_end":131,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23740,"byte_end":23753,"line_start":135,"line_end":135,"column_start":9,"column_end":22},"name":"gens_capacity","qualname":"::generators::BulletproofGens::gens_capacity","value":"usize","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" The maximum number of usable generators for each party.\n","sig":null,"attributes":[{"value":"/ The maximum number of usable generators for each party.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23672,"byte_end":23731,"line_start":134,"line_end":134,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23806,"byte_end":23820,"line_start":137,"line_end":137,"column_start":9,"column_end":23},"name":"party_capacity","qualname":"::generators::BulletproofGens::party_capacity","value":"usize","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" Number of values or parties\n","sig":null,"attributes":[{"value":"/ Number of values or parties","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":23766,"byte_end":23797,"line_start":136,"line_end":136,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24599,"byte_end":24602,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<BulletproofGens>::new","value":"fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BulletproofGens` object.","sig":null,"attributes":[{"value":"/ Create a new `BulletproofGens` object.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24059,"byte_end":24101,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24106,"byte_end":24109,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24114,"byte_end":24126,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24131,"byte_end":24134,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ * `gens_capacity` is the number of generators to precompute","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24139,"byte_end":24202,"line_start":149,"line_end":149,"column_start":5,"column_end":68}},{"value":"/    for each party.  For rangeproofs, it is sufficient to pass","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24207,"byte_end":24272,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"/    `64`, the maximum bitsize of the rangeproofs.  For circuit","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24277,"byte_end":24342,"line_start":151,"line_end":151,"column_start":5,"column_end":70}},{"value":"/    proofs, the capacity must be greater than the number of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24347,"byte_end":24409,"line_start":152,"line_end":152,"column_start":5,"column_end":67}},{"value":"/    multipliers, rounded up to the next power of two.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24414,"byte_end":24470,"line_start":153,"line_end":153,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24475,"byte_end":24478,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ * `party_capacity` is the maximum number of parties that can","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24483,"byte_end":24547,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/    produce an aggregated proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24552,"byte_end":24587,"line_start":156,"line_end":156,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":25107,"byte_end":25112,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"share","qualname":"<BulletproofGens>::share","value":"fn share(&Self, usize) -> BulletproofGensShare","parent":null,"children":[],"decl_id":null,"docs":" Returns j-th share of generators, with an appropriate\n slice of vectors G and H for the j-th range proof.\n","sig":null,"attributes":[{"value":"/ Returns j-th share of generators, with an appropriate","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24979,"byte_end":25036,"line_start":168,"line_end":168,"column_start":5,"column_end":62}},{"value":"/ slice of vectors G and H for the j-th range proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":25041,"byte_end":25095,"line_start":169,"line_end":169,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":25403,"byte_end":25420,"line_start":179,"line_end":179,"column_start":12,"column_end":29},"name":"increase_capacity","qualname":"<BulletproofGens>::increase_capacity","value":"fn increase_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Increases the generators' capacity to the amount specified.\n If less than or equal to the current capacity, does nothing.\n","sig":null,"attributes":[{"value":"/ Increases the generators' capacity to the amount specified.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":25259,"byte_end":25322,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ If less than or equal to the current capacity, does nothing.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":25327,"byte_end":25391,"line_start":178,"line_end":178,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":28187,"byte_end":28207,"line_start":270,"line_end":270,"column_start":12,"column_end":32},"name":"BulletproofGensShare","qualname":"::generators::BulletproofGensShare","value":"BulletproofGensShare {  }","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306}],"decl_id":null,"docs":" Represents a view of the generators used by a specific party in an\n aggregated proof.","sig":null,"attributes":[{"value":"/ Represents a view of the generators used by a specific party in an","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27757,"byte_end":27827,"line_start":261,"line_end":261,"column_start":1,"column_end":71}},{"value":"/ aggregated proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27828,"byte_end":27849,"line_start":262,"line_end":262,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27850,"byte_end":27853,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ The `BulletproofGens` struct represents generators for an aggregated","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27854,"byte_end":27926,"line_start":264,"line_end":264,"column_start":1,"column_end":73}},{"value":"/ range proof `m` proofs of `n` bits each; the `BulletproofGensShare`","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27927,"byte_end":27998,"line_start":265,"line_end":265,"column_start":1,"column_end":72}},{"value":"/ provides a view of the generators for one of the `m` parties' shares.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27999,"byte_end":28072,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":28073,"byte_end":28076,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The `BulletproofGensShare` is produced by [`BulletproofGens::share()`].","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":28077,"byte_end":28152,"line_start":268,"line_end":268,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":323},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dealer","qualname":"::range_proof::dealer","value":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":387},{"krate":0,"index":393},{"krate":0,"index":406},{"krate":0,"index":412},{"krate":0,"index":429}],"decl_id":null,"docs":" The `dealer` module contains the API for the dealer state while the dealer is\n engaging in an aggregated multiparty computation protocol.","sig":null,"attributes":[{"value":"/ The `dealer` module contains the API for the dealer state while the dealer is","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":79406,"byte_end":79487,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ engaging in an aggregated multiparty computation protocol.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":79488,"byte_end":79550,"line_start":2,"line_end":2,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":79551,"byte_end":79554,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ For more explanation of how the `dealer`, `party`, and `messages` modules orchestrate the protocol execution, see","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":79555,"byte_end":79672,"line_start":4,"line_end":4,"column_start":1,"column_end":118}},{"value":"/ [the API for the aggregated multiparty computation protocol](../aggregation/index.html#api-for-the-aggregated-multiparty-computation-protocol).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":79673,"byte_end":79820,"line_start":5,"line_end":5,"column_start":1,"column_end":148}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":80405,"byte_end":80411,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Dealer","qualname":"::range_proof::dealer::Dealer","value":"Dealer {  }","parent":null,"children":[],"decl_id":null,"docs":" Used to construct a dealer for the aggregated rangeproof MPC protocol.\n","sig":null,"attributes":[{"value":"/ Used to construct a dealer for the aggregated rangeproof MPC protocol.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":80319,"byte_end":80393,"line_start":32,"line_end":32,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":80519,"byte_end":80522,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Dealer>::new","value":"fn new<'a,\n'b>(&'b BulletproofGens, &'b PedersenGens, &'a mut Transcript, usize, usize)\n-> Result<DealerAwaitingBitCommitments, MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dealer coordinating `m` parties proving `n`-bit ranges.\n","sig":null,"attributes":[{"value":"/ Creates a new dealer coordinating `m` parties proving `n`-bit ranges.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":80434,"byte_end":80507,"line_start":36,"line_end":36,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":82137,"byte_end":82165,"line_start":85,"line_end":85,"column_start":12,"column_end":40},"name":"DealerAwaitingBitCommitments","qualname":"::range_proof::dealer::DealerAwaitingBitCommitments","value":"DealerAwaitingBitCommitments {  }","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"decl_id":null,"docs":" A dealer waiting for the parties to send their [`BitCommitment`]s.\n","sig":null,"attributes":[{"value":"/ A dealer waiting for the parties to send their [`BitCommitment`]s.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":82055,"byte_end":82125,"line_start":84,"line_end":84,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":82628,"byte_end":82651,"line_start":98,"line_end":98,"column_start":12,"column_end":35},"name":"receive_bit_commitments","qualname":"<DealerAwaitingBitCommitments>::receive_bit_commitments","value":"fn receive_bit_commitments(Self, Vec<BitCommitment>)\n-> Result<(DealerAwaitingPolyCommitments, BitChallenge), MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Receive each party's [`BitCommitment`]s and compute the [`BitChallenge`].\n","sig":null,"attributes":[{"value":"/ Receive each party's [`BitCommitment`]s and compute the [`BitChallenge`].","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":82539,"byte_end":82616,"line_start":97,"line_end":97,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":84124,"byte_end":84153,"line_start":142,"line_end":142,"column_start":12,"column_end":41},"name":"DealerAwaitingPolyCommitments","qualname":"::range_proof::dealer::DealerAwaitingPolyCommitments","value":"DealerAwaitingPolyCommitments {  }","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":" A dealer which has sent the [`BitChallenge`] to the parties and\n is waiting for their [`PolyCommitment`]s.\n","sig":null,"attributes":[{"value":"/ A dealer which has sent the [`BitChallenge`] to the parties and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":83999,"byte_end":84066,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/ is waiting for their [`PolyCommitment`]s.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":84067,"byte_end":84112,"line_start":141,"line_end":141,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":84723,"byte_end":84747,"line_start":160,"line_end":160,"column_start":12,"column_end":36},"name":"receive_poly_commitments","qualname":"<DealerAwaitingPolyCommitments>::receive_poly_commitments","value":"fn receive_poly_commitments(Self, Vec<PolyCommitment>)\n-> Result<(DealerAwaitingProofShares, PolyChallenge), MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Receive [`PolyCommitment`]s from the parties and compute the\n [`PolyChallenge`].\n","sig":null,"attributes":[{"value":"/ Receive [`PolyCommitment`]s from the parties and compute the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":84620,"byte_end":84684,"line_start":158,"line_end":158,"column_start":5,"column_end":69}},{"value":"/ [`PolyChallenge`].","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":84689,"byte_end":84711,"line_start":159,"line_end":159,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":86234,"byte_end":86259,"line_start":203,"line_end":203,"column_start":12,"column_end":37},"name":"DealerAwaitingProofShares","qualname":"::range_proof::dealer::DealerAwaitingProofShares","value":"DealerAwaitingProofShares {  }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"decl_id":null,"docs":" A dealer which has sent the [`PolyChallenge`] to the parties and\n is waiting to aggregate their [`ProofShare`]s into a\n [`RangeProof`].\n","sig":null,"attributes":[{"value":"/ A dealer which has sent the [`PolyChallenge`] to the parties and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":86077,"byte_end":86145,"line_start":200,"line_end":200,"column_start":1,"column_end":69}},{"value":"/ is waiting to aggregate their [`ProofShare`]s into a","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":86146,"byte_end":86202,"line_start":201,"line_end":201,"column_start":1,"column_end":57}},{"value":"/ [`RangeProof`].","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":86203,"byte_end":86222,"line_start":202,"line_end":202,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89714,"byte_end":89728,"line_start":302,"line_end":302,"column_start":12,"column_end":26},"name":"receive_shares","qualname":"<DealerAwaitingProofShares>::receive_shares","value":"fn receive_shares(Self, &[ProofShare]) -> Result<RangeProof, MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Assemble the final aggregated [`RangeProof`] from the given\n `proof_shares`, then validate the proof to ensure that all\n `ProofShare`s were well-formed.","sig":null,"attributes":[{"value":"/ Assemble the final aggregated [`RangeProof`] from the given","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89419,"byte_end":89482,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ `proof_shares`, then validate the proof to ensure that all","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89487,"byte_end":89549,"line_start":296,"line_end":296,"column_start":5,"column_end":67}},{"value":"/ `ProofShare`s were well-formed.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89554,"byte_end":89589,"line_start":297,"line_end":297,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89594,"byte_end":89597,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This is a convenience wrapper around receive_shares_with_rng","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89602,"byte_end":89666,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89671,"byte_end":89674,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89679,"byte_end":89702,"line_start":301,"line_end":301,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90557,"byte_end":90580,"line_start":319,"line_end":319,"column_start":12,"column_end":35},"name":"receive_shares_with_rng","qualname":"<DealerAwaitingProofShares>::receive_shares_with_rng","value":"fn receive_shares_with_rng<T>(Self, &[ProofShare], &mut T)\n-> Result<RangeProof, MPCError> where T: RngCore + CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Assemble the final aggregated [`RangeProof`] from the given\n `proof_shares`, then validate the proof to ensure that all\n `ProofShare`s were well-formed.","sig":null,"attributes":[{"value":"/ Assemble the final aggregated [`RangeProof`] from the given","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89879,"byte_end":89942,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/ `proof_shares`, then validate the proof to ensure that all","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":89947,"byte_end":90009,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ `ProofShare`s were well-formed.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90014,"byte_end":90049,"line_start":308,"line_end":308,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90054,"byte_end":90057,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ If the aggregated proof fails to validate, this function","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90062,"byte_end":90122,"line_start":310,"line_end":310,"column_start":5,"column_end":65}},{"value":"/ audits the submitted shares to determine which shares were","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90127,"byte_end":90189,"line_start":311,"line_end":311,"column_start":5,"column_end":67}},{"value":"/ invalid.  This information is returned as part of the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90194,"byte_end":90251,"line_start":312,"line_end":312,"column_start":5,"column_end":62}},{"value":"/ [`MPCError`].","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90256,"byte_end":90273,"line_start":313,"line_end":313,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90278,"byte_end":90281,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ If the proof shares are known to be trusted, for instance when","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90286,"byte_end":90352,"line_start":315,"line_end":315,"column_start":5,"column_end":71}},{"value":"/ performing local aggregation,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90357,"byte_end":90390,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ [`receive_trusted_shares`](DealerAwaitingProofShares::receive_trusted_shares)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90395,"byte_end":90476,"line_start":317,"line_end":317,"column_start":5,"column_end":86}},{"value":"/ saves time by skipping verification of the aggregated proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":90481,"byte_end":90545,"line_start":318,"line_end":318,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92503,"byte_end":92525,"line_start":370,"line_end":370,"column_start":12,"column_end":34},"name":"receive_trusted_shares","qualname":"<DealerAwaitingProofShares>::receive_trusted_shares","value":"fn receive_trusted_shares(Self, &[ProofShare]) -> Result<RangeProof, MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Assemble the final aggregated [`RangeProof`] from the given\n `proof_shares`, but skip validation of the proof.","sig":null,"attributes":[{"value":"/ Assemble the final aggregated [`RangeProof`] from the given","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":91857,"byte_end":91920,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/ `proof_shares`, but skip validation of the proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":91925,"byte_end":91978,"line_start":357,"line_end":357,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":91983,"byte_end":91986,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ## WARNING","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":91991,"byte_end":92005,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92010,"byte_end":92013,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function does **NOT** validate the proof shares.  It is","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92018,"byte_end":92082,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/ suitable for creating aggregated proofs when all parties are","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92087,"byte_end":92151,"line_start":362,"line_end":362,"column_start":5,"column_end":69}},{"value":"/ known by the dealer to be honest (for instance, when there's","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92156,"byte_end":92220,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/ only one party playing all roles).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92225,"byte_end":92263,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92268,"byte_end":92271,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Otherwise, use","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92276,"byte_end":92294,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/ [`receive_shares`](DealerAwaitingProofShares::receive_shares),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92299,"byte_end":92365,"line_start":367,"line_end":367,"column_start":5,"column_end":71}},{"value":"/ which validates that all shares are well-formed, or else","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92370,"byte_end":92430,"line_start":368,"line_end":368,"column_start":5,"column_end":65}},{"value":"/ detects which party(ies) submitted malformed shares.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":92435,"byte_end":92491,"line_start":369,"line_end":369,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":444},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"messages","qualname":"::range_proof::messages","value":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":1321},{"krate":0,"index":1325},{"krate":0,"index":1331},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1390},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1447},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1503},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1555},{"krate":0,"index":1561},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":469}],"decl_id":null,"docs":" The `messages` module contains the API for the messages passed between the parties and the dealer\n in an aggregated multiparty computation protocol.","sig":null,"attributes":[{"value":"/ The `messages` module contains the API for the messages passed between the parties and the dealer","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":92674,"byte_end":92775,"line_start":1,"line_end":1,"column_start":1,"column_end":102}},{"value":"/ in an aggregated multiparty computation protocol.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":92776,"byte_end":92829,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":92830,"byte_end":92833,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ For more explanation of how the `dealer`, `party`, and `messages` modules orchestrate the protocol execution, see","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":92834,"byte_end":92951,"line_start":4,"line_end":4,"column_start":1,"column_end":118}},{"value":"/ [the API for the aggregated multiparty computation protocol](../aggregation/index.html#api-for-the-aggregated-multiparty-computation-protocol).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":92952,"byte_end":93099,"line_start":5,"line_end":5,"column_start":1,"column_end":148}}]},{"kind":"Struct","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":93441,"byte_end":93454,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"BitCommitment","qualname":"::range_proof::messages::BitCommitment","value":"BitCommitment {  }","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324}],"decl_id":null,"docs":" A commitment to the bits of a party's value.\n","sig":null,"attributes":[{"value":"/ A commitment to the bits of a party's value.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":93327,"byte_end":93375,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":93705,"byte_end":93717,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"BitChallenge","qualname":"::range_proof::messages::BitChallenge","value":"BitChallenge {  }","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"decl_id":null,"docs":" Challenge values derived from all parties' [`BitCommitment`]s.\n","sig":null,"attributes":[{"value":"/ Challenge values derived from all parties' [`BitCommitment`]s.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":93573,"byte_end":93639,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":93894,"byte_end":93908,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"PolyCommitment","qualname":"::range_proof::messages::PolyCommitment","value":"PolyCommitment {  }","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" A commitment to a party's polynomial coefficents.\n","sig":null,"attributes":[{"value":"/ A commitment to a party's polynomial coefficents.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":93775,"byte_end":93828,"line_start":31,"line_end":31,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":94123,"byte_end":94136,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"PolyChallenge","qualname":"::range_proof::messages::PolyChallenge","value":"PolyChallenge {  }","parent":null,"children":[{"krate":0,"index":1496}],"decl_id":null,"docs":" Challenge values derived from all parties' [`PolyCommitment`]s.\n","sig":null,"attributes":[{"value":"/ Challenge values derived from all parties' [`PolyCommitment`]s.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":93990,"byte_end":94057,"line_start":38,"line_end":38,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":94325,"byte_end":94335,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"ProofShare","qualname":"::range_proof::messages::ProofShare","value":"ProofShare {  }","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"decl_id":null,"docs":" A party's proof share, ready for aggregation into the final\n [`RangeProof`](::RangeProof).\n","sig":null,"attributes":[{"value":"/ A party's proof share, ready for aggregation into the final","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":94168,"byte_end":94231,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ [`RangeProof`](::RangeProof).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":94232,"byte_end":94265,"line_start":45,"line_end":45,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":487},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"party","qualname":"::range_proof::party","value":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":547},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":575},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":593},{"krate":0,"index":595}],"decl_id":null,"docs":" The `party` module contains the API for the party state while the party is\n engaging in an aggregated multiparty computation protocol.","sig":null,"attributes":[{"value":"/ The `party` module contains the API for the party state while the party is","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98184,"byte_end":98262,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ engaging in an aggregated multiparty computation protocol.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98263,"byte_end":98325,"line_start":2,"line_end":2,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98326,"byte_end":98329,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Each state of the MPC protocol is represented by a different Rust","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98330,"byte_end":98399,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ type.  The state transitions consume the previous state, making it","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98400,"byte_end":98470,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ a compile error to perform the steps out of order or to repeat a","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98471,"byte_end":98539,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ step.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98540,"byte_end":98549,"line_start":7,"line_end":7,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98550,"byte_end":98553,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For more explanation of how the `dealer`, `party`, and `messages`","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98554,"byte_end":98623,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ modules orchestrate the protocol execution, see the documentation","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98624,"byte_end":98693,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ in the [`aggregation`](::range_proof_mpc) module.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":98694,"byte_end":98747,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":99294,"byte_end":99299,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"Party","qualname":"::range_proof::party::Party","value":"Party {  }","parent":null,"children":[],"decl_id":null,"docs":" Used to construct a party for the aggregated rangeproof MPC protocol.\n","sig":null,"attributes":[{"value":"/ Used to construct a party for the aggregated rangeproof MPC protocol.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":99209,"byte_end":99282,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":99411,"byte_end":99414,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Party>::new","value":"fn new<'a>(&'a BulletproofGens, &'a PedersenGens, u64, Scalar, usize)\n-> Result<PartyAwaitingPosition, MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `PartyAwaitingPosition` with the given rangeproof parameters.\n","sig":null,"attributes":[{"value":"/ Constructs a `PartyAwaitingPosition` with the given rangeproof parameters.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":99321,"byte_end":99399,"line_start":36,"line_end":36,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":539},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100158,"byte_end":100179,"line_start":65,"line_end":65,"column_start":12,"column_end":33},"name":"PartyAwaitingPosition","qualname":"::range_proof::party::PartyAwaitingPosition","value":"PartyAwaitingPosition {  }","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"decl_id":null,"docs":" A party waiting for the dealer to assign their position in the aggregation.\n","sig":null,"attributes":[{"value":"/ A party waiting for the dealer to assign their position in the aggregation.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100067,"byte_end":100146,"line_start":64,"line_end":64,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100539,"byte_end":100554,"line_start":78,"line_end":78,"column_start":12,"column_end":27},"name":"assign_position","qualname":"<PartyAwaitingPosition>::assign_position","value":"fn assign_position(Self, usize)\n-> Result<(PartyAwaitingBitChallenge, BitCommitment), MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Assigns a position in the aggregated proof to this party,\n allowing the party to commit to the bits of their value.\n","sig":null,"attributes":[{"value":"/ Assigns a position in the aggregated proof to this party,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100373,"byte_end":100434,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ allowing the party to commit to the bits of their value.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100439,"byte_end":100499,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100504,"byte_end":100527,"line_start":77,"line_end":77,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100873,"byte_end":100897,"line_start":87,"line_end":87,"column_start":12,"column_end":36},"name":"assign_position_with_rng","qualname":"<PartyAwaitingPosition>::assign_position_with_rng","value":"fn assign_position_with_rng<T>(Self, usize, &mut T)\n-> Result<(PartyAwaitingBitChallenge, BitCommitment), MPCError> where\nT: RngCore + CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Assigns a position in the aggregated proof to this party,\n allowing the party to commit to the bits of their value.\n","sig":null,"attributes":[{"value":"/ Assigns a position in the aggregated proof to this party,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100735,"byte_end":100796,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ allowing the party to commit to the bits of their value.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100801,"byte_end":100861,"line_start":86,"line_end":86,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103057,"byte_end":103061,"line_start":149,"line_end":149,"column_start":8,"column_end":12},"name":"drop","qualname":"<PartyAwaitingPosition as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103280,"byte_end":103305,"line_start":157,"line_end":157,"column_start":12,"column_end":37},"name":"PartyAwaitingBitChallenge","qualname":"::range_proof::party::PartyAwaitingBitChallenge","value":"PartyAwaitingBitChallenge {  }","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" A party which has committed to the bits of its value\n and is waiting for the aggregated value challenge from the dealer.\n","sig":null,"attributes":[{"value":"/ A party which has committed to the bits of its value","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103141,"byte_end":103197,"line_start":155,"line_end":155,"column_start":1,"column_end":57}},{"value":"/ and is waiting for the aggregated value challenge from the dealer.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103198,"byte_end":103268,"line_start":156,"line_end":156,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103739,"byte_end":103754,"line_start":173,"line_end":173,"column_start":12,"column_end":27},"name":"apply_challenge","qualname":"<PartyAwaitingBitChallenge>::apply_challenge","value":"fn apply_challenge(Self, &BitChallenge)\n-> (PartyAwaitingPolyChallenge, PolyCommitment)","parent":null,"children":[],"decl_id":null,"docs":" Receive a [`BitChallenge`] from the dealer and use it to\n compute commitments to the party's polynomial coefficients.\n","sig":null,"attributes":[{"value":"/ Receive a [`BitChallenge`] from the dealer and use it to","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103571,"byte_end":103631,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/ compute commitments to the party's polynomial coefficients.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103636,"byte_end":103699,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103704,"byte_end":103727,"line_start":172,"line_end":172,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":104065,"byte_end":104089,"line_start":182,"line_end":182,"column_start":12,"column_end":36},"name":"apply_challenge_with_rng","qualname":"<PartyAwaitingBitChallenge>::apply_challenge_with_rng","value":"fn apply_challenge_with_rng<T>(Self, &BitChallenge, &mut T)\n-> (PartyAwaitingPolyChallenge, PolyCommitment) where T: RngCore + CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Receive a [`BitChallenge`] from the dealer and use it to\n compute commitments to the party's polynomial coefficients.\n","sig":null,"attributes":[{"value":"/ Receive a [`BitChallenge`] from the dealer and use it to","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103925,"byte_end":103985,"line_start":180,"line_end":180,"column_start":5,"column_end":65}},{"value":"/ compute commitments to the party's polynomial coefficients.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103990,"byte_end":104053,"line_start":181,"line_end":181,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":106101,"byte_end":106105,"line_start":242,"line_end":242,"column_start":8,"column_end":12},"name":"drop","qualname":"<PartyAwaitingBitChallenge as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":106939,"byte_end":106965,"line_start":264,"line_end":264,"column_start":12,"column_end":38},"name":"PartyAwaitingPolyChallenge","qualname":"::range_proof::party::PartyAwaitingPolyChallenge","value":"PartyAwaitingPolyChallenge {  }","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"decl_id":null,"docs":" A party which has committed to their polynomial coefficents\n and is waiting for the polynomial challenge from the dealer.\n","sig":null,"attributes":[{"value":"/ A party which has committed to their polynomial coefficents","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":106799,"byte_end":106862,"line_start":262,"line_end":262,"column_start":1,"column_end":64}},{"value":"/ and is waiting for the polynomial challenge from the dealer.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":106863,"byte_end":106927,"line_start":263,"line_end":263,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":107341,"byte_end":107356,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"apply_challenge","qualname":"<PartyAwaitingPolyChallenge>::apply_challenge","value":"fn apply_challenge(Self, &PolyChallenge) -> Result<ProofShare, MPCError>","parent":null,"children":[],"decl_id":null,"docs":" Receive a [`PolyChallenge`] from the dealer and compute the\n party's proof share.\n","sig":null,"attributes":[{"value":"/ Receive a [`PolyChallenge`] from the dealer and compute the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":107237,"byte_end":107300,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ party's proof share.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":107305,"byte_end":107329,"line_start":278,"line_end":278,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":108315,"byte_end":108319,"line_start":310,"line_end":310,"column_start":8,"column_end":12},"name":"drop","qualname":"<PartyAwaitingPolyChallenge as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51452,"byte_end":51462,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"RangeProof","qualname":"::range_proof::RangeProof","value":"RangeProof {  }","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622}],"decl_id":null,"docs":" The `RangeProof` struct represents a proof that one or more values\n are in a range.","sig":null,"attributes":[{"value":"/ The `RangeProof` struct represents a proof that one or more values","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50334,"byte_end":50404,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ are in a range.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50405,"byte_end":50424,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50425,"byte_end":50428,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The `RangeProof` struct contains functions for creating and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50429,"byte_end":50492,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ verifying aggregated range proofs.  The single-value case is","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50493,"byte_end":50557,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ implemented as a special case of aggregated range proofs.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50558,"byte_end":50619,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50620,"byte_end":50623,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The bitsize of the range, as well as the list of commitments to","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50624,"byte_end":50691,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ the values, are not included in the proof, and must be known to","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50692,"byte_end":50759,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/ the verifier.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50760,"byte_end":50777,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50778,"byte_end":50781,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This implementation requires that both the bitsize `n` and the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50782,"byte_end":50848,"line_start":46,"line_end":46,"column_start":1,"column_end":67}},{"value":"/ aggregation size `m` be powers of two, so that `n = 8, 16, 32, 64`","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50849,"byte_end":50919,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ and `m = 1, 2, 4, 8, 16, ...`.  Note that the aggregation size is","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50920,"byte_end":50989,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ not given as an explicit parameter, but is determined by the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50990,"byte_end":51054,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/ number of values or commitments passed to the prover or verifier.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51055,"byte_end":51124,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51125,"byte_end":51128,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51129,"byte_end":51139,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51140,"byte_end":51143,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ For proving, these functions run the multiparty aggregation","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51144,"byte_end":51207,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/ protocol locally.  That API is exposed in the [`aggregation`](::range_proof_mpc)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51208,"byte_end":51292,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/ module and can be used to perform online aggregation between","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51293,"byte_end":51357,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ parties without revealing secret values to each other.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":51358,"byte_end":51416,"line_start":57,"line_end":57,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54269,"byte_end":54290,"line_start":135,"line_end":135,"column_start":12,"column_end":33},"name":"prove_single_with_rng","qualname":"<RangeProof>::prove_single_with_rng","value":"fn prove_single_with_rng<T>(&BulletproofGens, &PedersenGens, &mut Transcript,\nu64, &Scalar, usize, &mut T)\n-> Result<(RangeProof, CompressedRistretto), ProofError> where T: RngCore +\nCryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Create a rangeproof for a given pair of value `v` and\n blinding scalar `v_blinding`.\n This is a convenience wrapper around [`RangeProof::prove_multiple`].","sig":null,"attributes":[{"value":"/ Create a rangeproof for a given pair of value `v` and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52203,"byte_end":52260,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/ blinding scalar `v_blinding`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52265,"byte_end":52298,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/ This is a convenience wrapper around [`RangeProof::prove_multiple`].","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52303,"byte_end":52375,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52380,"byte_end":52383,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52388,"byte_end":52401,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52406,"byte_end":52413,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52418,"byte_end":52440,"line_start":85,"line_end":85,"column_start":5,"column_end":27}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52445,"byte_end":52470,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52475,"byte_end":52478,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ extern crate curve25519_dalek;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52483,"byte_end":52517,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52522,"byte_end":52563,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52568,"byte_end":52571,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ extern crate merlin;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52576,"byte_end":52600,"line_start":91,"line_end":91,"column_start":5,"column_end":29}},{"value":"/ use merlin::Transcript;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52605,"byte_end":52632,"line_start":92,"line_end":92,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52637,"byte_end":52640,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ extern crate bulletproofs;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52645,"byte_end":52675,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/ use bulletproofs::{BulletproofGens, PedersenGens, RangeProof};","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52680,"byte_end":52746,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52751,"byte_end":52754,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52759,"byte_end":52776,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/ // Generators for Pedersen commitments.  These can be selected","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52781,"byte_end":52847,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ // independently of the Bulletproofs generators.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52852,"byte_end":52904,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/ let pc_gens = PedersenGens::default();","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52909,"byte_end":52951,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52956,"byte_end":52959,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ // Generators for Bulletproofs, valid for proofs up to bitsize 64","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52964,"byte_end":53033,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ // and aggregation size up to 1.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53038,"byte_end":53074,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/ let bp_gens = BulletproofGens::new(64, 1);","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53079,"byte_end":53125,"line_start":104,"line_end":104,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53130,"byte_end":53133,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // A secret value we want to prove lies in the range [0, 2^32)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53138,"byte_end":53204,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ let secret_value = 1037578891u64;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53209,"byte_end":53246,"line_start":107,"line_end":107,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53251,"byte_end":53254,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ // The API takes a blinding factor for the commitment.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53259,"byte_end":53317,"line_start":109,"line_end":109,"column_start":5,"column_end":63}},{"value":"/ let blinding = Scalar::random(&mut thread_rng());","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53322,"byte_end":53375,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53380,"byte_end":53383,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ // The proof can be chained to an existing transcript.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53388,"byte_end":53446,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/ // Here we create a transcript with a doctest domain separator.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53451,"byte_end":53518,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/ let mut prover_transcript = Transcript::new(b\"doctest example\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53523,"byte_end":53591,"line_start":114,"line_end":114,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53596,"byte_end":53599,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Create a 32-bit rangeproof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53604,"byte_end":53638,"line_start":116,"line_end":116,"column_start":5,"column_end":39}},{"value":"/ let (proof, committed_value) = RangeProof::prove_single(","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53643,"byte_end":53703,"line_start":117,"line_end":117,"column_start":5,"column_end":65}},{"value":"/     &bp_gens,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53708,"byte_end":53725,"line_start":118,"line_end":118,"column_start":5,"column_end":22}},{"value":"/     &pc_gens,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53730,"byte_end":53747,"line_start":119,"line_end":119,"column_start":5,"column_end":22}},{"value":"/     &mut prover_transcript,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53752,"byte_end":53783,"line_start":120,"line_end":120,"column_start":5,"column_end":36}},{"value":"/     secret_value,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53788,"byte_end":53809,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     &blinding,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53814,"byte_end":53832,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/     32,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53837,"byte_end":53848,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/ ).expect(\"A real program could handle errors\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53853,"byte_end":53904,"line_start":124,"line_end":124,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53909,"byte_end":53912,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // Verification requires a transcript with identical initial state:","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53917,"byte_end":53988,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ let mut verifier_transcript = Transcript::new(b\"doctest example\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":53993,"byte_end":54063,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ assert!(","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54068,"byte_end":54080,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     proof","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54085,"byte_end":54098,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/         .verify_single(&bp_gens, &pc_gens, &mut verifier_transcript, &committed_value, 32)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54103,"byte_end":54197,"line_start":130,"line_end":130,"column_start":5,"column_end":99}},{"value":"/         .is_ok()","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54202,"byte_end":54222,"line_start":131,"line_end":131,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54227,"byte_end":54233,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54238,"byte_end":54245,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54250,"byte_end":54257,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55074,"byte_end":55086,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"prove_single","qualname":"<RangeProof>::prove_single","value":"fn prove_single(&BulletproofGens, &PedersenGens, &mut Transcript, u64,\n&Scalar, usize) -> Result<(RangeProof, CompressedRistretto), ProofError>","parent":null,"children":[],"decl_id":null,"docs":" Create a rangeproof for a given pair of value `v` and\n blinding scalar `v_blinding`.\n This is a convenience wrapper around [`RangeProof::prove_single_with_rng`],\n passing in a threadsafe RNG.\n","sig":null,"attributes":[{"value":"/ Create a rangeproof for a given pair of value `v` and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54818,"byte_end":54875,"line_start":156,"line_end":156,"column_start":5,"column_end":62}},{"value":"/ blinding scalar `v_blinding`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54880,"byte_end":54913,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/ This is a convenience wrapper around [`RangeProof::prove_single_with_rng`],","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":54918,"byte_end":54997,"line_start":158,"line_end":158,"column_start":5,"column_end":84}},{"value":"/ passing in a threadsafe RNG.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55002,"byte_end":55034,"line_start":159,"line_end":159,"column_start":5,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55039,"byte_end":55062,"line_start":160,"line_end":160,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57590,"byte_end":57613,"line_start":234,"line_end":234,"column_start":12,"column_end":35},"name":"prove_multiple_with_rng","qualname":"<RangeProof>::prove_multiple_with_rng","value":"fn prove_multiple_with_rng<T>(&BulletproofGens, &PedersenGens,\n&mut Transcript, &[u64], &[Scalar], usize, &mut T)\n-> Result<(RangeProof, Vec<CompressedRistretto>), ProofError> where\nT: RngCore + CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Create a rangeproof for a set of values.","sig":null,"attributes":[{"value":"/ Create a rangeproof for a set of values.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55535,"byte_end":55579,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55584,"byte_end":55587,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55592,"byte_end":55605,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55610,"byte_end":55617,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55622,"byte_end":55644,"line_start":184,"line_end":184,"column_start":5,"column_end":27}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55649,"byte_end":55674,"line_start":185,"line_end":185,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55679,"byte_end":55682,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ extern crate curve25519_dalek;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55687,"byte_end":55721,"line_start":187,"line_end":187,"column_start":5,"column_end":39}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55726,"byte_end":55767,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55772,"byte_end":55775,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ extern crate merlin;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55780,"byte_end":55804,"line_start":190,"line_end":190,"column_start":5,"column_end":29}},{"value":"/ use merlin::Transcript;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55809,"byte_end":55836,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55841,"byte_end":55844,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ extern crate bulletproofs;","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55849,"byte_end":55879,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/ use bulletproofs::{BulletproofGens, PedersenGens, RangeProof};","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55884,"byte_end":55950,"line_start":194,"line_end":194,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55955,"byte_end":55958,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55963,"byte_end":55980,"line_start":196,"line_end":196,"column_start":5,"column_end":22}},{"value":"/ // Generators for Pedersen commitments.  These can be selected","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":55985,"byte_end":56051,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ // independently of the Bulletproofs generators.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56056,"byte_end":56108,"line_start":198,"line_end":198,"column_start":5,"column_end":57}},{"value":"/ let pc_gens = PedersenGens::default();","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56113,"byte_end":56155,"line_start":199,"line_end":199,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56160,"byte_end":56163,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // Generators for Bulletproofs, valid for proofs up to bitsize 64","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56168,"byte_end":56237,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/ // and aggregation size up to 16.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56242,"byte_end":56279,"line_start":202,"line_end":202,"column_start":5,"column_end":42}},{"value":"/ let bp_gens = BulletproofGens::new(64, 16);","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56284,"byte_end":56331,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56336,"byte_end":56339,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ // Four secret values we want to prove lie in the range [0, 2^32)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56344,"byte_end":56413,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ let secrets = [4242344947u64, 3718732727u64, 2255562556u64, 2526146994u64];","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56418,"byte_end":56497,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56502,"byte_end":56505,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ // The API takes blinding factors for the commitments.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56510,"byte_end":56568,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/ let blindings: Vec<_> = (0..4).map(|_| Scalar::random(&mut thread_rng())).collect();","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56573,"byte_end":56661,"line_start":209,"line_end":209,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56666,"byte_end":56669,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // The proof can be chained to an existing transcript.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56674,"byte_end":56732,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/ // Here we create a transcript with a doctest domain separator.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56737,"byte_end":56804,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ let mut prover_transcript = Transcript::new(b\"doctest example\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56809,"byte_end":56877,"line_start":213,"line_end":213,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56882,"byte_end":56885,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ // Create an aggregated 32-bit rangeproof and corresponding commitments.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56890,"byte_end":56966,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ let (proof, commitments) = RangeProof::prove_multiple(","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":56971,"byte_end":57029,"line_start":216,"line_end":216,"column_start":5,"column_end":63}},{"value":"/     &bp_gens,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57034,"byte_end":57051,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/     &pc_gens,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57056,"byte_end":57073,"line_start":218,"line_end":218,"column_start":5,"column_end":22}},{"value":"/     &mut prover_transcript,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57078,"byte_end":57109,"line_start":219,"line_end":219,"column_start":5,"column_end":36}},{"value":"/     &secrets,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57114,"byte_end":57131,"line_start":220,"line_end":220,"column_start":5,"column_end":22}},{"value":"/     &blindings,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57136,"byte_end":57155,"line_start":221,"line_end":221,"column_start":5,"column_end":24}},{"value":"/     32,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57160,"byte_end":57171,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/ ).expect(\"A real program could handle errors\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57176,"byte_end":57227,"line_start":223,"line_end":223,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57232,"byte_end":57235,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ // Verification requires a transcript with identical initial state:","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57240,"byte_end":57311,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ let mut verifier_transcript = Transcript::new(b\"doctest example\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57316,"byte_end":57386,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ assert!(","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57391,"byte_end":57403,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/     proof","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57408,"byte_end":57421,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/         .verify_multiple(&bp_gens, &pc_gens, &mut verifier_transcript, &commitments, 32)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57426,"byte_end":57518,"line_start":229,"line_end":229,"column_start":5,"column_end":97}},{"value":"/         .is_ok()","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57523,"byte_end":57543,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57548,"byte_end":57554,"line_start":231,"line_end":231,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57559,"byte_end":57566,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":57571,"byte_end":57578,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":59834,"byte_end":59848,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"prove_multiple","qualname":"<RangeProof>::prove_multiple","value":"fn prove_multiple(&BulletproofGens, &PedersenGens, &mut Transcript, &[u64],\n&[Scalar], usize)\n-> Result<(RangeProof, Vec<CompressedRistretto>), ProofError>","parent":null,"children":[],"decl_id":null,"docs":" Create a rangeproof for a set of values.\n This is a convenience wrapper around [`RangeProof::prove_multiple_with_rng`],\n passing in a threadsafe RNG.\n","sig":null,"attributes":[{"value":"/ Create a rangeproof for a set of values.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":59627,"byte_end":59671,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ This is a convenience wrapper around [`RangeProof::prove_multiple_with_rng`],","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":59676,"byte_end":59757,"line_start":291,"line_end":291,"column_start":5,"column_end":86}},{"value":"/ passing in a threadsafe RNG.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":59762,"byte_end":59794,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":59799,"byte_end":59822,"line_start":293,"line_end":293,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":60483,"byte_end":60505,"line_start":316,"line_end":316,"column_start":12,"column_end":34},"name":"verify_single_with_rng","qualname":"<RangeProof>::verify_single_with_rng","value":"fn verify_single_with_rng<T>(&Self, &BulletproofGens, &PedersenGens,\n&mut Transcript, &CompressedRistretto, usize, &mut T)\n-> Result<(), ProofError> where T: RngCore + CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Verifies a rangeproof for a given value commitment \\\\(V\\\\).","sig":null,"attributes":[{"value":"/ Verifies a rangeproof for a given value commitment \\\\(V\\\\).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":60317,"byte_end":60380,"line_start":313,"line_end":313,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":60385,"byte_end":60388,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This is a convenience wrapper around `verify_multiple` for the `m=1` case.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":60393,"byte_end":60471,"line_start":315,"line_end":315,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":61083,"byte_end":61096,"line_start":333,"line_end":333,"column_start":12,"column_end":25},"name":"verify_single","qualname":"<RangeProof>::verify_single","value":"fn verify_single(&Self, &BulletproofGens, &PedersenGens, &mut Transcript,\n&CompressedRistretto, usize) -> Result<(), ProofError>","parent":null,"children":[],"decl_id":null,"docs":" Verifies a rangeproof for a given value commitment \\\\(V\\\\).","sig":null,"attributes":[{"value":"/ Verifies a rangeproof for a given value commitment \\\\(V\\\\).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":60850,"byte_end":60913,"line_start":328,"line_end":328,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":60918,"byte_end":60921,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This is a convenience wrapper around [`RangeProof::verify_single_with_rng`],","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":60926,"byte_end":61006,"line_start":330,"line_end":330,"column_start":5,"column_end":85}},{"value":"/ passing in a threadsafe RNG.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":61011,"byte_end":61043,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":61048,"byte_end":61071,"line_start":332,"line_end":332,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":61486,"byte_end":61510,"line_start":345,"line_end":345,"column_start":12,"column_end":36},"name":"verify_multiple_with_rng","qualname":"<RangeProof>::verify_multiple_with_rng","value":"fn verify_multiple_with_rng<T>(&Self, &BulletproofGens, &PedersenGens,\n&mut Transcript, &[CompressedRistretto], usize, &mut T)\n-> Result<(), ProofError> where T: RngCore + CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Verifies an aggregated rangeproof for the given value commitments.\n","sig":null,"attributes":[{"value":"/ Verifies an aggregated rangeproof for the given value commitments.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":61404,"byte_end":61474,"line_start":344,"line_end":344,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66161,"byte_end":66176,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"verify_multiple","qualname":"<RangeProof>::verify_multiple","value":"fn verify_multiple(&Self, &BulletproofGens, &PedersenGens, &mut Transcript,\n&[CompressedRistretto], usize) -> Result<(), ProofError>","parent":null,"children":[],"decl_id":null,"docs":" Verifies an aggregated rangeproof for the given value commitments.\n This is a convenience wrapper around [`RangeProof::verify_multiple_with_rng`],\n passing in a threadsafe RNG.\n","sig":null,"attributes":[{"value":"/ Verifies an aggregated rangeproof for the given value commitments.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":65927,"byte_end":65997,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/ This is a convenience wrapper around [`RangeProof::verify_multiple_with_rng`],","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66002,"byte_end":66084,"line_start":455,"line_end":455,"column_start":5,"column_end":87}},{"value":"/ passing in a threadsafe RNG.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66089,"byte_end":66121,"line_start":456,"line_end":456,"column_start":5,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66126,"byte_end":66149,"line_start":457,"line_end":457,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":67086,"byte_end":67094,"line_start":487,"line_end":487,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<RangeProof>::to_bytes","value":"fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serializes the proof into a byte array of \\\\(2 \\lg n + 9\\\\)\n 32-byte elements, where \\\\(n\\\\) is the number of secret bits.","sig":null,"attributes":[{"value":"/ Serializes the proof into a byte array of \\\\(2 \\lg n + 9\\\\)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66603,"byte_end":66666,"line_start":476,"line_end":476,"column_start":5,"column_end":68}},{"value":"/ 32-byte elements, where \\\\(n\\\\) is the number of secret bits.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66671,"byte_end":66736,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66741,"byte_end":66744,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Layout","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66749,"byte_end":66761,"line_start":479,"line_end":479,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66766,"byte_end":66769,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ The layout of the range proof encoding is:","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66774,"byte_end":66820,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66825,"byte_end":66828,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ * four compressed Ristretto points \\\\(A,S,T_1,T_2\\\\),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66833,"byte_end":66890,"line_start":483,"line_end":483,"column_start":5,"column_end":62}},{"value":"/ * three scalars \\\\(t_x, \\tilde{t}_x, \\tilde{e}\\\\),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66895,"byte_end":66949,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/ * \\\\(n\\\\) pairs of compressed Ristretto points \\\\(L_0,R_0\\dots,L_{n-1},R_{n-1}\\\\),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":66954,"byte_end":67040,"line_start":485,"line_end":485,"column_start":5,"column_end":91}},{"value":"/ * two scalars \\\\(a, b\\\\).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":67045,"byte_end":67074,"line_start":486,"line_end":486,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":67866,"byte_end":67876,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<RangeProof>::from_bytes","value":"fn from_bytes(&[u8]) -> Result<RangeProof, ProofError>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the proof from a byte slice.","sig":null,"attributes":[{"value":"/ Deserializes the proof from a byte slice.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":67720,"byte_end":67765,"line_start":501,"line_end":501,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":67770,"byte_end":67773,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the byte slice cannot be parsed into a `RangeProof`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":67778,"byte_end":67854,"line_start":503,"line_end":503,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69092,"byte_end":69101,"line_start":542,"line_end":542,"column_start":8,"column_end":17},"name":"serialize","qualname":"<RangeProof as range_proof::messages::_::_serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":37,"index":2078},"children":[],"decl_id":{"krate":37,"index":2079},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69310,"byte_end":69321,"line_start":551,"line_end":551,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<RangeProof as range_proof::messages::_::_serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":37,"index":1539},"children":[],"decl_id":{"krate":37,"index":1541},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":702},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1207,"byte_end":1222,"line_start":42,"line_end":42,"column_start":9,"column_end":24},"name":"range_proof_mpc","qualname":"::range_proof_mpc","value":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":715},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"r1cs","qualname":"::r1cs","value":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/mod.rs","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":747},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":892},{"krate":0,"index":1036},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"yoloproofs\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1386,"byte_end":1416,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1417,"byte_end":1440,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":734},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113084,"byte_end":113100,"line_start":19,"line_end":19,"column_start":11,"column_end":27},"name":"ConstraintSystem","qualname":"::r1cs::constraint_system::ConstraintSystem","value":"ConstraintSystem","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"decl_id":null,"docs":" The interface for a constraint system, abstracting over the prover\n and verifier's roles.","sig":null,"attributes":[{"value":"/ The interface for a constraint system, abstracting over the prover","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112434,"byte_end":112504,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ and verifier's roles.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112505,"byte_end":112530,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112531,"byte_end":112534,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Statements to be proved by an [`R1CSProof`](::r1cs::R1CSProof) are specified by","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112535,"byte_end":112618,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/ programmatically constructing constraints.  These constraints need","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112619,"byte_end":112689,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ to be identical between the prover and verifier, since the prover","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112690,"byte_end":112759,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ and verifier need to construct the same statement.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112760,"byte_end":112814,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112815,"byte_end":112818,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ To prevent code duplication or mismatches between the prover and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112819,"byte_end":112887,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ verifier, gadgets for the constraint system should be written","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112888,"byte_end":112953,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ using the `ConstraintSystem` trait, so that the prover and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":112954,"byte_end":113016,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/ verifier share the logic for specifying constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113017,"byte_end":113073,"line_start":18,"line_end":18,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113305,"byte_end":113315,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"transcript","qualname":"::r1cs::constraint_system::ConstraintSystem::transcript","value":"fn transcript(&mut Self) -> &mut Transcript","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Leases the proof transcript to the user, so they can\n add extra data to which the proof must be bound, but which\n is not available before creation of the constraint system.\n","sig":null,"attributes":[{"value":"/ Leases the proof transcript to the user, so they can","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113107,"byte_end":113163,"line_start":20,"line_end":20,"column_start":5,"column_end":61}},{"value":"/ add extra data to which the proof must be bound, but which","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113168,"byte_end":113230,"line_start":21,"line_end":21,"column_start":5,"column_end":67}},{"value":"/ is not available before creation of the constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113235,"byte_end":113297,"line_start":22,"line_end":22,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113786,"byte_end":113794,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"multiply","qualname":"::r1cs::constraint_system::ConstraintSystem::multiply","value":"fn multiply(&mut Self, LinearCombination, LinearCombination)\n-> (Variable, Variable, Variable)","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Allocate and constrain multiplication variables.","sig":null,"attributes":[{"value":"/ Allocate and constrain multiplication variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113352,"byte_end":113404,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113409,"byte_end":113412,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Allocate variables `left`, `right`, and `out`","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113417,"byte_end":113466,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"/ with the implicit constraint that","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113471,"byte_end":113508,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/ ```text","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113513,"byte_end":113524,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/ left * right = out","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113529,"byte_end":113551,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113556,"byte_end":113563,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ and add the explicit constraints that","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113568,"byte_end":113609,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ ```text","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113614,"byte_end":113625,"line_start":33,"line_end":33,"column_start":5,"column_end":16}},{"value":"/ left = left_constraint","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113630,"byte_end":113656,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/ right = right_constraint","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113661,"byte_end":113689,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113694,"byte_end":113701,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113706,"byte_end":113709,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Returns `(left, right, out)` for use in further constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113714,"byte_end":113778,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114497,"byte_end":114505,"line_start":55,"line_end":55,"column_start":8,"column_end":16},"name":"allocate","qualname":"::r1cs::constraint_system::ConstraintSystem::allocate","value":"fn allocate(&mut Self, Option<Scalar>) -> Result<Variable, R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Allocate a single variable.","sig":null,"attributes":[{"value":"/ Allocate a single variable.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113928,"byte_end":113959,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113964,"byte_end":113967,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This either allocates a new multiplier and returns its `left` variable,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":113972,"byte_end":114047,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ or returns a `right` variable of a multiplier previously allocated by this method.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114052,"byte_end":114138,"line_start":48,"line_end":48,"column_start":5,"column_end":91}},{"value":"/ The output of a multiplier is assigned on a even call, when `right` is assigned.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114143,"byte_end":114227,"line_start":49,"line_end":49,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114232,"byte_end":114235,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ When CS is committed at the end of the first or second phase, the half-assigned multiplier","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114240,"byte_end":114334,"line_start":51,"line_end":51,"column_start":5,"column_end":99}},{"value":"/ has the `right` assigned to zero and all its variables committed.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114339,"byte_end":114408,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114413,"byte_end":114416,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Returns unconstrained `Variable` for use in further constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114421,"byte_end":114489,"line_start":54,"line_end":54,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114813,"byte_end":114832,"line_start":64,"line_end":64,"column_start":8,"column_end":27},"name":"allocate_multiplier","qualname":"::r1cs::constraint_system::ConstraintSystem::allocate_multiplier","value":"fn allocate_multiplier(&mut Self, Option<(Scalar, Scalar)>)\n-> Result<(Variable, Variable, Variable), R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Allocate variables `left`, `right`, and `out`\n with the implicit constraint that\n ```text\n left * right = out\n ```","sig":null,"attributes":[{"value":"/ Allocate variables `left`, `right`, and `out`","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114582,"byte_end":114631,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"/ with the implicit constraint that","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114636,"byte_end":114673,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/ ```text","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114678,"byte_end":114689,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ left * right = out","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114694,"byte_end":114716,"line_start":60,"line_end":60,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114721,"byte_end":114728,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114733,"byte_end":114736,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Returns `(left, right, out)` for use in further constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114741,"byte_end":114805,"line_start":63,"line_end":63,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115041,"byte_end":115048,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"metrics","qualname":"::r1cs::constraint_system::ConstraintSystem::metrics","value":"fn metrics(&Self) -> crate::r1cs::Metrics","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Counts the amount of constraints in the constraint system.\n","sig":null,"attributes":[{"value":"/ Counts the amount of constraints in the constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":114971,"byte_end":115033,"line_start":69,"line_end":69,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115177,"byte_end":115186,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"constrain","qualname":"::r1cs::constraint_system::ConstraintSystem::constrain","value":"fn constrain(&mut Self, LinearCombination)","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Enforce the explicit constraint that\n ```text\n lc = 0\n ```\n","sig":null,"attributes":[{"value":"/ Enforce the explicit constraint that","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115086,"byte_end":115126,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"/ ```text","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115131,"byte_end":115142,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ lc = 0","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115147,"byte_end":115157,"line_start":74,"line_end":74,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115162,"byte_end":115169,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":741},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115672,"byte_end":115700,"line_start":84,"line_end":84,"column_start":11,"column_end":39},"name":"RandomizableConstraintSystem","qualname":"::r1cs::constraint_system::RandomizableConstraintSystem","value":"RandomizableConstraintSystem: ConstraintSystem","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" An extension to the constraint system trait that permits randomized constraints.\n Gadgets that do not use randomization should use trait bound `CS: ConstraintSystem`,\n while gadgets that need randomization should use trait bound `CS: RandomizedConstraintSystem`.\n Gadgets generally _should not_ use this trait as a bound on the CS argument: it should be used\n by the higher-order protocol that composes gadgets together.\n","sig":null,"attributes":[{"value":"/ An extension to the constraint system trait that permits randomized constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115225,"byte_end":115309,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ Gadgets that do not use randomization should use trait bound `CS: ConstraintSystem`,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115310,"byte_end":115398,"line_start":80,"line_end":80,"column_start":1,"column_end":89}},{"value":"/ while gadgets that need randomization should use trait bound `CS: RandomizedConstraintSystem`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115399,"byte_end":115497,"line_start":81,"line_end":81,"column_start":1,"column_end":99}},{"value":"/ Gadgets generally _should not_ use this trait as a bound on the CS argument: it should be used","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115498,"byte_end":115596,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/ by the higher-order protocol that composes gadgets together.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115597,"byte_end":115661,"line_start":83,"line_end":83,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":742},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115802,"byte_end":115814,"line_start":86,"line_end":86,"column_start":10,"column_end":22},"name":"RandomizedCS","qualname":"::r1cs::constraint_system::RandomizableConstraintSystem::RandomizedCS","value":"type RandomizedCS: RandomizedConstraintSystem;","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Represents a concrete type for the CS in a randomization phase.\n","sig":null,"attributes":[{"value":"/ Represents a concrete type for the CS in a randomization phase.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115725,"byte_end":115792,"line_start":85,"line_end":85,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116656,"byte_end":116686,"line_start":107,"line_end":107,"column_start":8,"column_end":38},"name":"specify_randomized_constraints","qualname":"::r1cs::constraint_system::RandomizableConstraintSystem::specify_randomized_constraints","value":"fn specify_randomized_constraints<F>(&mut Self, F) -> Result<(), R1CSError>\nwhere F: 'static + FnOnce(&mut Self::RandomizedCS) -> Result<(), R1CSError>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Specify additional variables and constraints randomized using a challenge scalar\n bound to the assignments of the non-randomized variables.","sig":null,"attributes":[{"value":"/ Specify additional variables and constraints randomized using a challenge scalar","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115849,"byte_end":115933,"line_start":88,"line_end":88,"column_start":5,"column_end":89}},{"value":"/ bound to the assignments of the non-randomized variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115938,"byte_end":115999,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116004,"byte_end":116007,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ If the constraint system’s low-level variables have not been committed yet,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116012,"byte_end":116093,"line_start":91,"line_end":91,"column_start":5,"column_end":84}},{"value":"/ the call returns `Ok()` and saves a callback until later.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116098,"byte_end":116159,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116164,"byte_end":116167,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ If the constraint system’s low-level variables are committed already,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116172,"byte_end":116247,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/ the callback is invoked immediately and its result is return from this method.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116252,"byte_end":116334,"line_start":95,"line_end":95,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116339,"byte_end":116342,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ### Usage","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116347,"byte_end":116360,"line_start":97,"line_end":97,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116365,"byte_end":116368,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Inside the closure you can generate one or more challenges using `challenge_scalar` method.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116373,"byte_end":116468,"line_start":99,"line_end":99,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116473,"byte_end":116476,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116481,"byte_end":116492,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ cs.specify_randomized_constraints(move |cs| {","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116497,"byte_end":116546,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/     let z = cs.challenge_scalar(b\"some challenge\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116551,"byte_end":116606,"line_start":103,"line_end":103,"column_start":5,"column_end":60}},{"value":"/     // ...","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116611,"byte_end":116625,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/ })","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116630,"byte_end":116636,"line_start":105,"line_end":105,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116641,"byte_end":116648,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":745},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117130,"byte_end":117156,"line_start":117,"line_end":117,"column_start":11,"column_end":37},"name":"RandomizedConstraintSystem","qualname":"::r1cs::constraint_system::RandomizedConstraintSystem","value":"RandomizedConstraintSystem: ConstraintSystem","parent":null,"children":[{"krate":0,"index":746}],"decl_id":null,"docs":" Represents a constraint system in the second phase:\n when the challenges can be sampled to create randomized constraints.","sig":null,"attributes":[{"value":"/ Represents a constraint system in the second phase:","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116831,"byte_end":116886,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/ when the challenges can be sampled to create randomized constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116887,"byte_end":116959,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116960,"byte_end":116963,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Note: this trait also includes `ConstraintSystem` trait","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":116964,"byte_end":117023,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"/ in order to allow composition of gadgets: e.g. a shuffle gadget can be used in both phases.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117024,"byte_end":117119,"line_start":116,"line_end":116,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117713,"byte_end":117729,"line_start":134,"line_end":134,"column_start":8,"column_end":24},"name":"challenge_scalar","qualname":"::r1cs::constraint_system::RandomizedConstraintSystem::challenge_scalar","value":"fn challenge_scalar(&mut Self, &'static [u8]) -> Scalar","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":" Generates a challenge scalar.","sig":null,"attributes":[{"value":"/ Generates a challenge scalar.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117181,"byte_end":117214,"line_start":118,"line_end":118,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117219,"byte_end":117222,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ### Usage","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117227,"byte_end":117240,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117245,"byte_end":117248,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This method is available only within the scope of a closure provided","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117253,"byte_end":117325,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ to `specify_randomized_constraints`, which implements","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117330,"byte_end":117387,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/ the \"randomization\" phase of the protocol.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117392,"byte_end":117438,"line_start":124,"line_end":124,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117443,"byte_end":117446,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Arbitrary number of challenges can be generated with additional calls.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117451,"byte_end":117525,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117530,"byte_end":117533,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117538,"byte_end":117549,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ cs.specify_randomized_constraints(move |cs| {","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117554,"byte_end":117603,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/     let z = cs.challenge_scalar(b\"some challenge\");","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117608,"byte_end":117663,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/     // ...","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117668,"byte_end":117682,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/ })","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117687,"byte_end":117693,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117698,"byte_end":117705,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118100,"byte_end":118109,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"name":"Committed","qualname":"::r1cs::linear_combination::Variable::Committed","value":"Variable::Committed(usize)","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":" Represents an external input specified by a commitment.\n","sig":null,"attributes":[{"value":"/ Represents an external input specified by a commitment.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118036,"byte_end":118095,"line_start":10,"line_end":10,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118110,"byte_end":118115,"line_start":11,"line_end":11,"column_start":15,"column_end":20},"name":"0","qualname":"::r1cs::linear_combination::Variable::Committed::0","value":"usize","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118182,"byte_end":118196,"line_start":13,"line_end":13,"column_start":5,"column_end":19},"name":"MultiplierLeft","qualname":"::r1cs::linear_combination::Variable::MultiplierLeft","value":"Variable::MultiplierLeft(usize)","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":" Represents the left input of a multiplication gate.\n","sig":null,"attributes":[{"value":"/ Represents the left input of a multiplication gate.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118122,"byte_end":118177,"line_start":12,"line_end":12,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118197,"byte_end":118202,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"name":"0","qualname":"::r1cs::linear_combination::Variable::MultiplierLeft::0","value":"usize","parent":{"krate":0,"index":1631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118270,"byte_end":118285,"line_start":15,"line_end":15,"column_start":5,"column_end":20},"name":"MultiplierRight","qualname":"::r1cs::linear_combination::Variable::MultiplierRight","value":"Variable::MultiplierRight(usize)","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":" Represents the right input of a multiplication gate.\n","sig":null,"attributes":[{"value":"/ Represents the right input of a multiplication gate.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118209,"byte_end":118265,"line_start":14,"line_end":14,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118286,"byte_end":118291,"line_start":15,"line_end":15,"column_start":21,"column_end":26},"name":"0","qualname":"::r1cs::linear_combination::Variable::MultiplierRight::0","value":"usize","parent":{"krate":0,"index":1634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118354,"byte_end":118370,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"MultiplierOutput","qualname":"::r1cs::linear_combination::Variable::MultiplierOutput","value":"Variable::MultiplierOutput(usize)","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":" Represents the output of a multiplication gate.\n","sig":null,"attributes":[{"value":"/ Represents the output of a multiplication gate.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118298,"byte_end":118349,"line_start":16,"line_end":16,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118371,"byte_end":118376,"line_start":17,"line_end":17,"column_start":22,"column_end":27},"name":"0","qualname":"::r1cs::linear_combination::Variable::MultiplierOutput::0","value":"usize","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118418,"byte_end":118421,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"One","qualname":"::r1cs::linear_combination::Variable::One","value":"Variable::One()","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":" Represents the constant 1.\n","sig":null,"attributes":[{"value":"/ Represents the constant 1.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118383,"byte_end":118413,"line_start":18,"line_end":18,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118021,"byte_end":118029,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Variable","qualname":"::r1cs::linear_combination::Variable","value":"enum Variable {\n    Committed(usize),\n    MultiplierLeft(usize),\n    MultiplierRight(usize),\n    MultiplierOutput(usize),\n    One(),\n}","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1640}],"decl_id":null,"docs":" Represents a variable in a constraint system.\n","sig":null,"attributes":[{"value":"/ Represents a variable in a constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":117921,"byte_end":117970,"line_start":7,"line_end":7,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118479,"byte_end":118483,"line_start":23,"line_end":23,"column_start":8,"column_end":12},"name":"from","qualname":"<LinearCombination as std::convert::From>::from","value":"fn from(Variable) -> LinearCombination","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118673,"byte_end":118677,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"from","qualname":"<LinearCombination as std::convert::From>::from","value":"fn from(S) -> LinearCombination","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118934,"byte_end":118937,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"neg","qualname":"<Variable as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119110,"byte_end":119113,"line_start":51,"line_end":51,"column_start":8,"column_end":11},"name":"add","qualname":"<Variable as std::ops::Add>::add","value":"fn add(Self, L) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119310,"byte_end":119313,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"sub","qualname":"<Variable as std::ops::Sub>::sub","value":"fn sub(Self, L) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119499,"byte_end":119502,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"mul","qualname":"<Variable as std::ops::Mul>::mul","value":"fn mul(Self, S) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119778,"byte_end":119781,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"add","qualname":"<Scalar as std::ops::Add>::add","value":"fn add(Self, Variable) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120021,"byte_end":120024,"line_start":89,"line_end":89,"column_start":8,"column_end":11},"name":"sub","qualname":"<Scalar as std::ops::Sub>::sub","value":"fn sub(Self, Variable) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120265,"byte_end":120268,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"mul","qualname":"<Scalar as std::ops::Mul>::mul","value":"fn mul(Self, Variable) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120581,"byte_end":120598,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"LinearCombination","qualname":"::r1cs::linear_combination::LinearCombination","value":"LinearCombination {  }","parent":null,"children":[{"krate":0,"index":1652}],"decl_id":null,"docs":" Represents a linear combination of\n [`Variables`](::r1cs::Variable).  Each term is represented by a\n `(Variable, Scalar)` pair.\n","sig":null,"attributes":[{"value":"/ Represents a linear combination of","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120397,"byte_end":120435,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/ [`Variables`](::r1cs::Variable).  Each term is represented by a","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120436,"byte_end":120503,"line_start":107,"line_end":107,"column_start":1,"column_end":68}},{"value":"/ `(Variable, Scalar)` pair.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120504,"byte_end":120534,"line_start":108,"line_end":108,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120695,"byte_end":120702,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"default","qualname":"<LinearCombination as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120841,"byte_end":120850,"line_start":121,"line_end":121,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<LinearCombination as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = (Variable, Scalar)>","parent":{"krate":2,"index":7994},"children":[],"decl_id":{"krate":2,"index":7996},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121110,"byte_end":121119,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<LinearCombination as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item =\n&'a (Variable, Scalar)>","parent":{"krate":2,"index":7994},"children":[],"decl_id":{"krate":2,"index":7996},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121449,"byte_end":121452,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"add","qualname":"<LinearCombination as std::ops::Add>::add","value":"fn add(Self, L) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121703,"byte_end":121706,"line_start":156,"line_end":156,"column_start":8,"column_end":11},"name":"sub","qualname":"<LinearCombination as std::ops::Sub>::sub","value":"fn sub(Self, L) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121986,"byte_end":121989,"line_start":166,"line_end":166,"column_start":8,"column_end":11},"name":"mul","qualname":"<Scalar as std::ops::Mul>::mul","value":"fn mul(Self, LinearCombination) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":122314,"byte_end":122317,"line_start":179,"line_end":179,"column_start":8,"column_end":11},"name":"neg","qualname":"<LinearCombination as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":122530,"byte_end":122533,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"mul","qualname":"<LinearCombination as std::ops::Mul>::mul","value":"fn mul(Self, S) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":122883,"byte_end":122890,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"Metrics","qualname":"::r1cs::metrics::Metrics","value":"Metrics { multipliers, constraints, phase_one_constraints, phase_two_constraints }","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"decl_id":null,"docs":" A struct that contains metrics about a constraint system.","sig":null,"attributes":[{"value":"/ A struct that contains metrics about a constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":122708,"byte_end":122769,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":122770,"byte_end":122773,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`ConstraintSystem::metrics`](::r1cs::ConstraintSystem::metrics).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":122774,"byte_end":122847,"line_start":3,"line_end":3,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":122972,"byte_end":122983,"line_start":7,"line_end":7,"column_start":9,"column_end":20},"name":"multipliers","qualname":"::r1cs::metrics::Metrics::multipliers","value":"usize","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" Number of multiplicative constraints in the constraint system.\n","sig":null,"attributes":[{"value":"/ Number of multiplicative constraints in the constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":122897,"byte_end":122963,"line_start":6,"line_end":6,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":123069,"byte_end":123080,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"name":"constraints","qualname":"::r1cs::metrics::Metrics::constraints","value":"usize","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" Total number of linear constraints in the constraint system.\n","sig":null,"attributes":[{"value":"/ Total number of linear constraints in the constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":122996,"byte_end":123060,"line_start":8,"line_end":8,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":123168,"byte_end":123189,"line_start":11,"line_end":11,"column_start":9,"column_end":30},"name":"phase_one_constraints","qualname":"::r1cs::metrics::Metrics::phase_one_constraints","value":"usize","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" Number of linear constraints added in pre-randomization phase.\n","sig":null,"attributes":[{"value":"/ Number of linear constraints added in pre-randomization phase.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":123093,"byte_end":123159,"line_start":10,"line_end":10,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":123277,"byte_end":123298,"line_start":13,"line_end":13,"column_start":9,"column_end":30},"name":"phase_two_constraints","qualname":"::r1cs::metrics::Metrics::phase_two_constraints","value":"usize","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" Number of linear constraints added in the randomization phase.\n","sig":null,"attributes":[{"value":"/ Number of linear constraints added in the randomization phase.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/metrics.rs","byte_start":123202,"byte_end":123268,"line_start":12,"line_end":12,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124696,"byte_end":124705,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"R1CSProof","qualname":"::r1cs::proof::R1CSProof","value":"R1CSProof {  }","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685}],"decl_id":null,"docs":" A proof of some statement specified by a\n [`ConstraintSystem`](::r1cs::ConstraintSystem).","sig":null,"attributes":[{"value":"/ A proof of some statement specified by a","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":123788,"byte_end":123832,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/ [`ConstraintSystem`](::r1cs::ConstraintSystem).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":123833,"byte_end":123884,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":123885,"byte_end":123888,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Statements are specified by writing gadget functions which add","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":123889,"byte_end":123955,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ constraints to a [`ConstraintSystem`](::r1cs::ConstraintSystem)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":123956,"byte_end":124023,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ implementation.  To construct an [`R1CSProof`], a prover constructs","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124024,"byte_end":124095,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ a [`ProverCS`](::r1cs::ProverCS), then passes it to gadget","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124096,"byte_end":124158,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/ functions to build the constraint system, then consumes the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124159,"byte_end":124222,"line_start":25,"line_end":25,"column_start":1,"column_end":64}},{"value":"/ constraint system using","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124223,"byte_end":124250,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [`ProverCS::prove`](::r1cs::ProverCS::prove) to produce an","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124251,"byte_end":124313,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ [`R1CSProof`].  To verify an [`R1CSProof`], a verifier constructs a","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124314,"byte_end":124385,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ [`VerifierCS`](::r1cs::VerifierCS), then passes it to the same","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124386,"byte_end":124452,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ gadget functions to (re)build the constraint system, then consumes","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124453,"byte_end":124523,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ the constraint system using","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124524,"byte_end":124555,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ [`VerifierCS::verify`](::r1cs::VerifierCS::verify) to verify the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124556,"byte_end":124624,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124625,"byte_end":124635,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":124660,"byte_end":124684,"line_start":35,"line_end":35,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":127128,"byte_end":127136,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<R1CSProof>::to_bytes","value":"fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serializes the proof into a byte array of 1 version byte + \\\\((13 or 16) + 2k\\\\) 32-byte elements,\n where \\\\(k=\\lceil \\log_2(n) \\rceil\\\\) and \\\\(n\\\\) is the number of multiplication gates.","sig":null,"attributes":[{"value":"/ Serializes the proof into a byte array of 1 version byte + \\\\((13 or 16) + 2k\\\\) 32-byte elements,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126344,"byte_end":126446,"line_start":71,"line_end":71,"column_start":5,"column_end":107}},{"value":"/ where \\\\(k=\\lceil \\log_2(n) \\rceil\\\\) and \\\\(n\\\\) is the number of multiplication gates.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126451,"byte_end":126543,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126548,"byte_end":126551,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Layout","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126556,"byte_end":126568,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126573,"byte_end":126576,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The layout of the r1cs proof encoding is:","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126581,"byte_end":126626,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/ * 1 version byte indicating whether the proof contains second-phase commitments or not,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126631,"byte_end":126722,"line_start":77,"line_end":77,"column_start":5,"column_end":96}},{"value":"/ * 8 or 11 compressed Ristretto points \\\\(A_{I1},A_{O1},S_1,(A_{I2},A_{O2},S_2),T_1,...,T_6\\\\)","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126727,"byte_end":126824,"line_start":78,"line_end":78,"column_start":5,"column_end":102}},{"value":"/   (\\\\(A_{I2},A_{O2},S_2\\\\) are skipped if there were no multipliers added in the randomized phase),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126829,"byte_end":126932,"line_start":79,"line_end":79,"column_start":5,"column_end":108}},{"value":"/ * three scalars \\\\(t_x, \\tilde{t}_x, \\tilde{e}\\\\),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126937,"byte_end":126991,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"/ * \\\\(k\\\\) pairs of compressed Ristretto points \\\\(L_0,R_0\\dots,L_{k-1},R_{k-1}\\\\),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126996,"byte_end":127082,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ * two scalars \\\\(a, b\\\\).","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":127087,"byte_end":127116,"line_start":82,"line_end":82,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":128481,"byte_end":128496,"line_start":112,"line_end":112,"column_start":12,"column_end":27},"name":"serialized_size","qualname":"<R1CSProof>::serialized_size","value":"fn serialized_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size in bytes required to serialize the `R1CSProof`.\n","sig":null,"attributes":[{"value":"/ Returns the size in bytes required to serialize the `R1CSProof`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":128401,"byte_end":128469,"line_start":111,"line_end":111,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":129049,"byte_end":129059,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<R1CSProof>::from_bytes","value":"fn from_bytes(&[u8]) -> Result<R1CSProof, R1CSError>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the proof from a byte slice.","sig":null,"attributes":[{"value":"/ Deserializes the proof from a byte slice.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":128904,"byte_end":128949,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":128954,"byte_end":128957,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the byte slice cannot be parsed into a `R1CSProof`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":128962,"byte_end":129037,"line_start":128,"line_end":128,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131545,"byte_end":131554,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"serialize","qualname":"<R1CSProof as range_proof::messages::_::_serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":37,"index":2078},"children":[],"decl_id":{"krate":37,"index":2079},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131762,"byte_end":131773,"line_start":217,"line_end":217,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<R1CSProof as range_proof::messages::_::_serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":37,"index":1539},"children":[],"decl_id":{"krate":37,"index":1541},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":960},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":134067,"byte_end":134073,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Prover","qualname":"::r1cs::prover::Prover","value":"Prover {  }","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968}],"decl_id":null,"docs":" A [`ConstraintSystem`] implementation for use by the prover.","sig":null,"attributes":[{"value":"/ A [`ConstraintSystem`] implementation for use by the prover.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133553,"byte_end":133617,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133618,"byte_end":133621,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The prover commits high-level variables and their blinding factors `(v, v_blinding)`,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133622,"byte_end":133711,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ allocates low-level variables and creates constraints in terms of these","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133712,"byte_end":133787,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ high-level variables and low-level variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133788,"byte_end":133837,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133838,"byte_end":133841,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When all constraints are added, the proving code calls `prove`","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133842,"byte_end":133908,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ which consumes the `Prover` instance, samples random challenges","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133909,"byte_end":133976,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ that instantiate the randomized constraints, and creates a complete proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":133977,"byte_end":134055,"line_start":30,"line_end":30,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135723,"byte_end":135740,"line_start":70,"line_end":70,"column_start":12,"column_end":29},"name":"RandomizingProver","qualname":"::r1cs::prover::RandomizingProver","value":"RandomizingProver {  }","parent":null,"children":[{"krate":0,"index":978}],"decl_id":null,"docs":" Prover in the randomizing phase.","sig":null,"attributes":[{"value":"/ Prover in the randomizing phase.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135269,"byte_end":135305,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135306,"byte_end":135309,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Note: this type is exported because it is used to specify the associated type","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135310,"byte_end":135391,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ in the public impl of a trait `ConstraintSystem`, which boils down to allowing compiler to","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135392,"byte_end":135486,"line_start":66,"line_end":66,"column_start":1,"column_end":95}},{"value":"/ monomorphize the closures for the proving and verifying code.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135487,"byte_end":135552,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/ However, this type cannot be instantiated by the user and therefore can only be used within","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135553,"byte_end":135648,"line_start":68,"line_end":68,"column_start":1,"column_end":96}},{"value":"/ the callback provided to `specify_randomized_constraints`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135649,"byte_end":135711,"line_start":69,"line_end":69,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":136740,"byte_end":136750,"line_start":99,"line_end":99,"column_start":8,"column_end":18},"name":"transcript","qualname":"<Prover as r1cs::constraint_system::ConstraintSystem>::transcript","value":"fn transcript(&mut Self) -> &mut Transcript","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":735},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":136834,"byte_end":136842,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"multiply","qualname":"<Prover as r1cs::constraint_system::ConstraintSystem>::multiply","value":"fn multiply(&mut Self, LinearCombination, LinearCombination)\n-> (Variable, Variable, Variable)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":736},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":137745,"byte_end":137753,"line_start":131,"line_end":131,"column_start":8,"column_end":16},"name":"allocate","qualname":"<Prover as r1cs::constraint_system::ConstraintSystem>::allocate","value":"fn allocate(&mut Self, Option<Scalar>) -> Result<Variable, R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":737},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":138564,"byte_end":138583,"line_start":152,"line_end":152,"column_start":8,"column_end":27},"name":"allocate_multiplier","qualname":"<Prover as r1cs::constraint_system::ConstraintSystem>::allocate_multiplier","value":"fn allocate_multiplier(&mut Self, Option<(Scalar, Scalar)>)\n-> Result<(Variable, Variable, Variable), R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":738},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":139256,"byte_end":139263,"line_start":171,"line_end":171,"column_start":8,"column_end":15},"name":"metrics","qualname":"<Prover as r1cs::constraint_system::ConstraintSystem>::metrics","value":"fn metrics(&Self) -> Metrics","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":739},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":139585,"byte_end":139594,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"constrain","qualname":"<Prover as r1cs::constraint_system::ConstraintSystem>::constrain","value":"fn constrain(&mut Self, LinearCombination)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":740},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":139979,"byte_end":140009,"line_start":190,"line_end":190,"column_start":8,"column_end":38},"name":"specify_randomized_constraints","qualname":"<Prover as r1cs::constraint_system::RandomizableConstraintSystem>::specify_randomized_constraints","value":"fn specify_randomized_constraints<F>(&mut Self, F) -> Result<(), R1CSError>\nwhere F: 'static + FnOnce(&mut Self::RandomizedCS) -> Result<(), R1CSError>","parent":{"krate":0,"index":741},"children":[],"decl_id":{"krate":0,"index":743},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":140331,"byte_end":140341,"line_start":200,"line_end":200,"column_start":8,"column_end":18},"name":"transcript","qualname":"<RandomizingProver as r1cs::constraint_system::ConstraintSystem>::transcript","value":"fn transcript(&mut Self) -> &mut Transcript","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":735},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":140432,"byte_end":140440,"line_start":204,"line_end":204,"column_start":8,"column_end":16},"name":"multiply","qualname":"<RandomizingProver as r1cs::constraint_system::ConstraintSystem>::multiply","value":"fn multiply(&mut Self, LinearCombination, LinearCombination)\n-> (Variable, Variable, Variable)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":736},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":140626,"byte_end":140634,"line_start":212,"line_end":212,"column_start":8,"column_end":16},"name":"allocate","qualname":"<RandomizingProver as r1cs::constraint_system::ConstraintSystem>::allocate","value":"fn allocate(&mut Self, Option<Scalar>) -> Result<Variable, R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":737},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":140762,"byte_end":140781,"line_start":216,"line_end":216,"column_start":8,"column_end":27},"name":"allocate_multiplier","qualname":"<RandomizingProver as r1cs::constraint_system::ConstraintSystem>::allocate_multiplier","value":"fn allocate_multiplier(&mut Self, Option<(Scalar, Scalar)>)\n-> Result<(Variable, Variable, Variable), R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":738},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":140989,"byte_end":140996,"line_start":223,"line_end":223,"column_start":8,"column_end":15},"name":"metrics","qualname":"<RandomizingProver as r1cs::constraint_system::ConstraintSystem>::metrics","value":"fn metrics(&Self) -> Metrics","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":739},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141061,"byte_end":141070,"line_start":227,"line_end":227,"column_start":8,"column_end":17},"name":"constrain","qualname":"<RandomizingProver as r1cs::constraint_system::ConstraintSystem>::constrain","value":"fn constrain(&mut Self, LinearCombination)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":740},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141250,"byte_end":141266,"line_start":233,"line_end":233,"column_start":8,"column_end":24},"name":"challenge_scalar","qualname":"<RandomizingProver as r1cs::constraint_system::RandomizedConstraintSystem>::challenge_scalar","value":"fn challenge_scalar(&mut Self, &'static [u8]) -> Scalar","parent":{"krate":0,"index":745},"children":[],"decl_id":{"krate":0,"index":746},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142318,"byte_end":142321,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"new","qualname":"<Prover>::new","value":"fn new(&'g PedersenGens, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty constraint system with specified external\n input variables.","sig":null,"attributes":[{"value":"/ Construct an empty constraint system with specified external","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141444,"byte_end":141508,"line_start":239,"line_end":239,"column_start":5,"column_end":69}},{"value":"/ input variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141513,"byte_end":141533,"line_start":240,"line_end":240,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141538,"byte_end":141541,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141546,"byte_end":141558,"line_start":242,"line_end":242,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141563,"byte_end":141566,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The `bp_gens` and `pc_gens` are generators for Bulletproofs","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141571,"byte_end":141634,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ and for the Pedersen commitments, respectively.  The","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141639,"byte_end":141695,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ [`BulletproofGens`] should have `gens_capacity` greater than","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141700,"byte_end":141764,"line_start":246,"line_end":246,"column_start":5,"column_end":69}},{"value":"/ the number of multiplication constraints that will eventually","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141769,"byte_end":141834,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ be added into the constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141839,"byte_end":141879,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141884,"byte_end":141887,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The `transcript` parameter is a Merlin proof transcript.  The","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141892,"byte_end":141957,"line_start":250,"line_end":250,"column_start":5,"column_end":70}},{"value":"/ `ProverCS` holds onto the `&mut Transcript` until it consumes","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141962,"byte_end":142027,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ itself during [`ProverCS::prove`], releasing its borrow of the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142032,"byte_end":142098,"line_start":252,"line_end":252,"column_start":5,"column_end":71}},{"value":"/ transcript.  This ensures that the transcript cannot be","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142103,"byte_end":142162,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/ altered except by the `ProverCS` before proving is complete.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142167,"byte_end":142231,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142236,"byte_end":142239,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142244,"byte_end":142257,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142262,"byte_end":142265,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Returns a new `Prover` instance.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142270,"byte_end":142306,"line_start":258,"line_end":258,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143665,"byte_end":143671,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"commit","qualname":"<Prover>::commit","value":"fn commit(&mut Self, Scalar, Scalar) -> (CompressedRistretto, Variable)","parent":null,"children":[],"decl_id":null,"docs":" Creates commitment to a high-level variable and adds it to the transcript.","sig":null,"attributes":[{"value":"/ Creates commitment to a high-level variable and adds it to the transcript.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142850,"byte_end":142928,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142933,"byte_end":142936,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142941,"byte_end":142953,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142958,"byte_end":142961,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The `v` and `v_blinding` parameters are openings to the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":142966,"byte_end":143025,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/ commitment to the external variable for the constraint","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143030,"byte_end":143088,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/ system.  Passing the opening (the value together with the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143093,"byte_end":143154,"line_start":284,"line_end":284,"column_start":5,"column_end":66}},{"value":"/ blinding factor) makes it possible to reference pre-existing","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143159,"byte_end":143223,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ commitments in the constraint system.  All external variables","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143228,"byte_end":143293,"line_start":286,"line_end":286,"column_start":5,"column_end":70}},{"value":"/ must be passed up-front, so that challenges produced by","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143298,"byte_end":143357,"line_start":287,"line_end":287,"column_start":5,"column_end":64}},{"value":"/ [`ConstraintSystem::challenge_scalar`] are bound to the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143362,"byte_end":143421,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ external variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143426,"byte_end":143449,"line_start":289,"line_end":289,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143454,"byte_end":143457,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143462,"byte_end":143475,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143480,"byte_end":143483,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Returns a pair of a Pedersen commitment (as a compressed Ristretto point),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143488,"byte_end":143566,"line_start":293,"line_end":293,"column_start":5,"column_end":83}},{"value":"/ and a [`Variable`] corresponding to it, which can be used to form constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":143571,"byte_end":143653,"line_start":294,"line_end":294,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":145757,"byte_end":145761,"line_start":358,"line_end":358,"column_start":12,"column_end":16},"name":"eval","qualname":"<Prover>::eval","value":"fn eval(&Self, &LinearCombination) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the secret value of the linear combination.\n","sig":null,"attributes":[{"value":"/ Returns the secret value of the linear combination.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":145690,"byte_end":145745,"line_start":357,"line_end":357,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":147526,"byte_end":147531,"line_start":398,"line_end":398,"column_start":12,"column_end":17},"name":"prove","qualname":"<Prover>::prove","value":"fn prove(Self, &BulletproofGens) -> Result<R1CSProof, R1CSError>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `ConstraintSystem` to produce a proof.\n","sig":null,"attributes":[{"value":"/ Consume this `ConstraintSystem` to produce a proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":147459,"byte_end":147514,"line_start":397,"line_end":397,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":147836,"byte_end":147863,"line_start":404,"line_end":404,"column_start":12,"column_end":39},"name":"prove_and_return_transcript","qualname":"<Prover>::prove_and_return_transcript","value":"fn prove_and_return_transcript(Self, &BulletproofGens)\n-> Result<(R1CSProof, T), R1CSError>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `ConstraintSystem` to produce a proof. Returns the proof and the transcript passed in `Prover::new`.\n","sig":null,"attributes":[{"value":"/ Consume this `ConstraintSystem` to produce a proof. Returns the proof and the transcript passed in `Prover::new`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":147707,"byte_end":147824,"line_start":403,"line_end":403,"column_start":5,"column_end":122}}]},{"kind":"Struct","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":161156,"byte_end":161164,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Verifier","qualname":"::r1cs::verifier::Verifier","value":"Verifier {  }","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"decl_id":null,"docs":" A [`ConstraintSystem`] implementation for use by the verifier.","sig":null,"attributes":[{"value":"/ A [`ConstraintSystem`] implementation for use by the verifier.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":160658,"byte_end":160724,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":160725,"byte_end":160728,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The verifier adds high-level variable commitments to the transcript,","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":160729,"byte_end":160801,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ allocates low-level variables and creates constraints in terms of these","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":160802,"byte_end":160877,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ high-level variables and low-level variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":160878,"byte_end":160927,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":160928,"byte_end":160931,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ When all constraints are added, the verifying code calls `verify`","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":160932,"byte_end":161001,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ which consumes the `Verifier` instance, samples random challenges","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":161002,"byte_end":161071,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ that instantiate the randomized constraints, and verifies the proof.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":161072,"byte_end":161144,"line_start":28,"line_end":28,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162595,"byte_end":162614,"line_start":61,"line_end":61,"column_start":12,"column_end":31},"name":"RandomizingVerifier","qualname":"::r1cs::verifier::RandomizingVerifier","value":"RandomizingVerifier {  }","parent":null,"children":[{"krate":0,"index":1104}],"decl_id":null,"docs":" Verifier in the randomizing phase.","sig":null,"attributes":[{"value":"/ Verifier in the randomizing phase.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162139,"byte_end":162177,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162178,"byte_end":162181,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Note: this type is exported because it is used to specify the associated type","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162182,"byte_end":162263,"line_start":56,"line_end":56,"column_start":1,"column_end":82}},{"value":"/ in the public impl of a trait `ConstraintSystem`, which boils down to allowing compiler to","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162264,"byte_end":162358,"line_start":57,"line_end":57,"column_start":1,"column_end":95}},{"value":"/ monomorphize the closures for the proving and verifying code.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162359,"byte_end":162424,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/ However, this type cannot be instantiated by the user and therefore can only be used within","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162425,"byte_end":162520,"line_start":59,"line_end":59,"column_start":1,"column_end":96}},{"value":"/ the callback provided to `specify_randomized_constraints`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162521,"byte_end":162583,"line_start":60,"line_end":60,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162746,"byte_end":162756,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"transcript","qualname":"<Verifier<T> as r1cs::constraint_system::ConstraintSystem>::transcript","value":"fn transcript(&mut Self) -> &mut Transcript","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":735},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162840,"byte_end":162848,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"multiply","qualname":"<Verifier<T> as r1cs::constraint_system::ConstraintSystem>::multiply","value":"fn multiply(&mut Self, LinearCombination, LinearCombination)\n-> (Variable, Variable, Variable)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":736},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":163478,"byte_end":163486,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"allocate","qualname":"<Verifier<T> as r1cs::constraint_system::ConstraintSystem>::allocate","value":"fn allocate(&mut Self, Option<Scalar>) -> Result<Variable, R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":737},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":163960,"byte_end":163979,"line_start":107,"line_end":107,"column_start":8,"column_end":27},"name":"allocate_multiplier","qualname":"<Verifier<T> as r1cs::constraint_system::ConstraintSystem>::allocate_multiplier","value":"fn allocate_multiplier(&mut Self, Option<(Scalar, Scalar)>)\n-> Result<(Variable, Variable, Variable), R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":738},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":164403,"byte_end":164410,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"metrics","qualname":"<Verifier<T> as r1cs::constraint_system::ConstraintSystem>::metrics","value":"fn metrics(&Self) -> Metrics","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":739},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":164723,"byte_end":164732,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"constrain","qualname":"<Verifier<T> as r1cs::constraint_system::ConstraintSystem>::constrain","value":"fn constrain(&mut Self, LinearCombination)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":740},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165120,"byte_end":165150,"line_start":142,"line_end":142,"column_start":8,"column_end":38},"name":"specify_randomized_constraints","qualname":"<Verifier<T> as r1cs::constraint_system::RandomizableConstraintSystem>::specify_randomized_constraints","value":"fn specify_randomized_constraints<F>(&mut Self, F) -> Result<(), R1CSError>\nwhere F: 'static + FnOnce(&mut Self::RandomizedCS) -> Result<(), R1CSError>","parent":{"krate":0,"index":741},"children":[],"decl_id":{"krate":0,"index":743},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165466,"byte_end":165476,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"transcript","qualname":"<RandomizingVerifier<T> as r1cs::constraint_system::ConstraintSystem>::transcript","value":"fn transcript(&mut Self) -> &mut Transcript","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":735},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165569,"byte_end":165577,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"multiply","qualname":"<RandomizingVerifier<T> as r1cs::constraint_system::ConstraintSystem>::multiply","value":"fn multiply(&mut Self, LinearCombination, LinearCombination)\n-> (Variable, Variable, Variable)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":736},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165765,"byte_end":165773,"line_start":164,"line_end":164,"column_start":8,"column_end":16},"name":"allocate","qualname":"<RandomizingVerifier<T> as r1cs::constraint_system::ConstraintSystem>::allocate","value":"fn allocate(&mut Self, Option<Scalar>) -> Result<Variable, R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":737},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165903,"byte_end":165922,"line_start":168,"line_end":168,"column_start":8,"column_end":27},"name":"allocate_multiplier","qualname":"<RandomizingVerifier<T> as r1cs::constraint_system::ConstraintSystem>::allocate_multiplier","value":"fn allocate_multiplier(&mut Self, Option<(Scalar, Scalar)>)\n-> Result<(Variable, Variable, Variable), R1CSError>","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":738},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166132,"byte_end":166139,"line_start":175,"line_end":175,"column_start":8,"column_end":15},"name":"metrics","qualname":"<RandomizingVerifier<T> as r1cs::constraint_system::ConstraintSystem>::metrics","value":"fn metrics(&Self) -> Metrics","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":739},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166206,"byte_end":166215,"line_start":179,"line_end":179,"column_start":8,"column_end":17},"name":"constrain","qualname":"<RandomizingVerifier<T> as r1cs::constraint_system::ConstraintSystem>::constrain","value":"fn constrain(&mut Self, LinearCombination)","parent":{"krate":0,"index":734},"children":[],"decl_id":{"krate":0,"index":740},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166391,"byte_end":166407,"line_start":185,"line_end":185,"column_start":8,"column_end":24},"name":"challenge_scalar","qualname":"<RandomizingVerifier<T> as r1cs::constraint_system::RandomizedConstraintSystem>::challenge_scalar","value":"fn challenge_scalar(&mut Self, &'static [u8]) -> Scalar","parent":{"krate":0,"index":745},"children":[],"decl_id":{"krate":0,"index":746},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167721,"byte_end":167724,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<Verifier<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty constraint system with specified external\n input variables.","sig":null,"attributes":[{"value":"/ Construct an empty constraint system with specified external","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166620,"byte_end":166684,"line_start":194,"line_end":194,"column_start":5,"column_end":69}},{"value":"/ input variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166689,"byte_end":166709,"line_start":195,"line_end":195,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166714,"byte_end":166717,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166722,"byte_end":166734,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166739,"byte_end":166742,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The `transcript` parameter is a Merlin proof transcript.  The","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166747,"byte_end":166812,"line_start":199,"line_end":199,"column_start":5,"column_end":70}},{"value":"/ `VerifierCS` holds onto the `&mut Transcript` until it consumes","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166817,"byte_end":166884,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ itself during [`VerifierCS::verify`], releasing its borrow of the","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166889,"byte_end":166958,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/ transcript.  This ensures that the transcript cannot be","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166963,"byte_end":167022,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ altered except by the `VerifierCS` before proving is complete.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167027,"byte_end":167093,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167098,"byte_end":167101,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The `commitments` parameter is a list of Pedersen commitments","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167106,"byte_end":167171,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/ to the external variables for the constraint system.  All","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167176,"byte_end":167237,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ external variables must be passed up-front, so that challenges","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167242,"byte_end":167308,"line_start":207,"line_end":207,"column_start":5,"column_end":71}},{"value":"/ produced by [`ConstraintSystem::challenge_scalar`] are bound","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167313,"byte_end":167377,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ to the external variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167382,"byte_end":167412,"line_start":209,"line_end":209,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167417,"byte_end":167420,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167425,"byte_end":167438,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167443,"byte_end":167446,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple `(cs, vars)`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167451,"byte_end":167484,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167489,"byte_end":167492,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The first element is the newly constructed constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167497,"byte_end":167562,"line_start":215,"line_end":215,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167567,"byte_end":167570,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The second element is a list of [`Variable`]s corresponding to","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167575,"byte_end":167641,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/ the external inputs, which can be used to form constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":167646,"byte_end":167709,"line_start":218,"line_end":218,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168670,"byte_end":168676,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"commit","qualname":"<Verifier<T>>::commit","value":"fn commit(&mut Self, CompressedRistretto) -> Variable","parent":null,"children":[],"decl_id":null,"docs":" Creates commitment to a high-level variable and adds it to the transcript.","sig":null,"attributes":[{"value":"/ Creates commitment to a high-level variable and adds it to the transcript.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168043,"byte_end":168121,"line_start":232,"line_end":232,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168126,"byte_end":168129,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168134,"byte_end":168146,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168151,"byte_end":168154,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The `commitment` parameter is a Pedersen commitment","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168159,"byte_end":168214,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/ to the external variable for the constraint system.  All","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168219,"byte_end":168279,"line_start":237,"line_end":237,"column_start":5,"column_end":65}},{"value":"/ external variables must be passed up-front, so that challenges","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168284,"byte_end":168350,"line_start":238,"line_end":238,"column_start":5,"column_end":71}},{"value":"/ produced by [`ConstraintSystem::challenge_scalar`] are bound","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168355,"byte_end":168419,"line_start":239,"line_end":239,"column_start":5,"column_end":69}},{"value":"/ to the external variables.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168424,"byte_end":168454,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168459,"byte_end":168462,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168467,"byte_end":168480,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168485,"byte_end":168488,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Returns a pair of a Pedersen commitment (as a compressed Ristretto point),","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168493,"byte_end":168571,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ and a [`Variable`] corresponding to it, which can be used to form constraints.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":168576,"byte_end":168658,"line_start":245,"line_end":245,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":172284,"byte_end":172290,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"verify","qualname":"<Verifier<T>>::verify","value":"fn verify(Self, &R1CSProof, &PedersenGens, &BulletproofGens)\n-> Result<(), R1CSError>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `VerifierCS` and attempt to verify the supplied `proof`.\n The `pc_gens` and `bp_gens` are generators for Pedersen commitments and\n Bulletproofs vector commitments, respectively.  The\n [`BulletproofGens`] should have `gens_capacity` greater than\n the number of multiplication constraints that will eventually\n be added into the constraint system.\n","sig":null,"attributes":[{"value":"/ Consume this `VerifierCS` and attempt to verify the supplied `proof`.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":171875,"byte_end":171948,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ The `pc_gens` and `bp_gens` are generators for Pedersen commitments and","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":171953,"byte_end":172028,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ Bulletproofs vector commitments, respectively.  The","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":172033,"byte_end":172088,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ [`BulletproofGens`] should have `gens_capacity` greater than","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":172093,"byte_end":172157,"line_start":337,"line_end":337,"column_start":5,"column_end":69}},{"value":"/ the number of multiplication constraints that will eventually","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":172162,"byte_end":172227,"line_start":338,"line_end":338,"column_start":5,"column_end":70}},{"value":"/ be added into the constraint system.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":172232,"byte_end":172272,"line_start":339,"line_end":339,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":172618,"byte_end":172646,"line_start":350,"line_end":350,"column_start":12,"column_end":40},"name":"verify_and_return_transcript","qualname":"<Verifier<T>>::verify_and_return_transcript","value":"fn verify_and_return_transcript(Self, &R1CSProof, &PedersenGens,\n&BulletproofGens) -> Result<T, R1CSError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `verify`, but also returns the transcript back to the user.\n","sig":null,"attributes":[{"value":"/ Same as `verify`, but also returns the transcript back to the user.","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":172535,"byte_end":172606,"line_start":349,"line_end":349,"column_start":5,"column_end":76}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":2762,"byte_end":2771,"line_start":49,"line_end":49,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":3518,"byte_end":3526,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":4328,"byte_end":4336,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":5669,"byte_end":5674,"line_start":157,"line_end":157,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":5811,"byte_end":5816,"line_start":164,"line_end":164,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":5988,"byte_end":5996,"line_start":170,"line_end":170,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":6187,"byte_end":6192,"line_start":181,"line_end":181,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":6346,"byte_end":6354,"line_start":190,"line_end":190,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":6716,"byte_end":6721,"line_start":208,"line_end":208,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14821,"byte_end":14831,"line_start":50,"line_end":50,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18977,"byte_end":18986,"line_start":152,"line_end":152,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20511,"byte_end":20523,"line_start":37,"line_end":37,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20802,"byte_end":20814,"line_start":44,"line_end":44,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":21308,"byte_end":21323,"line_start":62,"line_end":62,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":21925,"byte_end":21940,"line_start":85,"line_end":85,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22020,"byte_end":22035,"line_start":91,"line_end":91,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24037,"byte_end":24052,"line_start":144,"line_end":144,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":165},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27165,"byte_end":27183,"line_start":237,"line_end":237,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":28353,"byte_end":28373,"line_start":277,"line_end":277,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/inner_product_proof.rs","byte_start":31471,"byte_end":31488,"line_start":26,"line_end":26,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":80421,"byte_end":80427,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":82496,"byte_end":82524,"line_start":96,"line_end":96,"column_start":14,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":84576,"byte_end":84605,"line_start":157,"line_end":157,"column_start":14,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":86699,"byte_end":86724,"line_start":220,"line_end":220,"column_start":14,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":94516,"byte_end":94526,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":99309,"byte_end":99314,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100341,"byte_end":100362,"line_start":74,"line_end":74,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103022,"byte_end":103043,"line_start":148,"line_end":148,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103535,"byte_end":103560,"line_start":169,"line_end":169,"column_start":10,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":106062,"byte_end":106087,"line_start":241,"line_end":241,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":107204,"byte_end":107230,"line_start":276,"line_end":276,"column_start":6,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":108279,"byte_end":108305,"line_start":309,"line_end":309,"column_start":15,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52186,"byte_end":52196,"line_start":78,"line_end":78,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69072,"byte_end":69082,"line_start":541,"line_end":541,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69290,"byte_end":69300,"line_start":550,"line_end":550,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69484,"byte_end":69501,"line_start":557,"line_end":557,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/transcript.rs","byte_start":110131,"byte_end":110141,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118452,"byte_end":118469,"line_start":22,"line_end":22,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118646,"byte_end":118663,"line_start":30,"line_end":30,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118878,"byte_end":118886,"line_start":40,"line_end":40,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119054,"byte_end":119062,"line_start":48,"line_end":48,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119254,"byte_end":119262,"line_start":56,"line_end":56,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119443,"byte_end":119451,"line_start":64,"line_end":64,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119724,"byte_end":119730,"line_start":76,"line_end":76,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119967,"byte_end":119973,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120211,"byte_end":120217,"line_start":96,"line_end":96,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120668,"byte_end":120685,"line_start":114,"line_end":114,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120814,"byte_end":120831,"line_start":120,"line_end":120,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121083,"byte_end":121100,"line_start":131,"line_end":131,"column_start":51,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121397,"byte_end":121414,"line_start":144,"line_end":144,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121651,"byte_end":121668,"line_start":153,"line_end":153,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121932,"byte_end":121938,"line_start":163,"line_end":163,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":122262,"byte_end":122279,"line_start":176,"line_end":176,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":122478,"byte_end":122495,"line_start":187,"line_end":187,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126328,"byte_end":126337,"line_start":70,"line_end":70,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131526,"byte_end":131535,"line_start":207,"line_end":207,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131743,"byte_end":131752,"line_start":216,"line_end":216,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131935,"byte_end":131951,"line_start":223,"line_end":223,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135882,"byte_end":135889,"line_start":75,"line_end":75,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":136717,"byte_end":136723,"line_start":98,"line_end":98,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":139905,"byte_end":139911,"line_start":187,"line_end":187,"column_start":69,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":140297,"byte_end":140314,"line_start":199,"line_end":199,"column_start":57,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141216,"byte_end":141233,"line_start":232,"line_end":232,"column_start":67,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141424,"byte_end":141430,"line_start":238,"line_end":238,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162725,"byte_end":162733,"line_start":65,"line_end":65,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165050,"byte_end":165058,"line_start":139,"line_end":139,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165434,"byte_end":165453,"line_start":151,"line_end":151,"column_start":53,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166359,"byte_end":166378,"line_start":184,"line_end":184,"column_start":63,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166602,"byte_end":166610,"line_start":193,"line_end":193,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50292,"byte_end":50298,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":323}},{"kind":"Mod","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50308,"byte_end":50316,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":444}},{"kind":"Mod","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":50326,"byte_end":50331,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":487}},{"kind":"Mod","span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/lib.rs","byte_start":1449,"byte_end":1453,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":715}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":2762,"byte_end":2771,"line_start":49,"line_end":49,"column_start":19,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":44},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":3518,"byte_end":3526,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":4328,"byte_end":4336,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":5669,"byte_end":5674,"line_start":157,"line_end":157,"column_start":6,"column_end":11},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":5811,"byte_end":5816,"line_start":164,"line_end":164,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":5988,"byte_end":5996,"line_start":170,"line_end":170,"column_start":15,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":6187,"byte_end":6192,"line_start":181,"line_end":181,"column_start":15,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":6346,"byte_end":6354,"line_start":190,"line_end":190,"column_start":15,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/util.rs","byte_start":6716,"byte_end":6721,"line_start":208,"line_end":208,"column_start":15,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":14821,"byte_end":14831,"line_start":50,"line_end":50,"column_start":25,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1208},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/errors.rs","byte_start":18977,"byte_end":18986,"line_start":152,"line_end":152,"column_start":27,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20511,"byte_end":20523,"line_start":37,"line_end":37,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":20802,"byte_end":20814,"line_start":44,"line_end":44,"column_start":18,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1290},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":21308,"byte_end":21323,"line_start":62,"line_end":62,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":21925,"byte_end":21940,"line_start":85,"line_end":85,"column_start":18,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":22020,"byte_end":22035,"line_start":91,"line_end":91,"column_start":19,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":24037,"byte_end":24052,"line_start":144,"line_end":144,"column_start":6,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":27165,"byte_end":27183,"line_start":237,"line_end":237,"column_start":23,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/generators.rs","byte_start":28353,"byte_end":28373,"line_start":277,"line_end":277,"column_start":10,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/inner_product_proof.rs","byte_start":31471,"byte_end":31488,"line_start":26,"line_end":26,"column_start":6,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":80421,"byte_end":80427,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":82496,"byte_end":82524,"line_start":96,"line_end":96,"column_start":14,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":84576,"byte_end":84605,"line_start":157,"line_end":157,"column_start":14,"column_end":43},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/dealer.rs","byte_start":86699,"byte_end":86724,"line_start":220,"line_end":220,"column_start":14,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/messages.rs","byte_start":94516,"byte_end":94526,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":99309,"byte_end":99314,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":100341,"byte_end":100362,"line_start":74,"line_end":74,"column_start":10,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103022,"byte_end":103043,"line_start":148,"line_end":148,"column_start":19,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":103535,"byte_end":103560,"line_start":169,"line_end":169,"column_start":10,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":106062,"byte_end":106087,"line_start":241,"line_end":241,"column_start":19,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":107204,"byte_end":107230,"line_start":276,"line_end":276,"column_start":6,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/party.rs","byte_start":108279,"byte_end":108305,"line_start":309,"line_end":309,"column_start":15,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":52186,"byte_end":52196,"line_start":78,"line_end":78,"column_start":6,"column_end":16},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69072,"byte_end":69082,"line_start":541,"line_end":541,"column_start":20,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1614},"to":{"krate":37,"index":2078}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69290,"byte_end":69300,"line_start":550,"line_end":550,"column_start":32,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1614},"to":{"krate":37,"index":1539}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/range_proof/mod.rs","byte_start":69484,"byte_end":69501,"line_start":557,"line_end":557,"column_start":36,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":640},"to":{"krate":37,"index":1623}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/transcript.rs","byte_start":110131,"byte_end":110141,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":45,"index":140},"to":{"krate":0,"index":662}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":115702,"byte_end":115718,"line_start":84,"line_end":84,"column_start":41,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":734},"to":{"krate":0,"index":741}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/constraint_system.rs","byte_start":117158,"byte_end":117174,"line_start":117,"line_end":117,"column_start":39,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":734},"to":{"krate":0,"index":745}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118452,"byte_end":118469,"line_start":22,"line_end":22,"column_start":25,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118646,"byte_end":118663,"line_start":30,"line_end":30,"column_start":35,"column_end":52},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":118878,"byte_end":118886,"line_start":40,"line_end":40,"column_start":14,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119054,"byte_end":119062,"line_start":48,"line_end":48,"column_start":45,"column_end":53},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119254,"byte_end":119262,"line_start":56,"line_end":56,"column_start":45,"column_end":53},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119443,"byte_end":119451,"line_start":64,"line_end":64,"column_start":34,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119724,"byte_end":119730,"line_start":76,"line_end":76,"column_start":24,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":29,"index":1705},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":119967,"byte_end":119973,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":29,"index":1705},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120211,"byte_end":120217,"line_start":96,"line_end":96,"column_start":24,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":29,"index":1705},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120668,"byte_end":120685,"line_start":114,"line_end":114,"column_start":18,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":120814,"byte_end":120831,"line_start":120,"line_end":120,"column_start":43,"column_end":60},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":7994}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121083,"byte_end":121100,"line_start":131,"line_end":131,"column_start":51,"column_end":68},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":7994}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121397,"byte_end":121414,"line_start":144,"line_end":144,"column_start":45,"column_end":62},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121651,"byte_end":121668,"line_start":153,"line_end":153,"column_start":45,"column_end":62},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":121932,"byte_end":121938,"line_start":163,"line_end":163,"column_start":33,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":29,"index":1705},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":122262,"byte_end":122279,"line_start":176,"line_end":176,"column_start":14,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/linear_combination.rs","byte_start":122478,"byte_end":122495,"line_start":187,"line_end":187,"column_start":34,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":126328,"byte_end":126337,"line_start":70,"line_end":70,"column_start":6,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131526,"byte_end":131535,"line_start":207,"line_end":207,"column_start":20,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1670},"to":{"krate":37,"index":2078}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131743,"byte_end":131752,"line_start":216,"line_end":216,"column_start":32,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1670},"to":{"krate":37,"index":1539}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/proof.rs","byte_start":131935,"byte_end":131951,"line_start":223,"line_end":223,"column_start":36,"column_end":52},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":884},"to":{"krate":37,"index":1623}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":135882,"byte_end":135889,"line_start":75,"line_end":75,"column_start":15,"column_end":22},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":136717,"byte_end":136723,"line_start":98,"line_end":98,"column_start":57,"column_end":63},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":960},"to":{"krate":0,"index":734}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":139905,"byte_end":139911,"line_start":187,"line_end":187,"column_start":69,"column_end":75},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":960},"to":{"krate":0,"index":741}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":140297,"byte_end":140314,"line_start":199,"line_end":199,"column_start":57,"column_end":74},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":975},"to":{"krate":0,"index":734}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141216,"byte_end":141233,"line_start":232,"line_end":232,"column_start":67,"column_end":84},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":975},"to":{"krate":0,"index":745}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/prover.rs","byte_start":141424,"byte_end":141430,"line_start":238,"line_end":238,"column_start":36,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":162725,"byte_end":162733,"line_start":65,"line_end":65,"column_start":53,"column_end":61},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":734}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165050,"byte_end":165058,"line_start":139,"line_end":139,"column_start":65,"column_end":73},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":741}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":165434,"byte_end":165453,"line_start":151,"line_end":151,"column_start":53,"column_end":72},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1102},"to":{"krate":0,"index":734}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166359,"byte_end":166378,"line_start":184,"line_end":184,"column_start":63,"column_end":82},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1102},"to":{"krate":0,"index":745}},{"span":{"file_name":"/Users/quasar/.cargo/git/checkouts/bulletproofs-382777bcf0c8470b/464acb7/src/r1cs/verifier.rs","byte_start":166602,"byte_end":166610,"line_start":193,"line_end":193,"column_start":32,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}}]}