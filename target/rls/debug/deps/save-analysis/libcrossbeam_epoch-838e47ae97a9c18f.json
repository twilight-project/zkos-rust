{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5","program":"/Users/quasar/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=838e47ae97a9c18f","-C","extra-filename=-838e47ae97a9c18f","--out-dir","/Users/quasar/Work/ZkOS/target/rls/debug/deps","-L","dependency=/Users/quasar/Work/ZkOS/target/rls/debug/deps","--extern","cfg_if=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libcfg_if-84c2e6f16c13db90.rmeta","--extern","crossbeam_utils=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libcrossbeam_utils-083aed591ce3ded1.rmeta","--extern","lazy_static=/Users/quasar/Work/ZkOS/target/rls/debug/deps/liblazy_static-d5639a3501bbce0b.rmeta","--extern","memoffset=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libmemoffset-35207a7a39732373.rmeta","--extern","scopeguard=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libscopeguard-f90b4abad80fbd3e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/quasar/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/quasar/Work/ZkOS/target/rls/debug/deps/libcrossbeam_epoch-838e47ae97a9c18f.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[9179291008061162572,0]},"crate_root":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src","external_crates":[{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9466577767187306432,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14994039406269911217,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5853163823225339907,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1613820703869417062,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18340735221876698540,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10150905723878426537,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[229357149764065237,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15407212597538225447,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8032230038358104220,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[33896783953523308,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[3991480156182438634,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[18236313526837676259,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[5224209857403294135,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16589749146088117410,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[6077239280078533383,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10957113670411776616,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[3291110756457894307,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12879821285339372091,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[4006686117836668289,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[14076372081617451223,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[8797077329744435478,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","num":22,"id":{"name":"crossbeam_utils","disambiguator":[5481158989009389142,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","num":23,"id":{"name":"scopeguard","disambiguator":[14742120300586772307,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","num":24,"id":{"name":"memoffset","disambiguator":[4184972494683653186,0]}}],"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":354},{"krate":0,"index":397},{"krate":0,"index":434},{"krate":0,"index":453},{"krate":0,"index":505},{"krate":0,"index":650},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":871},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712173,"byte_end":11712191,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712002,"byte_end":11712061,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712105,"byte_end":11712163,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712309,"byte_end":11712329,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712237,"byte_end":11712297,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712459,"byte_end":11712466,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712378,"byte_end":11712450,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712552,"byte_end":11712555,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712488,"byte_end":11712543,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712654,"byte_end":11712657,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CompareExchangeError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713666,"byte_end":11713687,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712870,"byte_end":11712922,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712923,"byte_end":11712926,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712927,"byte_end":11713018,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713019,"byte_end":11713111,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713112,"byte_end":11713115,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713116,"byte_end":11713181,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713182,"byte_end":11713185,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713186,"byte_end":11713280,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713281,"byte_end":11713307,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713308,"byte_end":11713400,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713401,"byte_end":11713429,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713473,"byte_end":11713655,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713753,"byte_end":11713760,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713694,"byte_end":11713745,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713978,"byte_end":11713985,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713786,"byte_end":11713834,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713839,"byte_end":11713842,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713847,"byte_end":11713940,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11713945,"byte_end":11713970,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714093,"byte_end":11714100,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"success","qualname":"<Ordering as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":{"krate":0,"index":114},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714076,"byte_end":11714085,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714164,"byte_end":11714171,"line_start":86,"line_end":86,"column_start":8,"column_end":15},"name":"failure","qualname":"<Ordering as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":{"krate":0,"index":115},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714147,"byte_end":11714156,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714340,"byte_end":11714347,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"success","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":{"krate":0,"index":114},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714323,"byte_end":11714332,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714412,"byte_end":11714419,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"failure","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":{"krate":0,"index":115},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714395,"byte_end":11714404,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716335,"byte_end":11716344,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715362,"byte_end":11715409,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715410,"byte_end":11715413,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715414,"byte_end":11715512,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715513,"byte_end":11715608,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715609,"byte_end":11715671,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715672,"byte_end":11715675,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715676,"byte_end":11715768,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715769,"byte_end":11715868,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715869,"byte_end":11715969,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715970,"byte_end":11715992,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715993,"byte_end":11715996,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11715997,"byte_end":11716090,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716091,"byte_end":11716162,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716163,"byte_end":11716166,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716167,"byte_end":11716174,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716175,"byte_end":11716205,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716206,"byte_end":11716237,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716238,"byte_end":11716241,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716242,"byte_end":11716316,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716317,"byte_end":11716324,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716391,"byte_end":11716396,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716351,"byte_end":11716380,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716450,"byte_end":11716454,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716410,"byte_end":11716440,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716606,"byte_end":11716610,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716461,"byte_end":11716506,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716511,"byte_end":11716514,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716519,"byte_end":11716531,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716536,"byte_end":11716539,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716544,"byte_end":11716591,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716974,"byte_end":11716979,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716644,"byte_end":11716679,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716684,"byte_end":11716687,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716692,"byte_end":11716704,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716709,"byte_end":11716712,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716717,"byte_end":11716793,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716798,"byte_end":11716866,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11716871,"byte_end":11716959,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717378,"byte_end":11717387,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717014,"byte_end":11717057,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717062,"byte_end":11717065,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717070,"byte_end":11717082,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717087,"byte_end":11717090,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717095,"byte_end":11717171,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717176,"byte_end":11717244,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717249,"byte_end":11717339,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717344,"byte_end":11717363,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717800,"byte_end":11717804,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717426,"byte_end":11717479,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717484,"byte_end":11717487,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717492,"byte_end":11717504,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717509,"byte_end":11717512,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717517,"byte_end":11717593,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717598,"byte_end":11717666,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717671,"byte_end":11717761,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717766,"byte_end":11717785,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":141},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717857,"byte_end":11717862,"line_start":195,"line_end":195,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<T as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717929,"byte_end":11717933,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"name":"init","qualname":"<T as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11718031,"byte_end":11718036,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"name":"deref","qualname":"<T as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11718116,"byte_end":11718125,"line_start":207,"line_end":207,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<T as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":136},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11718211,"byte_end":11718215,"line_start":211,"line_end":211,"column_start":15,"column_end":19},"name":"drop","qualname":"<T as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":138},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":156},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11719144,"byte_end":11719149,"line_start":247,"line_end":247,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<[std::mem::MaybeUninit<T>] as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11719227,"byte_end":11719231,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"init","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11719681,"byte_end":11719686,"line_start":263,"line_end":263,"column_start":15,"column_end":20},"name":"deref","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11719864,"byte_end":11719873,"line_start":268,"line_end":268,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":136},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720055,"byte_end":11720059,"line_start":273,"line_end":273,"column_start":15,"column_end":19},"name":"drop","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":{"krate":0,"index":138},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720913,"byte_end":11720919,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720395,"byte_end":11720459,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720460,"byte_end":11720463,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720464,"byte_end":11720562,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720563,"byte_end":11720660,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720661,"byte_end":11720732,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720733,"byte_end":11720736,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720737,"byte_end":11720817,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720818,"byte_end":11720821,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11720822,"byte_end":11720901,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721405,"byte_end":11721408,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721172,"byte_end":11721254,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721259,"byte_end":11721262,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721267,"byte_end":11721281,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721286,"byte_end":11721289,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721294,"byte_end":11721301,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721306,"byte_end":11721338,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721343,"byte_end":11721346,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721351,"byte_end":11721381,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721386,"byte_end":11721393,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721752,"byte_end":11721756,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721511,"byte_end":11721593,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721598,"byte_end":11721601,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721606,"byte_end":11721620,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721625,"byte_end":11721628,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721633,"byte_end":11721640,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721645,"byte_end":11721677,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721682,"byte_end":11721685,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721690,"byte_end":11721728,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721733,"byte_end":11721740,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722345,"byte_end":11722349,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722061,"byte_end":11722099,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722104,"byte_end":11722107,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722112,"byte_end":11722126,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722131,"byte_end":11722134,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722139,"byte_end":11722146,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722151,"byte_end":11722183,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722188,"byte_end":11722191,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722196,"byte_end":11722230,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722235,"byte_end":11722242,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722247,"byte_end":11722250,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722934,"byte_end":11722938,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722476,"byte_end":11722521,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722526,"byte_end":11722529,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722534,"byte_end":11722624,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722629,"byte_end":11722643,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722648,"byte_end":11722651,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722656,"byte_end":11722670,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722675,"byte_end":11722678,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722683,"byte_end":11722690,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722695,"byte_end":11722744,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722749,"byte_end":11722793,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722798,"byte_end":11722801,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722806,"byte_end":11722836,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722841,"byte_end":11722871,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722876,"byte_end":11722910,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11722915,"byte_end":11722922,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723945,"byte_end":11723957,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723068,"byte_end":11723147,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723152,"byte_end":11723155,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723160,"byte_end":11723233,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723238,"byte_end":11723314,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723319,"byte_end":11723390,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723395,"byte_end":11723469,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723474,"byte_end":11723497,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723502,"byte_end":11723505,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723510,"byte_end":11723585,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723590,"byte_end":11723664,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723669,"byte_end":11723703,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723708,"byte_end":11723711,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723716,"byte_end":11723730,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723735,"byte_end":11723738,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723743,"byte_end":11723750,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723755,"byte_end":11723804,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723809,"byte_end":11723812,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723817,"byte_end":11723847,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723852,"byte_end":11723882,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723887,"byte_end":11723921,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11723926,"byte_end":11723933,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724565,"byte_end":11724570,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"fn store<P>(&Self, P, Ordering) where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724077,"byte_end":11724142,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724147,"byte_end":11724150,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724155,"byte_end":11724245,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724250,"byte_end":11724264,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724269,"byte_end":11724272,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724277,"byte_end":11724291,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724296,"byte_end":11724299,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724304,"byte_end":11724311,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724316,"byte_end":11724365,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724370,"byte_end":11724414,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724419,"byte_end":11724422,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724427,"byte_end":11724457,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724462,"byte_end":11724498,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724503,"byte_end":11724541,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724546,"byte_end":11724553,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725220,"byte_end":11725224,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"fn swap<'g, P>(&Self, P, Ordering, &'g Guard) -> Shared where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724677,"byte_end":11724765,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724770,"byte_end":11724783,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724788,"byte_end":11724791,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724796,"byte_end":11724886,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724891,"byte_end":11724905,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724910,"byte_end":11724913,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724918,"byte_end":11724932,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724937,"byte_end":11724940,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724945,"byte_end":11724952,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11724957,"byte_end":11725014,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725019,"byte_end":11725063,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725068,"byte_end":11725071,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725076,"byte_end":11725106,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725111,"byte_end":11725141,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725146,"byte_end":11725196,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725201,"byte_end":11725208,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11727060,"byte_end":11727076,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725395,"byte_end":11725491,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725496,"byte_end":11725590,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725595,"byte_end":11725666,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725671,"byte_end":11725674,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725679,"byte_end":11725774,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725779,"byte_end":11725870,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725875,"byte_end":11725888,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725893,"byte_end":11725896,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725901,"byte_end":11725970,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11725975,"byte_end":11726056,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726061,"byte_end":11726152,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726157,"byte_end":11726247,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726252,"byte_end":11726334,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726339,"byte_end":11726417,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726422,"byte_end":11726502,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726507,"byte_end":11726573,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726578,"byte_end":11726581,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726586,"byte_end":11726600,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726605,"byte_end":11726608,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726613,"byte_end":11726620,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726625,"byte_end":11726689,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726694,"byte_end":11726738,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726743,"byte_end":11726746,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726751,"byte_end":11726781,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726786,"byte_end":11726789,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726794,"byte_end":11726824,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726829,"byte_end":11726866,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726871,"byte_end":11726950,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11726955,"byte_end":11727036,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11727041,"byte_end":11727048,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730110,"byte_end":11730131,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11727738,"byte_end":11727834,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11727839,"byte_end":11727933,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11727938,"byte_end":11728009,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728014,"byte_end":11728017,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728022,"byte_end":11728117,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728122,"byte_end":11728217,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728222,"byte_end":11728312,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728317,"byte_end":11728401,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728406,"byte_end":11728409,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728414,"byte_end":11728483,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728488,"byte_end":11728569,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728574,"byte_end":11728665,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728670,"byte_end":11728760,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728765,"byte_end":11728847,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728852,"byte_end":11728930,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11728935,"byte_end":11729015,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729020,"byte_end":11729086,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729091,"byte_end":11729094,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729099,"byte_end":11729149,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729154,"byte_end":11729157,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729162,"byte_end":11729176,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729181,"byte_end":11729184,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729189,"byte_end":11729196,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729201,"byte_end":11729265,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729270,"byte_end":11729314,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729319,"byte_end":11729322,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729327,"byte_end":11729357,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729362,"byte_end":11729392,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729397,"byte_end":11729400,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729405,"byte_end":11729440,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729445,"byte_end":11729485,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729490,"byte_end":11729500,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729505,"byte_end":11729577,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729582,"byte_end":11729604,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729609,"byte_end":11729633,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729638,"byte_end":11729660,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729665,"byte_end":11729678,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729683,"byte_end":11729708,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729713,"byte_end":11729747,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729752,"byte_end":11729782,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729787,"byte_end":11729800,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729805,"byte_end":11729814,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729819,"byte_end":11729824,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729829,"byte_end":11729832,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729837,"byte_end":11729878,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729883,"byte_end":11729893,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729898,"byte_end":11729982,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11729987,"byte_end":11730014,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730019,"byte_end":11730062,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730067,"byte_end":11730076,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730081,"byte_end":11730086,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730091,"byte_end":11730098,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732500,"byte_end":11732515,"line_start":606,"line_end":606,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730798,"byte_end":11730894,"line_start":565,"line_end":565,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730899,"byte_end":11730993,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11730998,"byte_end":11731069,"line_start":567,"line_end":567,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731074,"byte_end":11731077,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731082,"byte_end":11731177,"line_start":569,"line_end":569,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731182,"byte_end":11731273,"line_start":570,"line_end":570,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731278,"byte_end":11731291,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731296,"byte_end":11731299,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731304,"byte_end":11731389,"line_start":573,"line_end":573,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731394,"byte_end":11731425,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731430,"byte_end":11731433,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731438,"byte_end":11731475,"line_start":576,"line_end":576,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731480,"byte_end":11731483,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731488,"byte_end":11731576,"line_start":578,"line_end":578,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731581,"byte_end":11731602,"line_start":579,"line_end":579,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731607,"byte_end":11731610,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731615,"byte_end":11731647,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731652,"byte_end":11731684,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731689,"byte_end":11731721,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731726,"byte_end":11731758,"line_start":584,"line_end":584,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731763,"byte_end":11731795,"line_start":585,"line_end":585,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731800,"byte_end":11731832,"line_start":586,"line_end":586,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731837,"byte_end":11731868,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731873,"byte_end":11731876,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731881,"byte_end":11731895,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731900,"byte_end":11731903,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731908,"byte_end":11731915,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731920,"byte_end":11731947,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11731952,"byte_end":11732016,"line_start":593,"line_end":593,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732021,"byte_end":11732065,"line_start":594,"line_end":594,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732070,"byte_end":11732073,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732078,"byte_end":11732108,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732113,"byte_end":11732116,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732121,"byte_end":11732151,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732156,"byte_end":11732193,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732198,"byte_end":11732268,"line_start":600,"line_end":600,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732273,"byte_end":11732345,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732350,"byte_end":11732357,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732409,"byte_end":11732429,"line_start":604,"line_end":604,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732434,"byte_end":11732488,"line_start":605,"line_end":605,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735284,"byte_end":11735304,"line_start":683,"line_end":683,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732858,"byte_end":11732954,"line_start":620,"line_end":620,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11732959,"byte_end":11733053,"line_start":621,"line_end":621,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733058,"byte_end":11733129,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733134,"byte_end":11733137,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733142,"byte_end":11733236,"line_start":624,"line_end":624,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733241,"byte_end":11733336,"line_start":625,"line_end":625,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733341,"byte_end":11733431,"line_start":626,"line_end":626,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733436,"byte_end":11733520,"line_start":627,"line_end":627,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733525,"byte_end":11733528,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733533,"byte_end":11733618,"line_start":629,"line_end":629,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733623,"byte_end":11733654,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733659,"byte_end":11733662,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733667,"byte_end":11733715,"line_start":632,"line_end":632,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733720,"byte_end":11733723,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733728,"byte_end":11733770,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733775,"byte_end":11733778,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733783,"byte_end":11733881,"line_start":636,"line_end":636,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733886,"byte_end":11733907,"line_start":637,"line_end":637,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733912,"byte_end":11733915,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733920,"byte_end":11733952,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733957,"byte_end":11733989,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11733994,"byte_end":11734026,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734031,"byte_end":11734063,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734068,"byte_end":11734100,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734105,"byte_end":11734137,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734142,"byte_end":11734173,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734178,"byte_end":11734181,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734186,"byte_end":11734200,"line_start":647,"line_end":647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734205,"byte_end":11734208,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734213,"byte_end":11734220,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734225,"byte_end":11734252,"line_start":650,"line_end":650,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734257,"byte_end":11734321,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734326,"byte_end":11734370,"line_start":652,"line_end":652,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734375,"byte_end":11734378,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734383,"byte_end":11734413,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734418,"byte_end":11734448,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734453,"byte_end":11734456,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734461,"byte_end":11734496,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734501,"byte_end":11734541,"line_start":658,"line_end":658,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734546,"byte_end":11734556,"line_start":659,"line_end":659,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734561,"byte_end":11734624,"line_start":660,"line_end":660,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734629,"byte_end":11734651,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734656,"byte_end":11734680,"line_start":662,"line_end":662,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734685,"byte_end":11734707,"line_start":663,"line_end":663,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734712,"byte_end":11734725,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734730,"byte_end":11734755,"line_start":665,"line_end":665,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734760,"byte_end":11734794,"line_start":666,"line_end":666,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734799,"byte_end":11734829,"line_start":667,"line_end":667,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734834,"byte_end":11734847,"line_start":668,"line_end":668,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734852,"byte_end":11734861,"line_start":669,"line_end":669,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734866,"byte_end":11734871,"line_start":670,"line_end":670,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734876,"byte_end":11734879,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734884,"byte_end":11734925,"line_start":672,"line_end":672,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734930,"byte_end":11734940,"line_start":673,"line_end":673,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11734945,"byte_end":11735020,"line_start":674,"line_end":674,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735025,"byte_end":11735052,"line_start":675,"line_end":675,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735057,"byte_end":11735100,"line_start":676,"line_end":676,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735105,"byte_end":11735114,"line_start":677,"line_end":677,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735119,"byte_end":11735124,"line_start":678,"line_end":678,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735129,"byte_end":11735136,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735188,"byte_end":11735208,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735213,"byte_end":11735272,"line_start":682,"line_end":682,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736383,"byte_end":11736392,"line_start":716,"line_end":716,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735652,"byte_end":11735691,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735696,"byte_end":11735699,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735704,"byte_end":11735798,"line_start":699,"line_end":699,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735803,"byte_end":11735859,"line_start":700,"line_end":700,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735864,"byte_end":11735867,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735872,"byte_end":11735962,"line_start":702,"line_end":702,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735967,"byte_end":11735981,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735986,"byte_end":11735989,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11735994,"byte_end":11736008,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736013,"byte_end":11736016,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736021,"byte_end":11736028,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736033,"byte_end":11736090,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736095,"byte_end":11736139,"line_start":709,"line_end":709,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736144,"byte_end":11736147,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736152,"byte_end":11736212,"line_start":711,"line_end":711,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736217,"byte_end":11736247,"line_start":712,"line_end":712,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736252,"byte_end":11736307,"line_start":713,"line_end":713,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736312,"byte_end":11736359,"line_start":714,"line_end":714,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736364,"byte_end":11736371,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737291,"byte_end":11737299,"line_start":739,"line_end":739,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736563,"byte_end":11736601,"line_start":720,"line_end":720,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736606,"byte_end":11736609,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736614,"byte_end":11736707,"line_start":722,"line_end":722,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736712,"byte_end":11736768,"line_start":723,"line_end":723,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736773,"byte_end":11736776,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736781,"byte_end":11736871,"line_start":725,"line_end":725,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736876,"byte_end":11736890,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736895,"byte_end":11736898,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736903,"byte_end":11736917,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736922,"byte_end":11736925,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736930,"byte_end":11736937,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11736942,"byte_end":11736999,"line_start":731,"line_end":731,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737004,"byte_end":11737048,"line_start":732,"line_end":732,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737053,"byte_end":11737056,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737061,"byte_end":11737121,"line_start":734,"line_end":734,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737126,"byte_end":11737156,"line_start":735,"line_end":735,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737161,"byte_end":11737215,"line_start":736,"line_end":736,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737220,"byte_end":11737267,"line_start":737,"line_end":737,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737272,"byte_end":11737279,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738199,"byte_end":11738208,"line_start":762,"line_end":762,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737468,"byte_end":11737507,"line_start":743,"line_end":743,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737512,"byte_end":11737515,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737520,"byte_end":11737614,"line_start":745,"line_end":745,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737619,"byte_end":11737675,"line_start":746,"line_end":746,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737680,"byte_end":11737683,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737688,"byte_end":11737778,"line_start":748,"line_end":748,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737783,"byte_end":11737797,"line_start":749,"line_end":749,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737802,"byte_end":11737805,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737810,"byte_end":11737824,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737829,"byte_end":11737832,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737837,"byte_end":11737844,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737849,"byte_end":11737906,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737911,"byte_end":11737955,"line_start":755,"line_end":755,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737960,"byte_end":11737963,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11737968,"byte_end":11738028,"line_start":757,"line_end":757,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738033,"byte_end":11738063,"line_start":758,"line_end":758,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738068,"byte_end":11738123,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738128,"byte_end":11738175,"line_start":760,"line_end":760,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738180,"byte_end":11738187,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739505,"byte_end":11739515,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738378,"byte_end":11738413,"line_start":766,"line_end":766,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738418,"byte_end":11738421,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738426,"byte_end":11738515,"line_start":768,"line_end":768,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738520,"byte_end":11738606,"line_start":769,"line_end":769,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738611,"byte_end":11738646,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738651,"byte_end":11738654,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738659,"byte_end":11738671,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738676,"byte_end":11738679,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738684,"byte_end":11738743,"line_start":774,"line_end":774,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738748,"byte_end":11738751,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738756,"byte_end":11738768,"line_start":776,"line_end":776,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738773,"byte_end":11738776,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738781,"byte_end":11738868,"line_start":778,"line_end":778,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738873,"byte_end":11738906,"line_start":779,"line_end":779,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738911,"byte_end":11738914,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738919,"byte_end":11738933,"line_start":781,"line_end":781,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738938,"byte_end":11738941,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738946,"byte_end":11738957,"line_start":783,"line_end":783,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738962,"byte_end":11738981,"line_start":784,"line_end":784,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11738986,"byte_end":11739020,"line_start":785,"line_end":785,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739025,"byte_end":11739051,"line_start":786,"line_end":786,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739056,"byte_end":11739083,"line_start":787,"line_end":787,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739088,"byte_end":11739093,"line_start":788,"line_end":788,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739098,"byte_end":11739101,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739106,"byte_end":11739139,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739144,"byte_end":11739172,"line_start":791,"line_end":791,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739177,"byte_end":11739271,"line_start":792,"line_end":792,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739276,"byte_end":11739323,"line_start":793,"line_end":793,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739328,"byte_end":11739348,"line_start":794,"line_end":794,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739353,"byte_end":11739432,"line_start":795,"line_end":795,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739437,"byte_end":11739450,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739455,"byte_end":11739464,"line_start":797,"line_end":797,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739469,"byte_end":11739474,"line_start":798,"line_end":798,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11739479,"byte_end":11739486,"line_start":799,"line_end":799,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740043,"byte_end":11740046,"line_start":816,"line_end":816,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740396,"byte_end":11740399,"line_start":828,"line_end":828,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9926},"children":[],"decl_id":{"krate":2,"index":9927},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740865,"byte_end":11740870,"line_start":840,"line_end":840,"column_start":8,"column_end":13},"name":"clone","qualname":"<Atomic<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":" Returns a copy of the atomic value.","sig":null,"attributes":[{"value":"/ Returns a copy of the atomic value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740687,"byte_end":11740726,"line_start":836,"line_end":836,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740731,"byte_end":11740734,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ Note that a `Relaxed` load is used here. If you need synchronization, use it with other","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740739,"byte_end":11740830,"line_start":838,"line_end":838,"column_start":5,"column_end":96}},{"value":"/ atomics or fences.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740835,"byte_end":11740857,"line_start":839,"line_end":839,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741043,"byte_end":11741050,"line_start":847,"line_end":847,"column_start":8,"column_end":15},"name":"default","qualname":"<Atomic<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741387,"byte_end":11741391,"line_start":862,"line_end":862,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Owned<T>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Returns a new atomic pointer pointing to `owned`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `owned`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741158,"byte_end":11741211,"line_start":853,"line_end":853,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741216,"byte_end":11741219,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741224,"byte_end":11741238,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741243,"byte_end":11741246,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741251,"byte_end":11741258,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741263,"byte_end":11741304,"line_start":858,"line_end":858,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741309,"byte_end":11741312,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Owned::new(1234));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741317,"byte_end":11741367,"line_start":860,"line_end":860,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741372,"byte_end":11741379,"line_start":861,"line_end":861,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741562,"byte_end":11741566,"line_start":870,"line_end":870,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741671,"byte_end":11741675,"line_start":876,"line_end":876,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742027,"byte_end":11742031,"line_start":891,"line_end":891,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Shared) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Returns a new atomic pointer pointing to `ptr`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `ptr`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741794,"byte_end":11741845,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741850,"byte_end":11741853,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741858,"byte_end":11741872,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741877,"byte_end":11741880,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741885,"byte_end":11741892,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Shared};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741897,"byte_end":11741939,"line_start":887,"line_end":887,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741944,"byte_end":11741947,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::<i32>::null());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741952,"byte_end":11742007,"line_start":889,"line_end":889,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742012,"byte_end":11742019,"line_start":890,"line_end":890,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742391,"byte_end":11742395,"line_start":907,"line_end":907,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Returns a new atomic pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `raw`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742149,"byte_end":11742200,"line_start":897,"line_end":897,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742205,"byte_end":11742208,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742213,"byte_end":11742227,"line_start":899,"line_end":899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742232,"byte_end":11742235,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742240,"byte_end":11742247,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ use std::ptr;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742252,"byte_end":11742269,"line_start":902,"line_end":902,"column_start":5,"column_end":22}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742274,"byte_end":11742306,"line_start":903,"line_end":903,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742311,"byte_end":11742314,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(ptr::null::<i32>());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742319,"byte_end":11742371,"line_start":905,"line_end":905,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742376,"byte_end":11742383,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742532,"byte_end":11742539,"line_start":913,"line_end":913,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742469,"byte_end":11742521,"line_start":912,"line_end":912,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742631,"byte_end":11742641,"line_start":915,"line_end":915,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742569,"byte_end":11742623,"line_start":914,"line_end":914,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742948,"byte_end":11742958,"line_start":923,"line_end":923,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742663,"byte_end":11742727,"line_start":917,"line_end":917,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742732,"byte_end":11742735,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742740,"byte_end":11742752,"line_start":919,"line_end":919,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742757,"byte_end":11742760,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742765,"byte_end":11742860,"line_start":921,"line_end":921,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742865,"byte_end":11742933,"line_start":922,"line_end":922,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743224,"byte_end":11743229,"line_start":932,"line_end":932,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742984,"byte_end":11743019,"line_start":926,"line_end":926,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743020,"byte_end":11743023,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743024,"byte_end":11743066,"line_start":928,"line_end":928,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743067,"byte_end":11743070,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743071,"byte_end":11743169,"line_start":930,"line_end":930,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743170,"byte_end":11743212,"line_start":931,"line_end":931,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743384,"byte_end":11743394,"line_start":939,"line_end":939,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Owned<T> as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":244},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743367,"byte_end":11743376,"line_start":938,"line_end":938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743669,"byte_end":11743679,"line_start":951,"line_end":951,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Owned<T> as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":245},"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743493,"byte_end":11743557,"line_start":945,"line_end":945,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743562,"byte_end":11743565,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743570,"byte_end":11743582,"line_start":947,"line_end":947,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743587,"byte_end":11743590,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Panics if the data is zero in debug mode.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743595,"byte_end":11743640,"line_start":949,"line_end":949,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743645,"byte_end":11743654,"line_start":950,"line_end":950,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744627,"byte_end":11744635,"line_start":983,"line_end":983,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743879,"byte_end":11743929,"line_start":961,"line_end":961,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743934,"byte_end":11743937,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743942,"byte_end":11744034,"line_start":963,"line_end":963,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744039,"byte_end":11744132,"line_start":964,"line_end":964,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744137,"byte_end":11744162,"line_start":965,"line_end":965,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744167,"byte_end":11744170,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744175,"byte_end":11744187,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744192,"byte_end":11744195,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744200,"byte_end":11744244,"line_start":969,"line_end":969,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744249,"byte_end":11744252,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744257,"byte_end":11744269,"line_start":971,"line_end":971,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744274,"byte_end":11744277,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744282,"byte_end":11744378,"line_start":973,"line_end":973,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744383,"byte_end":11744430,"line_start":974,"line_end":974,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744435,"byte_end":11744438,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744443,"byte_end":11744457,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744462,"byte_end":11744465,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744470,"byte_end":11744477,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744482,"byte_end":11744513,"line_start":979,"line_end":979,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744518,"byte_end":11744521,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744526,"byte_end":11744596,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744601,"byte_end":11744608,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745033,"byte_end":11745041,"line_start":1000,"line_end":1000,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744770,"byte_end":11744814,"line_start":989,"line_end":989,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744819,"byte_end":11744822,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744827,"byte_end":11744841,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744846,"byte_end":11744849,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744854,"byte_end":11744861,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744866,"byte_end":11744897,"line_start":994,"line_end":994,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744902,"byte_end":11744905,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744910,"byte_end":11744939,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744944,"byte_end":11744979,"line_start":997,"line_end":997,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11744984,"byte_end":11745009,"line_start":998,"line_end":998,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745014,"byte_end":11745021,"line_start":999,"line_end":999,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745430,"byte_end":11745433,"line_start":1015,"line_end":1015,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745200,"byte_end":11745281,"line_start":1006,"line_end":1006,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745286,"byte_end":11745289,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745294,"byte_end":11745308,"line_start":1008,"line_end":1008,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745313,"byte_end":11745316,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745321,"byte_end":11745328,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745333,"byte_end":11745364,"line_start":1011,"line_end":1011,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745369,"byte_end":11745372,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745377,"byte_end":11745406,"line_start":1013,"line_end":1013,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745411,"byte_end":11745418,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745772,"byte_end":11745776,"line_start":1030,"line_end":1030,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745534,"byte_end":11745615,"line_start":1021,"line_end":1021,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745620,"byte_end":11745623,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745628,"byte_end":11745642,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745647,"byte_end":11745650,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745655,"byte_end":11745662,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745667,"byte_end":11745698,"line_start":1026,"line_end":1026,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745703,"byte_end":11745706,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745711,"byte_end":11745748,"line_start":1028,"line_end":1028,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745753,"byte_end":11745760,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746197,"byte_end":11746208,"line_start":1046,"line_end":1046,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745868,"byte_end":11745917,"line_start":1034,"line_end":1034,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745922,"byte_end":11745925,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745930,"byte_end":11745944,"line_start":1036,"line_end":1036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745949,"byte_end":11745952,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745957,"byte_end":11745964,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745969,"byte_end":11746017,"line_start":1039,"line_end":1039,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746022,"byte_end":11746025,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746030,"byte_end":11746059,"line_start":1041,"line_end":1041,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746064,"byte_end":11746094,"line_start":1042,"line_end":1042,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746099,"byte_end":11746132,"line_start":1043,"line_end":1043,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746137,"byte_end":11746144,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746149,"byte_end":11746185,"line_start":1045,"line_end":1045,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746528,"byte_end":11746531,"line_start":1059,"line_end":1059,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746320,"byte_end":11746366,"line_start":1050,"line_end":1050,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746371,"byte_end":11746374,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746379,"byte_end":11746393,"line_start":1052,"line_end":1052,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746398,"byte_end":11746401,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746406,"byte_end":11746413,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746418,"byte_end":11746449,"line_start":1055,"line_end":1055,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746454,"byte_end":11746457,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746462,"byte_end":11746504,"line_start":1057,"line_end":1057,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746509,"byte_end":11746516,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747004,"byte_end":11747012,"line_start":1077,"line_end":1077,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746627,"byte_end":11746717,"line_start":1064,"line_end":1064,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746722,"byte_end":11746760,"line_start":1065,"line_end":1065,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746765,"byte_end":11746768,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746773,"byte_end":11746787,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746792,"byte_end":11746795,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746800,"byte_end":11746807,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746812,"byte_end":11746843,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746848,"byte_end":11746851,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746856,"byte_end":11746885,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746890,"byte_end":11746917,"line_start":1073,"line_end":1073,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746922,"byte_end":11746948,"line_start":1074,"line_end":1074,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746953,"byte_end":11746980,"line_start":1075,"line_end":1075,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11746985,"byte_end":11746992,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747212,"byte_end":11747216,"line_start":1084,"line_end":1084,"column_start":8,"column_end":12},"name":"drop","qualname":"<Owned<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747407,"byte_end":11747410,"line_start":1093,"line_end":1093,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Owned<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747690,"byte_end":11747695,"line_start":1104,"line_end":1104,"column_start":8,"column_end":13},"name":"clone","qualname":"<Owned<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747858,"byte_end":11747863,"line_start":1112,"line_end":1112,"column_start":8,"column_end":13},"name":"deref","qualname":"<Owned<T> as lazy_static::__Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748034,"byte_end":11748043,"line_start":1119,"line_end":1119,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Owned<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748205,"byte_end":11748209,"line_start":1126,"line_end":1126,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748631,"byte_end":11748635,"line_start":1145,"line_end":1145,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Returns a new owned pointer pointing to `b`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `b`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748297,"byte_end":11748345,"line_start":1132,"line_end":1132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748350,"byte_end":11748353,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748358,"byte_end":11748370,"line_start":1134,"line_end":1134,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748375,"byte_end":11748378,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ Panics if the pointer (the `Box`) is not properly aligned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748383,"byte_end":11748445,"line_start":1136,"line_end":1136,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748450,"byte_end":11748453,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748458,"byte_end":11748472,"line_start":1138,"line_end":1138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748477,"byte_end":11748480,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748485,"byte_end":11748492,"line_start":1140,"line_end":1140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748497,"byte_end":11748528,"line_start":1141,"line_end":1141,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748533,"byte_end":11748536,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748541,"byte_end":11748611,"line_start":1143,"line_end":1143,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748616,"byte_end":11748623,"line_start":1144,"line_end":1144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748778,"byte_end":11748784,"line_start":1151,"line_end":1151,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Owned<T> as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &T","parent":{"krate":2,"index":2747},"children":[],"decl_id":{"krate":2,"index":2749},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748893,"byte_end":11748903,"line_start":1157,"line_end":1157,"column_start":8,"column_end":18},"name":"borrow_mut","qualname":"<Owned<T> as std::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":2750},"children":[],"decl_id":{"krate":2,"index":2752},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749020,"byte_end":11749026,"line_start":1163,"line_end":1163,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Owned<T> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &T","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749131,"byte_end":11749137,"line_start":1169,"line_end":1169,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Owned<T> as std::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3050},"children":[],"decl_id":{"krate":2,"index":3052},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749474,"byte_end":11749480,"line_start":1180,"line_end":1180,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749195,"byte_end":11749248,"line_start":1174,"line_end":1174,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749249,"byte_end":11749252,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749253,"byte_end":11749316,"line_start":1176,"line_end":1176,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749317,"byte_end":11749320,"line_start":1177,"line_end":1177,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749321,"byte_end":11749419,"line_start":1178,"line_end":1178,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749420,"byte_end":11749462,"line_start":1179,"line_end":1179,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749642,"byte_end":11749647,"line_start":1186,"line_end":1186,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749897,"byte_end":11749907,"line_start":1198,"line_end":1198,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Shared as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":244},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749880,"byte_end":11749889,"line_start":1197,"line_end":1197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749978,"byte_end":11749988,"line_start":1203,"line_end":1203,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Shared as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749954,"byte_end":11749963,"line_start":1202,"line_end":1202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750651,"byte_end":11750657,"line_start":1229,"line_end":1229,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750132,"byte_end":11750192,"line_start":1212,"line_end":1212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750197,"byte_end":11750200,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750205,"byte_end":11750219,"line_start":1214,"line_end":1214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750224,"byte_end":11750227,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750232,"byte_end":11750239,"line_start":1216,"line_end":1216,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750244,"byte_end":11750300,"line_start":1217,"line_end":1217,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750305,"byte_end":11750349,"line_start":1218,"line_end":1218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750354,"byte_end":11750357,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750362,"byte_end":11750391,"line_start":1220,"line_end":1220,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750396,"byte_end":11750426,"line_start":1221,"line_end":1221,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750431,"byte_end":11750459,"line_start":1222,"line_end":1222,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750464,"byte_end":11750467,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750472,"byte_end":11750502,"line_start":1224,"line_end":1224,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750507,"byte_end":11750541,"line_start":1225,"line_end":1225,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750546,"byte_end":11750578,"line_start":1226,"line_end":1226,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750583,"byte_end":11750590,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750595,"byte_end":11750639,"line_start":1228,"line_end":1228,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751034,"byte_end":11751038,"line_start":1246,"line_end":1246,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750818,"byte_end":11750849,"line_start":1236,"line_end":1236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750854,"byte_end":11750857,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750862,"byte_end":11750876,"line_start":1238,"line_end":1238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750881,"byte_end":11750884,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750889,"byte_end":11750896,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750901,"byte_end":11750933,"line_start":1241,"line_end":1241,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750938,"byte_end":11750941,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750946,"byte_end":11750980,"line_start":1243,"line_end":1243,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750985,"byte_end":11751010,"line_start":1244,"line_end":1244,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751015,"byte_end":11751022,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751644,"byte_end":11751651,"line_start":1268,"line_end":1268,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751153,"byte_end":11751195,"line_start":1253,"line_end":1253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751200,"byte_end":11751203,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751208,"byte_end":11751222,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751227,"byte_end":11751230,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751235,"byte_end":11751242,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751247,"byte_end":11751303,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751308,"byte_end":11751352,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751357,"byte_end":11751360,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751365,"byte_end":11751392,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751397,"byte_end":11751427,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751432,"byte_end":11751477,"line_start":1263,"line_end":1263,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751482,"byte_end":11751520,"line_start":1264,"line_end":1264,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751525,"byte_end":11751571,"line_start":1265,"line_end":1265,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751576,"byte_end":11751583,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751588,"byte_end":11751632,"line_start":1267,"line_end":1267,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753025,"byte_end":11753030,"line_start":1306,"line_end":1306,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751751,"byte_end":11751780,"line_start":1273,"line_end":1273,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751785,"byte_end":11751788,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751793,"byte_end":11751871,"line_start":1275,"line_end":1275,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751876,"byte_end":11751879,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751884,"byte_end":11751896,"line_start":1277,"line_end":1277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751901,"byte_end":11751904,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751909,"byte_end":11751994,"line_start":1279,"line_end":1279,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11751999,"byte_end":11752002,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752007,"byte_end":11752098,"line_start":1281,"line_end":1281,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752103,"byte_end":11752152,"line_start":1282,"line_end":1282,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752157,"byte_end":11752160,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752165,"byte_end":11752237,"line_start":1284,"line_end":1284,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752242,"byte_end":11752317,"line_start":1285,"line_end":1285,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752322,"byte_end":11752325,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752330,"byte_end":11752423,"line_start":1287,"line_end":1287,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752428,"byte_end":11752521,"line_start":1288,"line_end":1288,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752526,"byte_end":11752564,"line_start":1289,"line_end":1289,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752569,"byte_end":11752572,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752577,"byte_end":11752591,"line_start":1291,"line_end":1291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752596,"byte_end":11752599,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752604,"byte_end":11752611,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752616,"byte_end":11752665,"line_start":1294,"line_end":1294,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752670,"byte_end":11752714,"line_start":1295,"line_end":1295,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752719,"byte_end":11752722,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752727,"byte_end":11752757,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752762,"byte_end":11752792,"line_start":1298,"line_end":1298,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752797,"byte_end":11752831,"line_start":1299,"line_end":1299,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752836,"byte_end":11752848,"line_start":1300,"line_end":1300,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752853,"byte_end":11752890,"line_start":1301,"line_end":1301,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752895,"byte_end":11752900,"line_start":1302,"line_end":1302,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752905,"byte_end":11752912,"line_start":1303,"line_end":1303,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752917,"byte_end":11752961,"line_start":1304,"line_end":1304,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11752966,"byte_end":11753006,"line_start":1305,"line_end":1305,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754341,"byte_end":11754350,"line_start":1348,"line_end":1348,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753136,"byte_end":11753165,"line_start":1311,"line_end":1311,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753170,"byte_end":11753173,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753178,"byte_end":11753264,"line_start":1313,"line_end":1313,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753269,"byte_end":11753272,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753277,"byte_end":11753289,"line_start":1315,"line_end":1315,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753294,"byte_end":11753297,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753302,"byte_end":11753397,"line_start":1317,"line_end":1317,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753402,"byte_end":11753439,"line_start":1318,"line_end":1318,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753444,"byte_end":11753447,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753452,"byte_end":11753541,"line_start":1320,"line_end":1320,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753546,"byte_end":11753549,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753554,"byte_end":11753628,"line_start":1322,"line_end":1322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753633,"byte_end":11753636,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753641,"byte_end":11753655,"line_start":1324,"line_end":1324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753660,"byte_end":11753663,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753668,"byte_end":11753675,"line_start":1326,"line_end":1326,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753680,"byte_end":11753729,"line_start":1327,"line_end":1327,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753734,"byte_end":11753778,"line_start":1328,"line_end":1328,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753783,"byte_end":11753786,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753791,"byte_end":11753833,"line_start":1330,"line_end":1330,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753838,"byte_end":11753868,"line_start":1331,"line_end":1331,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753873,"byte_end":11753876,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753881,"byte_end":11753919,"line_start":1333,"line_end":1333,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753924,"byte_end":11753936,"line_start":1334,"line_end":1334,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753941,"byte_end":11753971,"line_start":1335,"line_end":1335,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11753976,"byte_end":11754006,"line_start":1336,"line_end":1336,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754011,"byte_end":11754052,"line_start":1337,"line_end":1337,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754057,"byte_end":11754075,"line_start":1338,"line_end":1338,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754080,"byte_end":11754124,"line_start":1339,"line_end":1339,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754129,"byte_end":11754134,"line_start":1340,"line_end":1340,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754139,"byte_end":11754142,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754147,"byte_end":11754181,"line_start":1342,"line_end":1342,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754186,"byte_end":11754198,"line_start":1343,"line_end":1343,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754203,"byte_end":11754255,"line_start":1344,"line_end":1344,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754260,"byte_end":11754265,"line_start":1345,"line_end":1345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754270,"byte_end":11754277,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754282,"byte_end":11754322,"line_start":1347,"line_end":1347,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755732,"byte_end":11755738,"line_start":1385,"line_end":1385,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754468,"byte_end":11754508,"line_start":1353,"line_end":1353,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754513,"byte_end":11754516,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754521,"byte_end":11754616,"line_start":1355,"line_end":1355,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754621,"byte_end":11754624,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754629,"byte_end":11754641,"line_start":1357,"line_end":1357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754646,"byte_end":11754649,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754654,"byte_end":11754739,"line_start":1359,"line_end":1359,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754744,"byte_end":11754747,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754752,"byte_end":11754843,"line_start":1361,"line_end":1361,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754848,"byte_end":11754897,"line_start":1362,"line_end":1362,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754902,"byte_end":11754905,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754910,"byte_end":11754982,"line_start":1364,"line_end":1364,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11754987,"byte_end":11755062,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755067,"byte_end":11755070,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755075,"byte_end":11755168,"line_start":1367,"line_end":1367,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755173,"byte_end":11755266,"line_start":1368,"line_end":1368,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755271,"byte_end":11755309,"line_start":1369,"line_end":1369,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755314,"byte_end":11755317,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755322,"byte_end":11755336,"line_start":1371,"line_end":1371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755341,"byte_end":11755344,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755349,"byte_end":11755356,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755361,"byte_end":11755410,"line_start":1374,"line_end":1374,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755415,"byte_end":11755459,"line_start":1375,"line_end":1375,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755464,"byte_end":11755467,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755472,"byte_end":11755502,"line_start":1377,"line_end":1377,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755507,"byte_end":11755537,"line_start":1378,"line_end":1378,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755542,"byte_end":11755576,"line_start":1379,"line_end":1379,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755581,"byte_end":11755593,"line_start":1380,"line_end":1380,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755598,"byte_end":11755642,"line_start":1381,"line_end":1381,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755647,"byte_end":11755652,"line_start":1382,"line_end":1382,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755657,"byte_end":11755664,"line_start":1383,"line_end":1383,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755669,"byte_end":11755713,"line_start":1384,"line_end":1384,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756598,"byte_end":11756608,"line_start":1418,"line_end":1418,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755928,"byte_end":11755963,"line_start":1394,"line_end":1394,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755968,"byte_end":11755971,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755976,"byte_end":11755988,"line_start":1396,"line_end":1396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11755993,"byte_end":11755996,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756001,"byte_end":11756060,"line_start":1398,"line_end":1398,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756065,"byte_end":11756068,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756073,"byte_end":11756085,"line_start":1400,"line_end":1400,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756090,"byte_end":11756093,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756098,"byte_end":11756185,"line_start":1402,"line_end":1402,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756190,"byte_end":11756223,"line_start":1403,"line_end":1403,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756228,"byte_end":11756231,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756236,"byte_end":11756250,"line_start":1405,"line_end":1405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756255,"byte_end":11756258,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756263,"byte_end":11756270,"line_start":1407,"line_end":1407,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756275,"byte_end":11756324,"line_start":1408,"line_end":1408,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756329,"byte_end":11756373,"line_start":1409,"line_end":1409,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756378,"byte_end":11756381,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756386,"byte_end":11756416,"line_start":1411,"line_end":1411,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756421,"byte_end":11756433,"line_start":1412,"line_end":1412,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756438,"byte_end":11756480,"line_start":1413,"line_end":1413,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756485,"byte_end":11756523,"line_start":1414,"line_end":1414,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756528,"byte_end":11756557,"line_start":1415,"line_end":1415,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756562,"byte_end":11756567,"line_start":1416,"line_end":1416,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756572,"byte_end":11756579,"line_start":1417,"line_end":1417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757217,"byte_end":11757220,"line_start":1437,"line_end":1437,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756760,"byte_end":11756806,"line_start":1423,"line_end":1423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756811,"byte_end":11756814,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756819,"byte_end":11756833,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756838,"byte_end":11756841,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756846,"byte_end":11756853,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756858,"byte_end":11756914,"line_start":1428,"line_end":1428,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756919,"byte_end":11756963,"line_start":1429,"line_end":1429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756968,"byte_end":11756971,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11756976,"byte_end":11757038,"line_start":1431,"line_end":1431,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757043,"byte_end":11757073,"line_start":1432,"line_end":1432,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757078,"byte_end":11757112,"line_start":1433,"line_end":1433,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757117,"byte_end":11757144,"line_start":1434,"line_end":1434,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757149,"byte_end":11757156,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757161,"byte_end":11757205,"line_start":1436,"line_end":1436,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757943,"byte_end":11757951,"line_start":1461,"line_end":1461,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757316,"byte_end":11757406,"line_start":1442,"line_end":1442,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757411,"byte_end":11757449,"line_start":1443,"line_end":1443,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757454,"byte_end":11757457,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757462,"byte_end":11757476,"line_start":1445,"line_end":1445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757481,"byte_end":11757484,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757489,"byte_end":11757496,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757501,"byte_end":11757550,"line_start":1448,"line_end":1448,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757555,"byte_end":11757599,"line_start":1449,"line_end":1449,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757604,"byte_end":11757607,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757612,"byte_end":11757642,"line_start":1451,"line_end":1451,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757647,"byte_end":11757677,"line_start":1452,"line_end":1452,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757682,"byte_end":11757717,"line_start":1453,"line_end":1453,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757722,"byte_end":11757750,"line_start":1454,"line_end":1454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757755,"byte_end":11757758,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757763,"byte_end":11757791,"line_start":1456,"line_end":1456,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757796,"byte_end":11757824,"line_start":1457,"line_end":1457,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757829,"byte_end":11757870,"line_start":1458,"line_end":1458,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757875,"byte_end":11757882,"line_start":1459,"line_end":1459,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11757887,"byte_end":11757931,"line_start":1460,"line_end":1460,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758458,"byte_end":11758462,"line_start":1481,"line_end":1481,"column_start":8,"column_end":12},"name":"from","qualname":"<Shared as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Returns a new pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to `raw`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758116,"byte_end":11758160,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758165,"byte_end":11758168,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758173,"byte_end":11758185,"line_start":1469,"line_end":1469,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758190,"byte_end":11758193,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758198,"byte_end":11758242,"line_start":1471,"line_end":1471,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758247,"byte_end":11758250,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758255,"byte_end":11758269,"line_start":1473,"line_end":1473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758274,"byte_end":11758277,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758282,"byte_end":11758289,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758294,"byte_end":11758326,"line_start":1476,"line_end":1476,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758331,"byte_end":11758334,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::from(Box::into_raw(Box::new(1234)) as *const _);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758339,"byte_end":11758407,"line_start":1478,"line_end":1478,"column_start":5,"column_end":73}},{"value":"/ assert!(!p.is_null());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758412,"byte_end":11758438,"line_start":1479,"line_end":1479,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758443,"byte_end":11758450,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758688,"byte_end":11758690,"line_start":1489,"line_end":1489,"column_start":8,"column_end":10},"name":"eq","qualname":"<Shared as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758901,"byte_end":11758912,"line_start":1497,"line_end":1497,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Shared as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759072,"byte_end":11759075,"line_start":1503,"line_end":1503,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Shared as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> cmp::Ordering","parent":{"krate":2,"index":2838},"children":[],"decl_id":{"krate":2,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759226,"byte_end":11759229,"line_start":1509,"line_end":1509,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759535,"byte_end":11759538,"line_start":1520,"line_end":1520,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9926},"children":[],"decl_id":{"krate":2,"index":9927},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759732,"byte_end":11759739,"line_start":1526,"line_end":1526,"column_start":8,"column_end":15},"name":"default","qualname":"<Shared as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11760880,"byte_end":11760889,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11760831,"byte_end":11760868,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761036,"byte_end":11761043,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"default","qualname":"<Collector as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761196,"byte_end":11761199,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761156,"byte_end":11761184,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761304,"byte_end":11761312,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761247,"byte_end":11761292,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761475,"byte_end":11761480,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"clone","qualname":"<Collector as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":" Creates another reference to the same garbage collector.\n","sig":null,"attributes":[{"value":"/ Creates another reference to the same garbage collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761407,"byte_end":11761467,"line_start":50,"line_end":50,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761617,"byte_end":11761620,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Collector as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761814,"byte_end":11761816,"line_start":66,"line_end":66,"column_start":8,"column_end":10},"name":"eq","qualname":"<Collector as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Collector) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":" Checks if both handles point to the same collector.\n","sig":null,"attributes":[{"value":"/ Checks if both handles point to the same collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761751,"byte_end":11761806,"line_start":65,"line_end":65,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761980,"byte_end":11761991,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761932,"byte_end":11761968,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762102,"byte_end":11762105,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762056,"byte_end":11762076,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762081,"byte_end":11762090,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762243,"byte_end":11762252,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762174,"byte_end":11762217,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762222,"byte_end":11762231,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762408,"byte_end":11762417,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762326,"byte_end":11762382,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762387,"byte_end":11762396,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762544,"byte_end":11762548,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"drop","qualname":"<LocalHandle as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762527,"byte_end":11762536,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762688,"byte_end":11762691,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LocalHandle as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782510,"byte_end":11782515,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780794,"byte_end":11780843,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780844,"byte_end":11780847,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780848,"byte_end":11780861,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780862,"byte_end":11780865,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780866,"byte_end":11780945,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780946,"byte_end":11780949,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780950,"byte_end":11780957,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780958,"byte_end":11780991,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780992,"byte_end":11780995,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11780996,"byte_end":11781094,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781095,"byte_end":11781187,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781188,"byte_end":11781218,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781219,"byte_end":11781226,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781227,"byte_end":11781230,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781231,"byte_end":11781307,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781308,"byte_end":11781311,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781312,"byte_end":11781339,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781340,"byte_end":11781343,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781344,"byte_end":11781431,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781432,"byte_end":11781448,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781449,"byte_end":11781452,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781453,"byte_end":11781460,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781461,"byte_end":11781510,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781511,"byte_end":11781555,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781556,"byte_end":11781559,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781560,"byte_end":11781598,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781599,"byte_end":11781628,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781629,"byte_end":11781632,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781633,"byte_end":11781663,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781664,"byte_end":11781694,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781695,"byte_end":11781698,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781699,"byte_end":11781773,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781774,"byte_end":11781808,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781809,"byte_end":11781812,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781813,"byte_end":11781864,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781865,"byte_end":11781911,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781912,"byte_end":11781955,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781956,"byte_end":11781961,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781962,"byte_end":11781969,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781970,"byte_end":11781973,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781974,"byte_end":11781995,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11781996,"byte_end":11781999,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782000,"byte_end":11782095,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782096,"byte_end":11782194,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782195,"byte_end":11782214,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782215,"byte_end":11782218,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782219,"byte_end":11782226,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782227,"byte_end":11782260,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782261,"byte_end":11782264,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782265,"byte_end":11782295,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782296,"byte_end":11782326,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782327,"byte_end":11782359,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782360,"byte_end":11782377,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782378,"byte_end":11782410,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782411,"byte_end":11782428,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782429,"byte_end":11782462,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782463,"byte_end":11782470,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782471,"byte_end":11782474,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782475,"byte_end":11782498,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783490,"byte_end":11783495,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782574,"byte_end":11782663,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782668,"byte_end":11782693,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782698,"byte_end":11782701,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782706,"byte_end":11782799,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782804,"byte_end":11782892,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782897,"byte_end":11782987,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782992,"byte_end":11783032,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783037,"byte_end":11783040,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783045,"byte_end":11783135,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783140,"byte_end":11783231,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783236,"byte_end":11783323,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783328,"byte_end":11783348,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783353,"byte_end":11783356,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783361,"byte_end":11783448,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783453,"byte_end":11783478,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787795,"byte_end":11787810,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783659,"byte_end":11783748,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783753,"byte_end":11783778,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783783,"byte_end":11783786,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783791,"byte_end":11783884,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783889,"byte_end":11783977,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11783982,"byte_end":11784072,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784077,"byte_end":11784117,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784122,"byte_end":11784125,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784130,"byte_end":11784220,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784225,"byte_end":11784316,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784321,"byte_end":11784408,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784413,"byte_end":11784433,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784438,"byte_end":11784441,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784446,"byte_end":11784533,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784538,"byte_end":11784563,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784568,"byte_end":11784571,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784576,"byte_end":11784588,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784593,"byte_end":11784596,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784601,"byte_end":11784693,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784698,"byte_end":11784785,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784790,"byte_end":11784802,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784807,"byte_end":11784810,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784815,"byte_end":11784822,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784827,"byte_end":11784860,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784865,"byte_end":11784868,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784873,"byte_end":11784903,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784908,"byte_end":11784935,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784940,"byte_end":11784952,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11784957,"byte_end":11785032,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785037,"byte_end":11785076,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785081,"byte_end":11785117,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785122,"byte_end":11785133,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785138,"byte_end":11785143,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785148,"byte_end":11785155,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785160,"byte_end":11785163,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785168,"byte_end":11785262,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785267,"byte_end":11785298,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785303,"byte_end":11785306,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785311,"byte_end":11785406,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785411,"byte_end":11785503,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785508,"byte_end":11785597,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785602,"byte_end":11785605,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785610,"byte_end":11785623,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785628,"byte_end":11785681,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785686,"byte_end":11785768,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785773,"byte_end":11785780,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785785,"byte_end":11785788,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785793,"byte_end":11785886,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785891,"byte_end":11785986,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11785991,"byte_end":11786051,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786056,"byte_end":11786059,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786064,"byte_end":11786078,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786083,"byte_end":11786086,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786091,"byte_end":11786177,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786182,"byte_end":11786276,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786281,"byte_end":11786377,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786382,"byte_end":11786474,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786479,"byte_end":11786535,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786540,"byte_end":11786543,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786548,"byte_end":11786555,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786560,"byte_end":11786616,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786621,"byte_end":11786665,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786670,"byte_end":11786673,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786678,"byte_end":11786709,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786714,"byte_end":11786717,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786722,"byte_end":11786799,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786804,"byte_end":11786835,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786840,"byte_end":11786843,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786848,"byte_end":11786878,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786883,"byte_end":11786913,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786918,"byte_end":11786921,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11786926,"byte_end":11787003,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787008,"byte_end":11787080,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787085,"byte_end":11787088,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787093,"byte_end":11787114,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787119,"byte_end":11787179,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787184,"byte_end":11787266,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787271,"byte_end":11787287,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787292,"byte_end":11787371,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787376,"byte_end":11787419,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787424,"byte_end":11787492,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787497,"byte_end":11787589,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787594,"byte_end":11787678,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787683,"byte_end":11787720,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787725,"byte_end":11787740,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787745,"byte_end":11787754,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787759,"byte_end":11787764,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11787769,"byte_end":11787776,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791397,"byte_end":11791410,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788049,"byte_end":11788142,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788147,"byte_end":11788199,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788204,"byte_end":11788207,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788212,"byte_end":11788305,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788310,"byte_end":11788400,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788405,"byte_end":11788494,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788499,"byte_end":11788553,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788558,"byte_end":11788561,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788566,"byte_end":11788659,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788664,"byte_end":11788757,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788762,"byte_end":11788855,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788860,"byte_end":11788891,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788896,"byte_end":11788899,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788904,"byte_end":11788993,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11788998,"byte_end":11789023,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789028,"byte_end":11789031,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789036,"byte_end":11789048,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789053,"byte_end":11789056,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789061,"byte_end":11789154,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789159,"byte_end":11789192,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789197,"byte_end":11789200,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789205,"byte_end":11789300,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789305,"byte_end":11789343,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789348,"byte_end":11789351,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789356,"byte_end":11789451,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789456,"byte_end":11789548,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789553,"byte_end":11789642,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789647,"byte_end":11789650,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789655,"byte_end":11789668,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789673,"byte_end":11789726,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789731,"byte_end":11789790,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789795,"byte_end":11789802,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789807,"byte_end":11789810,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789815,"byte_end":11789909,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11789914,"byte_end":11790001,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790006,"byte_end":11790066,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790071,"byte_end":11790074,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790079,"byte_end":11790093,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790098,"byte_end":11790101,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790106,"byte_end":11790192,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790197,"byte_end":11790291,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790296,"byte_end":11790392,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790397,"byte_end":11790489,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790494,"byte_end":11790550,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790555,"byte_end":11790558,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790563,"byte_end":11790570,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790575,"byte_end":11790631,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790636,"byte_end":11790680,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790685,"byte_end":11790688,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790693,"byte_end":11790724,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790729,"byte_end":11790732,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790737,"byte_end":11790814,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790819,"byte_end":11790850,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790855,"byte_end":11790858,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790863,"byte_end":11790893,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790898,"byte_end":11790928,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790933,"byte_end":11790936,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11790941,"byte_end":11791018,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791023,"byte_end":11791095,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791100,"byte_end":11791103,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791108,"byte_end":11791129,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791134,"byte_end":11791194,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791199,"byte_end":11791281,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791286,"byte_end":11791302,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791307,"byte_end":11791342,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791347,"byte_end":11791356,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791361,"byte_end":11791366,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791371,"byte_end":11791378,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792295,"byte_end":11792300,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791510,"byte_end":11791605,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791610,"byte_end":11791627,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791632,"byte_end":11791635,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791640,"byte_end":11791734,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791739,"byte_end":11791831,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791836,"byte_end":11791904,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791909,"byte_end":11791912,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11791917,"byte_end":11792009,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792014,"byte_end":11792017,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792022,"byte_end":11792036,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792041,"byte_end":11792044,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792049,"byte_end":11792056,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792061,"byte_end":11792094,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792099,"byte_end":11792102,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792107,"byte_end":11792137,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792142,"byte_end":11792167,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792172,"byte_end":11792236,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792241,"byte_end":11792248,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792253,"byte_end":11792271,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792276,"byte_end":11792283,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793462,"byte_end":11793467,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792424,"byte_end":11792475,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792480,"byte_end":11792483,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792488,"byte_end":11792578,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792583,"byte_end":11792677,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792682,"byte_end":11792776,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792781,"byte_end":11792833,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792838,"byte_end":11792841,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792846,"byte_end":11792939,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792944,"byte_end":11792947,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792952,"byte_end":11792966,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792971,"byte_end":11792974,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792979,"byte_end":11792986,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11792991,"byte_end":11793040,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793045,"byte_end":11793089,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793094,"byte_end":11793097,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793102,"byte_end":11793131,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793136,"byte_end":11793169,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793174,"byte_end":11793179,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793184,"byte_end":11793223,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793228,"byte_end":11793282,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793287,"byte_end":11793292,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793297,"byte_end":11793315,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793320,"byte_end":11793325,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793330,"byte_end":11793369,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793374,"byte_end":11793428,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793433,"byte_end":11793438,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793443,"byte_end":11793450,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794794,"byte_end":11794805,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793591,"byte_end":11793682,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793687,"byte_end":11793690,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793695,"byte_end":11793786,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793791,"byte_end":11793887,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793892,"byte_end":11793986,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11793991,"byte_end":11794010,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794015,"byte_end":11794018,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794023,"byte_end":11794117,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794122,"byte_end":11794164,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794169,"byte_end":11794172,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794177,"byte_end":11794191,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794196,"byte_end":11794199,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794204,"byte_end":11794211,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794216,"byte_end":11794265,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794270,"byte_end":11794314,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794319,"byte_end":11794339,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794344,"byte_end":11794372,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794377,"byte_end":11794380,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794385,"byte_end":11794414,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794419,"byte_end":11794452,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794457,"byte_end":11794462,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794467,"byte_end":11794506,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794511,"byte_end":11794565,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794570,"byte_end":11794575,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794580,"byte_end":11794647,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794652,"byte_end":11794657,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794662,"byte_end":11794701,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794706,"byte_end":11794760,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794765,"byte_end":11794770,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11794775,"byte_end":11794782,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795951,"byte_end":11795960,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795410,"byte_end":11795465,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795470,"byte_end":11795473,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795478,"byte_end":11795553,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795558,"byte_end":11795608,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795613,"byte_end":11795616,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795621,"byte_end":11795705,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795710,"byte_end":11795713,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795718,"byte_end":11795732,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795737,"byte_end":11795740,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795745,"byte_end":11795752,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795757,"byte_end":11795790,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795795,"byte_end":11795798,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795803,"byte_end":11795833,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795838,"byte_end":11795868,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795873,"byte_end":11795927,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11795932,"byte_end":11795939,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796114,"byte_end":11796118,"line_start":405,"line_end":405,"column_start":8,"column_end":12},"name":"drop","qualname":"<Guard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796097,"byte_end":11796106,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796275,"byte_end":11796278,"line_start":413,"line_end":413,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Guard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799259,"byte_end":11799270,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796370,"byte_end":11796457,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796458,"byte_end":11796461,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796462,"byte_end":11796557,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796558,"byte_end":11796647,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796648,"byte_end":11796651,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796652,"byte_end":11796745,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796746,"byte_end":11796783,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796784,"byte_end":11796787,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796788,"byte_end":11796884,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796885,"byte_end":11796888,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796889,"byte_end":11796901,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796902,"byte_end":11796905,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796906,"byte_end":11796996,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796997,"byte_end":11797064,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797065,"byte_end":11797068,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797069,"byte_end":11797083,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797084,"byte_end":11797087,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797088,"byte_end":11797095,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797096,"byte_end":11797145,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797146,"byte_end":11797191,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797192,"byte_end":11797195,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797196,"byte_end":11797223,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797224,"byte_end":11797227,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797228,"byte_end":11797240,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797241,"byte_end":11797296,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797297,"byte_end":11797343,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797344,"byte_end":11797347,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797348,"byte_end":11797422,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797423,"byte_end":11797473,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797474,"byte_end":11797477,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797478,"byte_end":11797507,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797508,"byte_end":11797564,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797565,"byte_end":11797576,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797577,"byte_end":11797580,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797581,"byte_end":11797662,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797663,"byte_end":11797668,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797669,"byte_end":11797676,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797677,"byte_end":11797680,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797681,"byte_end":11797775,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797776,"byte_end":11797779,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797780,"byte_end":11797874,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797875,"byte_end":11797960,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797961,"byte_end":11797964,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11797965,"byte_end":11798064,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798065,"byte_end":11798163,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798164,"byte_end":11798184,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798185,"byte_end":11798188,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798189,"byte_end":11798196,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798197,"byte_end":11798246,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798247,"byte_end":11798278,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798279,"byte_end":11798324,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798325,"byte_end":11798328,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798329,"byte_end":11798350,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798351,"byte_end":11798381,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798382,"byte_end":11798387,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798388,"byte_end":11798391,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798392,"byte_end":11798412,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798413,"byte_end":11798443,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798444,"byte_end":11798474,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798475,"byte_end":11798480,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798481,"byte_end":11798484,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798485,"byte_end":11798516,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798517,"byte_end":11798545,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798546,"byte_end":11798566,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798567,"byte_end":11798603,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798604,"byte_end":11798681,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798682,"byte_end":11798685,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798686,"byte_end":11798737,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798738,"byte_end":11798778,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798779,"byte_end":11798853,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798854,"byte_end":11798857,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798858,"byte_end":11798946,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798947,"byte_end":11798997,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11798998,"byte_end":11799050,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799051,"byte_end":11799079,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799080,"byte_end":11799083,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799084,"byte_end":11799116,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799117,"byte_end":11799134,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799135,"byte_end":11799148,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799149,"byte_end":11799158,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799159,"byte_end":11799164,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799165,"byte_end":11799172,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799173,"byte_end":11799176,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799177,"byte_end":11799206,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799207,"byte_end":11799234,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799235,"byte_end":11799244,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855170,"byte_end":11855173,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855124,"byte_end":11855152,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855153,"byte_end":11855162,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855298,"byte_end":11855307,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855229,"byte_end":11855280,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855281,"byte_end":11855290,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855417,"byte_end":11855434,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/default.rs","byte_start":11855368,"byte_end":11855409,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712614,"byte_end":11712634,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714061,"byte_end":11714069,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717843,"byte_end":11717844,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721063,"byte_end":11721069,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721134,"byte_end":11721140,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721156,"byte_end":11721162,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721495,"byte_end":11721501,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740024,"byte_end":11740030,"line_start":815,"line_end":815,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740377,"byte_end":11740383,"line_start":827,"line_end":827,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740671,"byte_end":11740677,"line_start":835,"line_end":835,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741024,"byte_end":11741030,"line_start":846,"line_end":846,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741142,"byte_end":11741148,"line_start":852,"line_end":852,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741543,"byte_end":11741549,"line_start":869,"line_end":869,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741652,"byte_end":11741658,"line_start":875,"line_end":875,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741778,"byte_end":11741784,"line_start":881,"line_end":881,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742133,"byte_end":11742139,"line_start":896,"line_end":896,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743352,"byte_end":11743357,"line_start":937,"line_end":937,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743864,"byte_end":11743869,"line_start":960,"line_end":960,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745519,"byte_end":11745524,"line_start":1020,"line_end":1020,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747194,"byte_end":11747199,"line_start":1083,"line_end":1083,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747389,"byte_end":11747394,"line_start":1092,"line_end":1092,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747672,"byte_end":11747677,"line_start":1103,"line_end":1103,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747818,"byte_end":11747823,"line_start":1109,"line_end":1109,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748016,"byte_end":11748021,"line_start":1118,"line_end":1118,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748187,"byte_end":11748192,"line_start":1125,"line_end":1125,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748282,"byte_end":11748287,"line_start":1131,"line_end":1131,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748760,"byte_end":11748765,"line_start":1150,"line_end":1150,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748875,"byte_end":11748880,"line_start":1156,"line_end":1156,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749002,"byte_end":11749007,"line_start":1162,"line_end":1162,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749113,"byte_end":11749118,"line_start":1168,"line_end":1168,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749619,"byte_end":11749625,"line_start":1185,"line_end":1185,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749799,"byte_end":11749805,"line_start":1194,"line_end":1194,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749860,"byte_end":11749866,"line_start":1196,"line_end":1196,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750112,"byte_end":11750118,"line_start":1211,"line_end":1211,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750798,"byte_end":11750804,"line_start":1235,"line_end":1235,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758096,"byte_end":11758102,"line_start":1466,"line_end":1466,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758665,"byte_end":11758671,"line_start":1488,"line_end":1488,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758798,"byte_end":11758804,"line_start":1494,"line_end":1494,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758878,"byte_end":11758884,"line_start":1496,"line_end":1496,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759049,"byte_end":11759055,"line_start":1502,"line_end":1502,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759203,"byte_end":11759209,"line_start":1508,"line_end":1508,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759512,"byte_end":11759518,"line_start":1519,"line_end":1519,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759709,"byte_end":11759715,"line_start":1525,"line_end":1525,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11760952,"byte_end":11760961,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11760986,"byte_end":11760995,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761017,"byte_end":11761026,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761140,"byte_end":11761149,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761391,"byte_end":11761400,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761598,"byte_end":11761607,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761735,"byte_end":11761744,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761918,"byte_end":11761927,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762038,"byte_end":11762049,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762509,"byte_end":11762520,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762667,"byte_end":11762678,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/deferred.rs","byte_start":11772794,"byte_end":11772802,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/deferred.rs","byte_start":11772926,"byte_end":11772934,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/epoch.rs","byte_start":11776862,"byte_end":11776867,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/epoch.rs","byte_start":11778671,"byte_end":11778682,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782562,"byte_end":11782567,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796085,"byte_end":11796090,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796260,"byte_end":11796265,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799549,"byte_end":11799561,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11802634,"byte_end":11802637,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11802647,"byte_end":11802650,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11803598,"byte_end":11803601,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11806875,"byte_end":11806878,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11807277,"byte_end":11807280,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11807706,"byte_end":11807715,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11807725,"byte_end":11807734,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11808416,"byte_end":11808422,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11813547,"byte_end":11813552,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11822277,"byte_end":11822282,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11828347,"byte_end":11828352,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11828488,"byte_end":11828493,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11829006,"byte_end":11829010,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11831593,"byte_end":11831597,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11832129,"byte_end":11832133,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11841954,"byte_end":11841959,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11841996,"byte_end":11842001,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11842017,"byte_end":11842022,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11847942,"byte_end":11847947,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11712614,"byte_end":11712634,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11714061,"byte_end":11714069,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":40516},"to":{"krate":0,"index":113}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11717843,"byte_end":11717844,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721063,"byte_end":11721069,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721134,"byte_end":11721140,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721156,"byte_end":11721162,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11721495,"byte_end":11721501,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740024,"byte_end":11740030,"line_start":815,"line_end":815,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740377,"byte_end":11740383,"line_start":827,"line_end":827,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9926}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11740671,"byte_end":11740677,"line_start":835,"line_end":835,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741024,"byte_end":11741030,"line_start":846,"line_end":846,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741142,"byte_end":11741148,"line_start":852,"line_end":852,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741543,"byte_end":11741549,"line_start":869,"line_end":869,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741652,"byte_end":11741658,"line_start":875,"line_end":875,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11741778,"byte_end":11741784,"line_start":881,"line_end":881,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11742133,"byte_end":11742139,"line_start":896,"line_end":896,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743352,"byte_end":11743357,"line_start":937,"line_end":937,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":242}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11743864,"byte_end":11743869,"line_start":960,"line_end":960,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11745519,"byte_end":11745524,"line_start":1020,"line_end":1020,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747194,"byte_end":11747199,"line_start":1083,"line_end":1083,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747389,"byte_end":11747394,"line_start":1092,"line_end":1092,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747672,"byte_end":11747677,"line_start":1103,"line_end":1103,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11747818,"byte_end":11747823,"line_start":1109,"line_end":1109,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748016,"byte_end":11748021,"line_start":1118,"line_end":1118,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748187,"byte_end":11748192,"line_start":1125,"line_end":1125,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748282,"byte_end":11748287,"line_start":1131,"line_end":1131,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748760,"byte_end":11748765,"line_start":1150,"line_end":1150,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11748875,"byte_end":11748880,"line_start":1156,"line_end":1156,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749002,"byte_end":11749007,"line_start":1162,"line_end":1162,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749113,"byte_end":11749118,"line_start":1168,"line_end":1168,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749619,"byte_end":11749625,"line_start":1185,"line_end":1185,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749799,"byte_end":11749805,"line_start":1194,"line_end":1194,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11749860,"byte_end":11749866,"line_start":1196,"line_end":1196,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":242}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750112,"byte_end":11750118,"line_start":1211,"line_end":1211,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11750798,"byte_end":11750804,"line_start":1235,"line_end":1235,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758096,"byte_end":11758102,"line_start":1466,"line_end":1466,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758665,"byte_end":11758671,"line_start":1488,"line_end":1488,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758798,"byte_end":11758804,"line_start":1494,"line_end":1494,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2807}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11758878,"byte_end":11758884,"line_start":1496,"line_end":1496,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759049,"byte_end":11759055,"line_start":1502,"line_end":1502,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2838}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759203,"byte_end":11759209,"line_start":1508,"line_end":1508,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759512,"byte_end":11759518,"line_start":1519,"line_end":1519,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":9926}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/atomic.rs","byte_start":11759709,"byte_end":11759715,"line_start":1525,"line_end":1525,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11760952,"byte_end":11760961,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11760986,"byte_end":11760995,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761017,"byte_end":11761026,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761140,"byte_end":11761149,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761391,"byte_end":11761400,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761598,"byte_end":11761607,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761735,"byte_end":11761744,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11761918,"byte_end":11761927,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2807}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762038,"byte_end":11762049,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762509,"byte_end":11762520,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/collector.rs","byte_start":11762667,"byte_end":11762678,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/deferred.rs","byte_start":11772794,"byte_end":11772802,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/deferred.rs","byte_start":11772926,"byte_end":11772934,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/epoch.rs","byte_start":11776862,"byte_end":11776867,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/epoch.rs","byte_start":11778671,"byte_end":11778682,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11782562,"byte_end":11782567,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796085,"byte_end":11796090,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11796260,"byte_end":11796265,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/guard.rs","byte_start":11799549,"byte_end":11799561,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11802634,"byte_end":11802637,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11802647,"byte_end":11802650,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11803598,"byte_end":11803601,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11806875,"byte_end":11806878,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11807277,"byte_end":11807280,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11807706,"byte_end":11807715,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11807725,"byte_end":11807734,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11808416,"byte_end":11808422,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11813547,"byte_end":11813552,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/internal.rs","byte_start":11822277,"byte_end":11822282,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":678}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11828347,"byte_end":11828352,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11828488,"byte_end":11828493,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11829006,"byte_end":11829010,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11831593,"byte_end":11831597,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/list.rs","byte_start":11832129,"byte_end":11832133,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11841954,"byte_end":11841959,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11841996,"byte_end":11842001,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11842017,"byte_end":11842022,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.5/src/sync/queue.rs","byte_start":11847942,"byte_end":11847947,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3393}}]}