{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5","program":"/Users/quasar/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_utils","--edition=2018","/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=083aed591ce3ded1","-C","extra-filename=-083aed591ce3ded1","--out-dir","/Users/quasar/Work/ZkOS/target/rls/debug/deps","-L","dependency=/Users/quasar/Work/ZkOS/target/rls/debug/deps","--extern","cfg_if=/Users/quasar/Work/ZkOS/target/rls/debug/deps/libcfg_if-84c2e6f16c13db90.rmeta","--extern","lazy_static=/Users/quasar/Work/ZkOS/target/rls/debug/deps/liblazy_static-d5639a3501bbce0b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/quasar/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/quasar/Work/ZkOS/target/rls/debug/deps/libcrossbeam_utils-083aed591ce3ded1.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[5481158989009389142,0]},"crate_root":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src","external_crates":[{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9466577767187306432,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14994039406269911217,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5853163823225339907,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1613820703869417062,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18340735221876698540,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10150905723878426537,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[229357149764065237,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15407212597538225447,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8032230038358104220,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[33896783953523308,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[3991480156182438634,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[18236313526837676259,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[5224209857403294135,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16589749146088117410,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[6077239280078533383,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10957113670411776616,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[3291110756457894307,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12879821285339372091,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[4006686117836668289,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[14076372081617451223,0]}},{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","num":21,"id":{"name":"lazy_static","disambiguator":[8797077329744435478,0]}}],"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":4427,"byte_end":4437,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":4462,"byte_end":4475,"line_start":32,"line_end":32,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3132,"byte_end":3143,"line_start":90,"line_end":90,"column_start":30,"column_end":41},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3183,"byte_end":3190,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11754234,"byte_end":11754240,"line_start":12,"line_end":12,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":400}},{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11754242,"byte_end":11754250,"line_start":12,"line_end":12,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":400}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11754310,"byte_end":11754321,"line_start":14,"line_end":14,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":400}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11754323,"byte_end":11754343,"line_start":14,"line_end":14,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":400}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11754345,"byte_end":11754366,"line_start":14,"line_end":14,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":400}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11754395,"byte_end":11754404,"line_start":15,"line_end":15,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":400}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":57},{"krate":0,"index":184},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":400},{"krate":0,"index":682}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"/ Miscellaneous tools for concurrent programming.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Atomics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Thread synchronization","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Utilities","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AtomicCell`]: atomic::AtomicCell","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":727,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ [`AtomicConsume`]: atomic::AtomicConsume","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":766,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ [`Parker`]: sync::Parker","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":811,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [`ShardedLock`]: sync::ShardedLock","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":840,"byte_end":878,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`WaitGroup`]: sync::WaitGroup","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":879,"byte_end":913,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ [`scope`]: thread::scope","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":914,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":1103,"byte_end":1209,"line_start":34,"line_end":39,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":58},{"krate":0,"index":163},{"krate":0,"index":178},{"krate":0,"index":181}],"decl_id":null,"docs":" Atomic types.","sig":null,"attributes":[{"value":"/ Atomic types.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3349,"byte_end":3366,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3367,"byte_end":3370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3371,"byte_end":3431,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3432,"byte_end":3521,"line_start":4,"line_end":4,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5646,"byte_end":5656,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":4925,"byte_end":4967,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":4968,"byte_end":4971,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":4972,"byte_end":5065,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5066,"byte_end":5069,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5070,"byte_end":5166,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5167,"byte_end":5260,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5261,"byte_end":5307,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5308,"byte_end":5311,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5312,"byte_end":5405,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5406,"byte_end":5409,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: std::cell::Cell","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5410,"byte_end":5439,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5440,"byte_end":5505,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ [`Acquire`]: std::sync::atomic::Ordering::Acquire","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5506,"byte_end":5559,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ [`Release`]: std::sync::atomic::Ordering::Release","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5560,"byte_end":5613,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"repr(transparent)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5614,"byte_end":5634,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6422,"byte_end":6425,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6199,"byte_end":6252,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6257,"byte_end":6260,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6265,"byte_end":6279,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6284,"byte_end":6287,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6292,"byte_end":6299,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6304,"byte_end":6348,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6353,"byte_end":6356,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6361,"byte_end":6392,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6397,"byte_end":6404,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6822,"byte_end":6832,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the atomic and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the atomic and returns the contained value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6536,"byte_end":6592,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6597,"byte_end":6600,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6605,"byte_end":6619,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6624,"byte_end":6627,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6632,"byte_end":6639,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6644,"byte_end":6688,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6693,"byte_end":6696,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6701,"byte_end":6732,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ let v = a.into_inner();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6737,"byte_end":6764,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6769,"byte_end":6772,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6777,"byte_end":6798,"line_start":78,"line_end":78,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6803,"byte_end":6810,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8113,"byte_end":8125,"line_start":112,"line_end":112,"column_start":18,"column_end":30},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"const fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6889,"byte_end":6959,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6964,"byte_end":6967,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6972,"byte_end":7058,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7063,"byte_end":7155,"line_start":87,"line_end":87,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7160,"byte_end":7163,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7168,"byte_end":7182,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7187,"byte_end":7190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7195,"byte_end":7202,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7207,"byte_end":7251,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7256,"byte_end":7259,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7264,"byte_end":7349,"line_start":94,"line_end":94,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7354,"byte_end":7387,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7392,"byte_end":7450,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7455,"byte_end":7458,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7463,"byte_end":7502,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7507,"byte_end":7523,"line_start":99,"line_end":99,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7528,"byte_end":7547,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7552,"byte_end":7557,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7562,"byte_end":7635,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7640,"byte_end":7696,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7701,"byte_end":7704,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7709,"byte_end":7768,"line_start":105,"line_end":105,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7773,"byte_end":7828,"line_start":106,"line_end":106,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7833,"byte_end":7836,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7841,"byte_end":7933,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7938,"byte_end":8014,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8019,"byte_end":8083,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8088,"byte_end":8095,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8480,"byte_end":8485,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8184,"byte_end":8222,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8227,"byte_end":8230,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8235,"byte_end":8249,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8254,"byte_end":8257,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8262,"byte_end":8269,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8274,"byte_end":8318,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8323,"byte_end":8326,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8331,"byte_end":8362,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8367,"byte_end":8370,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8375,"byte_end":8403,"line_start":125,"line_end":125,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8408,"byte_end":8423,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8428,"byte_end":8456,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8461,"byte_end":8468,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9040,"byte_end":9044,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8699,"byte_end":8768,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8773,"byte_end":8776,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8781,"byte_end":8795,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8800,"byte_end":8803,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8808,"byte_end":8815,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8820,"byte_end":8864,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8869,"byte_end":8872,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8877,"byte_end":8908,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8913,"byte_end":8916,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8921,"byte_end":8949,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8954,"byte_end":8983,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8988,"byte_end":9016,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9021,"byte_end":9028,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9451,"byte_end":9457,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9166,"byte_end":9235,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9240,"byte_end":9243,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9248,"byte_end":9262,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9267,"byte_end":9270,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9275,"byte_end":9282,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9287,"byte_end":9331,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9336,"byte_end":9339,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9344,"byte_end":9375,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9380,"byte_end":9383,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9388,"byte_end":9413,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9418,"byte_end":9425,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9430,"byte_end":9439,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9899,"byte_end":9903,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9548,"byte_end":9630,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9635,"byte_end":9638,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9643,"byte_end":9657,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9662,"byte_end":9665,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9670,"byte_end":9677,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9682,"byte_end":9726,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9731,"byte_end":9734,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9739,"byte_end":9770,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9775,"byte_end":9799,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9804,"byte_end":9807,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9812,"byte_end":9836,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9841,"byte_end":9875,"line_start":187,"line_end":187,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9880,"byte_end":9887,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10243,"byte_end":10247,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value from the atomic cell.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic cell.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9999,"byte_end":10038,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10043,"byte_end":10046,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10051,"byte_end":10065,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10070,"byte_end":10073,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10078,"byte_end":10085,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10090,"byte_end":10134,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10139,"byte_end":10142,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10147,"byte_end":10178,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10183,"byte_end":10186,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10191,"byte_end":10219,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10224,"byte_end":10231,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11046,"byte_end":11062,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10359,"byte_end":10436,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10441,"byte_end":10444,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10449,"byte_end":10543,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10548,"byte_end":10564,"line_start":215,"line_end":215,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10569,"byte_end":10572,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10577,"byte_end":10591,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10596,"byte_end":10599,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10604,"byte_end":10611,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10616,"byte_end":10643,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10648,"byte_end":10692,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10697,"byte_end":10700,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10705,"byte_end":10736,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10741,"byte_end":10744,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10749,"byte_end":10793,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10798,"byte_end":10826,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10831,"byte_end":10834,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10839,"byte_end":10883,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10888,"byte_end":10916,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10921,"byte_end":10928,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10980,"byte_end":11034,"line_start":232,"line_end":232,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11844,"byte_end":11860,"line_start":258,"line_end":258,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11219,"byte_end":11296,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11301,"byte_end":11304,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11309,"byte_end":11401,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11406,"byte_end":11491,"line_start":243,"line_end":243,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11496,"byte_end":11499,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11504,"byte_end":11518,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11523,"byte_end":11526,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11531,"byte_end":11538,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11543,"byte_end":11587,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11592,"byte_end":11595,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11600,"byte_end":11631,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11636,"byte_end":11639,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11644,"byte_end":11693,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11698,"byte_end":11726,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11731,"byte_end":11734,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11739,"byte_end":11787,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11792,"byte_end":11820,"line_start":256,"line_end":256,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11825,"byte_end":11832,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12856,"byte_end":12868,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<AtomicCell<T>>::fetch_update","value":"fn fetch_update<F>(&Self, F) -> Result<T, T> where F: FnMut(T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the value, and applies a function to it that returns an optional\n new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n `Err(previous_value)`.","sig":null,"attributes":[{"value":"/ Fetches the value, and applies a function to it that returns an optional","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11997,"byte_end":12073,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12078,"byte_end":12176,"line_start":263,"line_end":263,"column_start":5,"column_end":103}},{"value":"/ `Err(previous_value)`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12181,"byte_end":12207,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12212,"byte_end":12215,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Note: This may call the function multiple times if the value has been changed from other threads in","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12220,"byte_end":12323,"line_start":266,"line_end":266,"column_start":5,"column_end":108}},{"value":"/ the meantime, as long as the function returns `Some(_)`, but the function will have been applied","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12328,"byte_end":12428,"line_start":267,"line_end":267,"column_start":5,"column_end":105}},{"value":"/ only once to the stored value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12433,"byte_end":12467,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12472,"byte_end":12475,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12480,"byte_end":12494,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12499,"byte_end":12502,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12507,"byte_end":12518,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12523,"byte_end":12567,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12572,"byte_end":12575,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12580,"byte_end":12611,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.fetch_update(|_| None), Err(7));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12616,"byte_end":12665,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12670,"byte_end":12725,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12730,"byte_end":12785,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(), 9);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12790,"byte_end":12818,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12823,"byte_end":12830,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12835,"byte_end":12844,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23275,"byte_end":23284,"line_start":576,"line_end":576,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22836,"byte_end":22914,"line_start":560,"line_end":560,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22919,"byte_end":22922,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22927,"byte_end":22941,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22946,"byte_end":22949,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22954,"byte_end":22961,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22966,"byte_end":23010,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23015,"byte_end":23018,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23023,"byte_end":23057,"line_start":567,"line_end":567,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23062,"byte_end":23065,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23070,"byte_end":23110,"line_start":569,"line_end":569,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23115,"byte_end":23146,"line_start":570,"line_end":570,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23151,"byte_end":23154,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23159,"byte_end":23200,"line_start":572,"line_end":572,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23205,"byte_end":23237,"line_start":573,"line_end":573,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23242,"byte_end":23249,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23254,"byte_end":23263,"line_start":575,"line_end":575,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23876,"byte_end":23884,"line_start":597,"line_end":597,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23437,"byte_end":23514,"line_start":581,"line_end":581,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23519,"byte_end":23522,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23527,"byte_end":23541,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23546,"byte_end":23549,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23554,"byte_end":23561,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23566,"byte_end":23610,"line_start":586,"line_end":586,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23615,"byte_end":23618,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23623,"byte_end":23658,"line_start":588,"line_end":588,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23663,"byte_end":23666,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23671,"byte_end":23712,"line_start":590,"line_end":590,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23717,"byte_end":23749,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23754,"byte_end":23757,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23762,"byte_end":23802,"line_start":593,"line_end":593,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23807,"byte_end":23838,"line_start":594,"line_end":594,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23843,"byte_end":23850,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23855,"byte_end":23864,"line_start":596,"line_end":596,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24475,"byte_end":24484,"line_start":618,"line_end":618,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24036,"byte_end":24114,"line_start":602,"line_end":602,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24119,"byte_end":24122,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24127,"byte_end":24141,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24146,"byte_end":24149,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24154,"byte_end":24161,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24166,"byte_end":24210,"line_start":607,"line_end":607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24215,"byte_end":24218,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24223,"byte_end":24257,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24262,"byte_end":24265,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24270,"byte_end":24311,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24316,"byte_end":24347,"line_start":612,"line_end":612,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24352,"byte_end":24355,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24360,"byte_end":24400,"line_start":614,"line_end":614,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24405,"byte_end":24437,"line_start":615,"line_end":615,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24442,"byte_end":24449,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24454,"byte_end":24463,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24687,"byte_end":24694,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"default","qualname":"<AtomicCell<T> as std::default::Default>::default","value":"fn default() -> AtomicCell<T>","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24820,"byte_end":24824,"line_start":632,"line_end":632,"column_start":8,"column_end":12},"name":"from","qualname":"<AtomicCell<T> as std::convert::From>::from","value":"fn from(T) -> AtomicCell<T>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24803,"byte_end":24812,"line_start":631,"line_end":631,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24955,"byte_end":24958,"line_start":638,"line_end":638,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AtomicCell<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37347,"byte_end":37360,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37253,"byte_end":37336,"line_start":6,"line_end":6,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":171},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37413,"byte_end":37416,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37367,"byte_end":37403,"line_start":8,"line_end":8,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38254,"byte_end":38266,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37423,"byte_end":37491,"line_start":11,"line_end":11,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37496,"byte_end":37499,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37504,"byte_end":37577,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37582,"byte_end":37658,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37663,"byte_end":37734,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37739,"byte_end":37813,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37818,"byte_end":37841,"line_start":17,"line_end":17,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37846,"byte_end":37849,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37854,"byte_end":37929,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37934,"byte_end":38008,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38013,"byte_end":38047,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38052,"byte_end":38055,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38060,"byte_end":38132,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38137,"byte_end":38211,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38216,"byte_end":38246,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44825,"byte_end":44836,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":376}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40020,"byte_end":40078,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40079,"byte_end":40082,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40083,"byte_end":40180,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalidates the whole","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40181,"byte_end":40277,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40278,"byte_end":40375,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40376,"byte_end":40470,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40471,"byte_end":40487,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40488,"byte_end":40491,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40492,"byte_end":40516,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40517,"byte_end":40520,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40521,"byte_end":40599,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40600,"byte_end":40603,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64, aarch64, and powerpc64, N = 128.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40604,"byte_end":40653,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ * On arm, mips, mips64, and riscv64, N = 32.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40654,"byte_end":40702,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/ * On s390x, N = 256.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40703,"byte_end":40727,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ * On all others, N = 64.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40728,"byte_end":40756,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40757,"byte_end":40760,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40761,"byte_end":40856,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40857,"byte_end":40948,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40949,"byte_end":41048,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41049,"byte_end":41084,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41085,"byte_end":41088,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41089,"byte_end":41185,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41186,"byte_end":41210,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41211,"byte_end":41214,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41215,"byte_end":41304,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41305,"byte_end":41308,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41309,"byte_end":41323,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41324,"byte_end":41327,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41328,"byte_end":41354,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41355,"byte_end":41358,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41359,"byte_end":41366,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41367,"byte_end":41404,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41405,"byte_end":41408,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41409,"byte_end":41472,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41473,"byte_end":41522,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41523,"byte_end":41572,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41573,"byte_end":41576,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 64);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41577,"byte_end":41610,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 64, 0);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41611,"byte_end":41641,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 64, 0);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41642,"byte_end":41672,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41673,"byte_end":41680,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41681,"byte_end":41684,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41685,"byte_end":41779,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41780,"byte_end":41878,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41879,"byte_end":41908,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41909,"byte_end":41912,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41913,"byte_end":41920,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41921,"byte_end":41958,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41959,"byte_end":41998,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41999,"byte_end":42002,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42003,"byte_end":42024,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42025,"byte_end":42064,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42065,"byte_end":42104,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42105,"byte_end":42128,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42129,"byte_end":42134,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42135,"byte_end":42142,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":43096,"byte_end":43112,"line_start":84,"line_end":84,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45218,"byte_end":45221,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"name":"new","qualname":"<CachePadded<T>>::new","value":"const fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44985,"byte_end":45043,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45048,"byte_end":45051,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45056,"byte_end":45070,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45075,"byte_end":45078,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45083,"byte_end":45090,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45095,"byte_end":45132,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45137,"byte_end":45140,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45145,"byte_end":45188,"line_start":143,"line_end":143,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45193,"byte_end":45200,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45571,"byte_end":45581,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45297,"byte_end":45325,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45330,"byte_end":45333,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45338,"byte_end":45352,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45357,"byte_end":45360,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45365,"byte_end":45372,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45377,"byte_end":45414,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45419,"byte_end":45422,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45427,"byte_end":45470,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45475,"byte_end":45517,"line_start":157,"line_end":157,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45522,"byte_end":45547,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45552,"byte_end":45559,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45687,"byte_end":45692,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"deref","qualname":"<CachePadded<T> as lazy_static::__Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45782,"byte_end":45791,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<CachePadded<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45907,"byte_end":45910,"line_start":180,"line_end":180,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CachePadded<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":46117,"byte_end":46121,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"from","qualname":"<CachePadded<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48514,"byte_end":48521,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":232}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46306,"byte_end":46353,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46354,"byte_end":46357,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46358,"byte_end":46440,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46441,"byte_end":46444,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46445,"byte_end":46544,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46545,"byte_end":46642,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46643,"byte_end":46737,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46738,"byte_end":46747,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46748,"byte_end":46751,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46752,"byte_end":46766,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46767,"byte_end":46770,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46771,"byte_end":46807,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46808,"byte_end":46811,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46812,"byte_end":46819,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46820,"byte_end":46853,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46854,"byte_end":46893,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46894,"byte_end":46938,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46939,"byte_end":46942,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46943,"byte_end":46997,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46998,"byte_end":47035,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47036,"byte_end":47050,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47051,"byte_end":47088,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47089,"byte_end":47174,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/             return val;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47175,"byte_end":47202,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47203,"byte_end":47216,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47217,"byte_end":47244,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47245,"byte_end":47254,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47255,"byte_end":47260,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47261,"byte_end":47268,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47269,"byte_end":47272,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47273,"byte_end":47324,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47325,"byte_end":47328,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47329,"byte_end":47336,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47337,"byte_end":47370,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47371,"byte_end":47409,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47410,"byte_end":47454,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47455,"byte_end":47458,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47459,"byte_end":47497,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47498,"byte_end":47535,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47536,"byte_end":47571,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47572,"byte_end":47601,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47602,"byte_end":47611,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47612,"byte_end":47617,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47618,"byte_end":47625,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47626,"byte_end":47629,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47630,"byte_end":47722,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47723,"byte_end":47820,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47821,"byte_end":47838,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47839,"byte_end":47842,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47843,"byte_end":47850,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47851,"byte_end":47884,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47885,"byte_end":47923,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47924,"byte_end":47968,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47969,"byte_end":47989,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47990,"byte_end":47993,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47994,"byte_end":48036,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48037,"byte_end":48074,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48075,"byte_end":48110,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48111,"byte_end":48150,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48151,"byte_end":48182,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48183,"byte_end":48203,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48204,"byte_end":48237,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48238,"byte_end":48251,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48252,"byte_end":48261,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48262,"byte_end":48267,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48268,"byte_end":48275,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48276,"byte_end":48279,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48280,"byte_end":48323,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [`std::thread::park()`]: std::thread::park","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48324,"byte_end":48370,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`Condvar`]: std::sync::Condvar","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48371,"byte_end":48406,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48407,"byte_end":48456,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ [`unpark()`]: std::thread::Thread::unpark","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48457,"byte_end":48502,"line_start":79,"line_end":79,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48764,"byte_end":48767,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48567,"byte_end":48595,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48600,"byte_end":48603,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48608,"byte_end":48622,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48627,"byte_end":48630,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48635,"byte_end":48642,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48647,"byte_end":48680,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48685,"byte_end":48688,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48693,"byte_end":48726,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48731,"byte_end":48738,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48743,"byte_end":48752,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49049,"byte_end":49054,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48830,"byte_end":48855,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48860,"byte_end":48863,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48868,"byte_end":48882,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48887,"byte_end":48890,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48895,"byte_end":48902,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48907,"byte_end":48940,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48945,"byte_end":48948,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48953,"byte_end":48986,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48991,"byte_end":49011,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49016,"byte_end":49023,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49028,"byte_end":49037,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50098,"byte_end":50102,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49101,"byte_end":49135,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49140,"byte_end":49143,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49148,"byte_end":49241,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49246,"byte_end":49259,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49264,"byte_end":49267,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49272,"byte_end":49341,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49346,"byte_end":49349,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49354,"byte_end":49368,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49373,"byte_end":49376,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49381,"byte_end":49417,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49422,"byte_end":49425,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49430,"byte_end":49437,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49442,"byte_end":49475,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49480,"byte_end":49519,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49524,"byte_end":49568,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49573,"byte_end":49576,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49581,"byte_end":49635,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49640,"byte_end":49677,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49682,"byte_end":49696,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49701,"byte_end":49738,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49743,"byte_end":49828,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/             return val;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49833,"byte_end":49860,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49865,"byte_end":49878,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49883,"byte_end":49910,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49915,"byte_end":49924,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49929,"byte_end":49934,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49939,"byte_end":49942,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49947,"byte_end":49979,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49984,"byte_end":50020,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50025,"byte_end":50060,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50065,"byte_end":50072,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50077,"byte_end":50086,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52161,"byte_end":52167,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50506,"byte_end":50539,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50544,"byte_end":50547,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50552,"byte_end":50640,"line_start":161,"line_end":161,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50645,"byte_end":50648,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50653,"byte_end":50744,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50749,"byte_end":50808,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50813,"byte_end":50816,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50821,"byte_end":50892,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50897,"byte_end":50900,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50905,"byte_end":50996,"line_start":168,"line_end":168,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51001,"byte_end":51082,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51087,"byte_end":51090,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: Backoff::spin","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51095,"byte_end":51122,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51127,"byte_end":51170,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51175,"byte_end":51178,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51183,"byte_end":51197,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51202,"byte_end":51205,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51210,"byte_end":51261,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51266,"byte_end":51269,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51274,"byte_end":51281,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51286,"byte_end":51319,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51324,"byte_end":51347,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51352,"byte_end":51390,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51395,"byte_end":51439,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51444,"byte_end":51464,"line_start":183,"line_end":183,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51469,"byte_end":51497,"line_start":184,"line_end":184,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51502,"byte_end":51505,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51510,"byte_end":51548,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51553,"byte_end":51590,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51595,"byte_end":51630,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51635,"byte_end":51664,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51669,"byte_end":51678,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51683,"byte_end":51688,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51693,"byte_end":51696,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51701,"byte_end":51750,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51755,"byte_end":51786,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51791,"byte_end":51794,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51799,"byte_end":51826,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51831,"byte_end":51881,"line_start":197,"line_end":197,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51886,"byte_end":51921,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51926,"byte_end":51933,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51938,"byte_end":51941,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51946,"byte_end":51988,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51993,"byte_end":52015,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52020,"byte_end":52061,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52066,"byte_end":52073,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52078,"byte_end":52081,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52086,"byte_end":52135,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52140,"byte_end":52149,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54384,"byte_end":54396,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53057,"byte_end":53148,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53153,"byte_end":53156,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53161,"byte_end":53175,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53180,"byte_end":53183,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53188,"byte_end":53280,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53285,"byte_end":53288,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53293,"byte_end":53300,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53305,"byte_end":53338,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53343,"byte_end":53366,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53371,"byte_end":53409,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53414,"byte_end":53458,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53463,"byte_end":53483,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53488,"byte_end":53516,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53521,"byte_end":53524,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53529,"byte_end":53571,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53576,"byte_end":53613,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53618,"byte_end":53653,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53658,"byte_end":53697,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53702,"byte_end":53733,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53738,"byte_end":53758,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53763,"byte_end":53796,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53801,"byte_end":53814,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53819,"byte_end":53828,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53833,"byte_end":53838,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53843,"byte_end":53846,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53851,"byte_end":53900,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53905,"byte_end":53936,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53941,"byte_end":53976,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53981,"byte_end":53984,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53989,"byte_end":54016,"line_start":263,"line_end":263,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54021,"byte_end":54071,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54076,"byte_end":54111,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54116,"byte_end":54140,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54145,"byte_end":54152,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54157,"byte_end":54160,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54165,"byte_end":54207,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54212,"byte_end":54238,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54243,"byte_end":54284,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54289,"byte_end":54296,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54301,"byte_end":54304,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54309,"byte_end":54358,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54363,"byte_end":54372,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54498,"byte_end":54501,"line_start":282,"line_end":282,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Backoff as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54749,"byte_end":54756,"line_start":291,"line_end":291,"column_start":8,"column_end":15},"name":"default","qualname":"<Backoff as std::default::Default>::default","value":"fn default() -> Backoff","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":400},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":469},{"krate":0,"index":632},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"/ Thread synchronization primitives.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11753885,"byte_end":11753923,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11753924,"byte_end":11753927,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11753928,"byte_end":11753973,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11753974,"byte_end":11754053,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":11754054,"byte_end":11754134,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":431},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756060,"byte_end":11756066,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754630,"byte_end":11754661,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754662,"byte_end":11754665,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754666,"byte_end":11754753,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754754,"byte_end":11754757,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754758,"byte_end":11754852,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754853,"byte_end":11754907,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754908,"byte_end":11754911,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11754912,"byte_end":11755009,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   a specified maximum time.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755010,"byte_end":11755041,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755042,"byte_end":11755045,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755046,"byte_end":11755144,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755145,"byte_end":11755240,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755241,"byte_end":11755269,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755270,"byte_end":11755273,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755274,"byte_end":11755372,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755373,"byte_end":11755401,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755402,"byte_end":11755405,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755406,"byte_end":11755420,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755421,"byte_end":11755424,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755425,"byte_end":11755432,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755433,"byte_end":11755453,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755454,"byte_end":11755482,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755483,"byte_end":11755521,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755522,"byte_end":11755525,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755526,"byte_end":11755552,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755553,"byte_end":11755586,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755587,"byte_end":11755590,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755591,"byte_end":11755623,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755624,"byte_end":11755639,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755640,"byte_end":11755691,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755692,"byte_end":11755705,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755706,"byte_end":11755709,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755710,"byte_end":11755737,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755738,"byte_end":11755788,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755789,"byte_end":11755808,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755809,"byte_end":11755816,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755817,"byte_end":11755820,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755821,"byte_end":11755874,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ p.park();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755875,"byte_end":11755888,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755889,"byte_end":11755896,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755897,"byte_end":11755900,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755901,"byte_end":11755927,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755928,"byte_end":11755970,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ [`park_deadline`]: Parker::park_deadline","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11755971,"byte_end":11756015,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`unpark`]: Unparker::unpark","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756016,"byte_end":11756048,"line_start":52,"line_end":52,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756198,"byte_end":11756205,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"default","qualname":"<Parker as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756736,"byte_end":11756739,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756548,"byte_end":11756575,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756580,"byte_end":11756583,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756588,"byte_end":11756602,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756607,"byte_end":11756610,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756615,"byte_end":11756622,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756627,"byte_end":11756665,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756670,"byte_end":11756673,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756678,"byte_end":11756704,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756709,"byte_end":11756716,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756721,"byte_end":11756724,"line_start":85,"line_end":85,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757191,"byte_end":11757195,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756789,"byte_end":11756853,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756858,"byte_end":11756861,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756866,"byte_end":11756880,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756885,"byte_end":11756888,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756893,"byte_end":11756900,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756905,"byte_end":11756943,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756948,"byte_end":11756951,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756956,"byte_end":11756982,"line_start":97,"line_end":97,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756987,"byte_end":11757020,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757025,"byte_end":11757028,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757033,"byte_end":11757065,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757070,"byte_end":11757085,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757090,"byte_end":11757093,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757098,"byte_end":11757149,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757154,"byte_end":11757167,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757172,"byte_end":11757179,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757685,"byte_end":11757697,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757256,"byte_end":11757349,"line_start":110,"line_end":110,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757354,"byte_end":11757357,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757362,"byte_end":11757376,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757381,"byte_end":11757384,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757389,"byte_end":11757396,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757401,"byte_end":11757429,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757434,"byte_end":11757472,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757477,"byte_end":11757480,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757485,"byte_end":11757511,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757516,"byte_end":11757519,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757524,"byte_end":11757609,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757614,"byte_end":11757661,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757666,"byte_end":11757673,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758281,"byte_end":11758294,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"park_deadline","qualname":"<Parker>::park_deadline","value":"fn park_deadline(&Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, or until a certain deadline.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, or until a certain deadline.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757790,"byte_end":11757883,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757888,"byte_end":11757891,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757896,"byte_end":11757910,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757915,"byte_end":11757918,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757923,"byte_end":11757930,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757935,"byte_end":11757974,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11757979,"byte_end":11758017,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758022,"byte_end":11758025,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758030,"byte_end":11758056,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ let deadline = Instant::now() + Duration::from_millis(500);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758061,"byte_end":11758124,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758129,"byte_end":11758132,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758137,"byte_end":11758222,"line_start":138,"line_end":138,"column_start":5,"column_end":90}},{"value":"/ p.park_deadline(deadline);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758227,"byte_end":11758257,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758262,"byte_end":11758269,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758957,"byte_end":11758965,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758383,"byte_end":11758437,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758442,"byte_end":11758445,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758450,"byte_end":11758541,"line_start":147,"line_end":147,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758546,"byte_end":11758549,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758554,"byte_end":11758568,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758573,"byte_end":11758576,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758581,"byte_end":11758588,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758593,"byte_end":11758631,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758636,"byte_end":11758639,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758644,"byte_end":11758670,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758675,"byte_end":11758708,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758713,"byte_end":11758716,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758721,"byte_end":11758753,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758758,"byte_end":11758773,"line_start":158,"line_end":158,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758778,"byte_end":11758829,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758834,"byte_end":11758847,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758852,"byte_end":11758859,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758864,"byte_end":11758867,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758872,"byte_end":11758898,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11758903,"byte_end":11758945,"line_start":164,"line_end":164,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759257,"byte_end":11759265,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Parker>::into_raw","value":"fn into_raw(Parker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Parker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts a `Parker` into a raw pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759022,"byte_end":11759065,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759070,"byte_end":11759073,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759078,"byte_end":11759092,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759097,"byte_end":11759100,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759105,"byte_end":11759112,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759117,"byte_end":11759155,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759160,"byte_end":11759163,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759168,"byte_end":11759194,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759199,"byte_end":11759233,"line_start":177,"line_end":177,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759238,"byte_end":11759245,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759761,"byte_end":11759769,"line_start":198,"line_end":198,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Parker>::from_raw","value":"unsafe fn from_raw(*const ()) -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into a `Parker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into a `Parker`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759348,"byte_end":11759391,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759396,"byte_end":11759399,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759404,"byte_end":11759416,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759421,"byte_end":11759424,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Parker::into_raw`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759429,"byte_end":11759512,"line_start":187,"line_end":187,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759517,"byte_end":11759520,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759525,"byte_end":11759539,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759544,"byte_end":11759547,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759552,"byte_end":11759559,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759564,"byte_end":11759602,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759607,"byte_end":11759610,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759615,"byte_end":11759641,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759646,"byte_end":11759680,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/ let p = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759685,"byte_end":11759730,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759735,"byte_end":11759742,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759951,"byte_end":11759954,"line_start":207,"line_end":207,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Parker as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760116,"byte_end":11760124,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":448}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].\n","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760047,"byte_end":11760104,"line_start":212,"line_end":212,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760970,"byte_end":11760976,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760240,"byte_end":11760302,"line_start":221,"line_end":221,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760307,"byte_end":11760310,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760315,"byte_end":11760407,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760412,"byte_end":11760420,"line_start":224,"line_end":224,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760425,"byte_end":11760428,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760433,"byte_end":11760447,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760452,"byte_end":11760455,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760460,"byte_end":11760467,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760472,"byte_end":11760492,"line_start":229,"line_end":229,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760497,"byte_end":11760525,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760530,"byte_end":11760568,"line_start":231,"line_end":231,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760573,"byte_end":11760576,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760581,"byte_end":11760607,"line_start":233,"line_end":233,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760612,"byte_end":11760645,"line_start":234,"line_end":234,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760650,"byte_end":11760653,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760658,"byte_end":11760685,"line_start":236,"line_end":236,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760690,"byte_end":11760740,"line_start":237,"line_end":237,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760745,"byte_end":11760764,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760769,"byte_end":11760776,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760781,"byte_end":11760784,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760789,"byte_end":11760842,"line_start":241,"line_end":241,"column_start":5,"column_end":58}},{"value":"/ p.park();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760847,"byte_end":11760860,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760865,"byte_end":11760872,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760877,"byte_end":11760880,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760885,"byte_end":11760911,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760916,"byte_end":11760958,"line_start":246,"line_end":246,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761315,"byte_end":11761323,"line_start":262,"line_end":262,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Unparker>::into_raw","value":"fn into_raw(Unparker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Unparker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts an `Unparker` into a raw pointer.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761025,"byte_end":11761071,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761076,"byte_end":11761079,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761084,"byte_end":11761098,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761103,"byte_end":11761106,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761111,"byte_end":11761118,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761123,"byte_end":11761173,"line_start":256,"line_end":256,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761178,"byte_end":11761181,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761186,"byte_end":11761212,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761217,"byte_end":11761250,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761255,"byte_end":11761291,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761296,"byte_end":11761303,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761893,"byte_end":11761901,"line_start":283,"line_end":283,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Unparker>::from_raw","value":"unsafe fn from_raw(*const ()) -> Unparker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into an `Unparker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into an `Unparker`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761413,"byte_end":11761459,"line_start":266,"line_end":266,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761464,"byte_end":11761467,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761472,"byte_end":11761484,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761489,"byte_end":11761492,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Unparker::into_raw`].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761497,"byte_end":11761582,"line_start":270,"line_end":270,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761587,"byte_end":11761590,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761595,"byte_end":11761609,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761614,"byte_end":11761617,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761622,"byte_end":11761629,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761634,"byte_end":11761684,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761689,"byte_end":11761692,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761697,"byte_end":11761723,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761728,"byte_end":11761761,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761766,"byte_end":11761769,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761774,"byte_end":11761810,"line_start":280,"line_end":280,"column_start":5,"column_end":41}},{"value":"/ let u = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761815,"byte_end":11761862,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11761867,"byte_end":11761874,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762063,"byte_end":11762066,"line_start":291,"line_end":291,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unparker as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762194,"byte_end":11762199,"line_start":297,"line_end":297,"column_start":8,"column_end":13},"name":"clone","qualname":"<Unparker as std::clone::Clone>::clone","value":"fn clone(&Self) -> Unparker","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769615,"byte_end":11769626,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11767864,"byte_end":11767897,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11767898,"byte_end":11767901,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11767902,"byte_end":11767999,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768000,"byte_end":11768015,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768016,"byte_end":11768019,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768020,"byte_end":11768117,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768118,"byte_end":11768216,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768217,"byte_end":11768289,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768290,"byte_end":11768293,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768294,"byte_end":11768385,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768386,"byte_end":11768485,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768486,"byte_end":11768564,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768565,"byte_end":11768568,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768569,"byte_end":11768654,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768655,"byte_end":11768748,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768749,"byte_end":11768752,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768753,"byte_end":11768768,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768769,"byte_end":11768772,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768773,"byte_end":11768868,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768869,"byte_end":11768964,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11768965,"byte_end":11769015,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769016,"byte_end":11769019,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769020,"byte_end":11769034,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769035,"byte_end":11769038,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769039,"byte_end":11769046,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769047,"byte_end":11769090,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769091,"byte_end":11769094,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769095,"byte_end":11769130,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769131,"byte_end":11769134,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769135,"byte_end":11769187,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769188,"byte_end":11769193,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769194,"byte_end":11769232,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769233,"byte_end":11769271,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769272,"byte_end":11769299,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769300,"byte_end":11769327,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769328,"byte_end":11769374,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769375,"byte_end":11769378,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769379,"byte_end":11769427,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769428,"byte_end":11769433,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769434,"byte_end":11769476,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769477,"byte_end":11769493,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769494,"byte_end":11769520,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769521,"byte_end":11769557,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769558,"byte_end":11769565,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769566,"byte_end":11769569,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: std::sync::RwLock","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769570,"byte_end":11769603,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770255,"byte_end":11770258,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770043,"byte_end":11770088,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770093,"byte_end":11770096,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770101,"byte_end":11770115,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770120,"byte_end":11770123,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770128,"byte_end":11770135,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770140,"byte_end":11770183,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770188,"byte_end":11770191,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770196,"byte_end":11770231,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770236,"byte_end":11770243,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771231,"byte_end":11771241,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770672,"byte_end":11770726,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770731,"byte_end":11770734,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770739,"byte_end":11770751,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770756,"byte_end":11770759,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770764,"byte_end":11770859,"line_start":118,"line_end":118,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770864,"byte_end":11770885,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770890,"byte_end":11770893,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770898,"byte_end":11770912,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770917,"byte_end":11770920,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770925,"byte_end":11770932,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770937,"byte_end":11770980,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770985,"byte_end":11770988,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770993,"byte_end":11771040,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771045,"byte_end":11771050,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771055,"byte_end":11771097,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771102,"byte_end":11771137,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771142,"byte_end":11771147,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771152,"byte_end":11771207,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771212,"byte_end":11771219,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772218,"byte_end":11772229,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771520,"byte_end":11771563,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771568,"byte_end":11771571,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771576,"byte_end":11771670,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771675,"byte_end":11771743,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771748,"byte_end":11771751,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771756,"byte_end":11771770,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771775,"byte_end":11771778,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771783,"byte_end":11771790,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771795,"byte_end":11771838,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771843,"byte_end":11771866,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771871,"byte_end":11771891,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771896,"byte_end":11771899,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771904,"byte_end":11771949,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771954,"byte_end":11771984,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771989,"byte_end":11771992,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771997,"byte_end":11772032,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772037,"byte_end":11772081,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772086,"byte_end":11772129,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772134,"byte_end":11772148,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772153,"byte_end":11772194,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772199,"byte_end":11772206,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772868,"byte_end":11772875,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772300,"byte_end":11772355,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772360,"byte_end":11772363,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772368,"byte_end":11772452,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772457,"byte_end":11772460,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772465,"byte_end":11772477,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772482,"byte_end":11772485,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772490,"byte_end":11772585,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772590,"byte_end":11772611,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772616,"byte_end":11772619,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772624,"byte_end":11772638,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772643,"byte_end":11772646,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772651,"byte_end":11772658,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772663,"byte_end":11772706,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772711,"byte_end":11772714,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772719,"byte_end":11772758,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772763,"byte_end":11772797,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772802,"byte_end":11772844,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11772849,"byte_end":11772856,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773995,"byte_end":11774003,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773139,"byte_end":11773197,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773202,"byte_end":11773205,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773210,"byte_end":11773303,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773308,"byte_end":11773401,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773406,"byte_end":11773495,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773500,"byte_end":11773540,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773545,"byte_end":11773548,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773553,"byte_end":11773565,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773570,"byte_end":11773573,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773578,"byte_end":11773673,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773678,"byte_end":11773699,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773704,"byte_end":11773707,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773712,"byte_end":11773726,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773731,"byte_end":11773734,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773739,"byte_end":11773746,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773751,"byte_end":11773794,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773799,"byte_end":11773802,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773807,"byte_end":11773842,"line_start":217,"line_end":217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773847,"byte_end":11773850,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773855,"byte_end":11773882,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773887,"byte_end":11773922,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773927,"byte_end":11773960,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773965,"byte_end":11773971,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11773976,"byte_end":11773983,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776304,"byte_end":11776308,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775022,"byte_end":11775110,"line_start":248,"line_end":248,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775115,"byte_end":11775118,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775123,"byte_end":11775214,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775219,"byte_end":11775313,"line_start":251,"line_end":251,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775318,"byte_end":11775413,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775418,"byte_end":11775461,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775466,"byte_end":11775469,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775474,"byte_end":11775544,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775549,"byte_end":11775552,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775557,"byte_end":11775569,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775574,"byte_end":11775577,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775582,"byte_end":11775677,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775682,"byte_end":11775703,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775708,"byte_end":11775711,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775716,"byte_end":11775728,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775733,"byte_end":11775736,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775741,"byte_end":11775831,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775836,"byte_end":11775839,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775844,"byte_end":11775858,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775863,"byte_end":11775866,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775871,"byte_end":11775878,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775883,"byte_end":11775926,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775931,"byte_end":11775954,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775959,"byte_end":11775979,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775984,"byte_end":11775987,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11775992,"byte_end":11776037,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776042,"byte_end":11776072,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776077,"byte_end":11776080,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776085,"byte_end":11776118,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776123,"byte_end":11776145,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776150,"byte_end":11776153,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776158,"byte_end":11776185,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776190,"byte_end":11776220,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776225,"byte_end":11776252,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776257,"byte_end":11776280,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11776285,"byte_end":11776292,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777973,"byte_end":11777982,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777114,"byte_end":11777176,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777181,"byte_end":11777184,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777189,"byte_end":11777282,"line_start":306,"line_end":306,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777287,"byte_end":11777379,"line_start":307,"line_end":307,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777384,"byte_end":11777477,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777482,"byte_end":11777522,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777527,"byte_end":11777530,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777535,"byte_end":11777547,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777552,"byte_end":11777555,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777560,"byte_end":11777655,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777660,"byte_end":11777681,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777686,"byte_end":11777689,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777694,"byte_end":11777708,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777713,"byte_end":11777716,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777721,"byte_end":11777728,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777733,"byte_end":11777776,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777781,"byte_end":11777784,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777789,"byte_end":11777824,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777829,"byte_end":11777832,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777837,"byte_end":11777870,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777875,"byte_end":11777897,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777902,"byte_end":11777905,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777910,"byte_end":11777949,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11777954,"byte_end":11777961,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780770,"byte_end":11780775,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11779669,"byte_end":11779761,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11779766,"byte_end":11779769,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11779774,"byte_end":11779865,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11779870,"byte_end":11779964,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11779969,"byte_end":11780064,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780069,"byte_end":11780112,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780117,"byte_end":11780120,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780125,"byte_end":11780198,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780203,"byte_end":11780206,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780211,"byte_end":11780223,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780228,"byte_end":11780231,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780236,"byte_end":11780331,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780336,"byte_end":11780357,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780362,"byte_end":11780365,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780370,"byte_end":11780382,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780387,"byte_end":11780390,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780395,"byte_end":11780485,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780490,"byte_end":11780493,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780498,"byte_end":11780512,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780517,"byte_end":11780520,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780525,"byte_end":11780532,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780537,"byte_end":11780580,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780585,"byte_end":11780588,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780593,"byte_end":11780628,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780633,"byte_end":11780636,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780641,"byte_end":11780679,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780684,"byte_end":11780695,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780700,"byte_end":11780703,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780708,"byte_end":11780746,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11780751,"byte_end":11780758,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11781897,"byte_end":11781900,"line_start":445,"line_end":445,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLock<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782826,"byte_end":11782833,"line_start":471,"line_end":471,"column_start":8,"column_end":15},"name":"default","qualname":"<ShardedLock<T> as std::default::Default>::default","value":"fn default() -> ShardedLock<T>","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782954,"byte_end":11782958,"line_start":477,"line_end":477,"column_start":8,"column_end":12},"name":"from","qualname":"<ShardedLock<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783109,"byte_end":11783129,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783012,"byte_end":11783097,"line_start":482,"line_end":482,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783423,"byte_end":11783428,"line_start":494,"line_end":494,"column_start":8,"column_end":13},"name":"deref","qualname":"<ShardedLockReadGuard as lazy_static::__Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783568,"byte_end":11783571,"line_start":500,"line_end":500,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockReadGuard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783826,"byte_end":11783829,"line_start":508,"line_end":508,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockReadGuard as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9916},"children":[],"decl_id":{"krate":2,"index":9917},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784016,"byte_end":11784037,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783915,"byte_end":11784004,"line_start":513,"line_end":513,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784274,"byte_end":11784278,"line_start":522,"line_end":522,"column_start":8,"column_end":12},"name":"drop","qualname":"<ShardedLockWriteGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784679,"byte_end":11784682,"line_start":535,"line_end":535,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockWriteGuard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784939,"byte_end":11784942,"line_start":543,"line_end":543,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockWriteGuard as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9916},"children":[],"decl_id":{"krate":2,"index":9917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11785114,"byte_end":11785119,"line_start":551,"line_end":551,"column_start":8,"column_end":13},"name":"deref","qualname":"<ShardedLockWriteGuard as lazy_static::__Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11785254,"byte_end":11785263,"line_start":557,"line_end":557,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<ShardedLockWriteGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788639,"byte_end":11788648,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":647}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787427,"byte_end":11787503,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787504,"byte_end":11787507,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787508,"byte_end":11787537,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787538,"byte_end":11787541,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787542,"byte_end":11787622,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787623,"byte_end":11787626,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787627,"byte_end":11787728,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/   register more threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787729,"byte_end":11787757,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787758,"byte_end":11787761,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787762,"byte_end":11787857,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/   synchronizes threads only once.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787858,"byte_end":11787895,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787896,"byte_end":11787899,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11787900,"byte_end":11788000,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788001,"byte_end":11788072,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788073,"byte_end":11788076,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788077,"byte_end":11788091,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788092,"byte_end":11788095,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788096,"byte_end":11788103,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788104,"byte_end":11788145,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788146,"byte_end":11788166,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788167,"byte_end":11788170,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788171,"byte_end":11788202,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788203,"byte_end":11788233,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788234,"byte_end":11788237,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788238,"byte_end":11788257,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788258,"byte_end":11788312,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788313,"byte_end":11788341,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788342,"byte_end":11788345,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788346,"byte_end":11788377,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788378,"byte_end":11788406,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788407,"byte_end":11788410,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788411,"byte_end":11788463,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788464,"byte_end":11788485,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788486,"byte_end":11788497,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788498,"byte_end":11788503,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788504,"byte_end":11788507,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788508,"byte_end":11788564,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788565,"byte_end":11788579,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788580,"byte_end":11788587,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788588,"byte_end":11788591,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: std::sync::Barrier","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788592,"byte_end":11788627,"line_start":47,"line_end":47,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788809,"byte_end":11788816,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"default","qualname":"<WaitGroup as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789240,"byte_end":11789243,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789012,"byte_end":11789080,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789085,"byte_end":11789088,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789093,"byte_end":11789107,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789112,"byte_end":11789115,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789120,"byte_end":11789127,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789132,"byte_end":11789173,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789178,"byte_end":11789181,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789186,"byte_end":11789216,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789221,"byte_end":11789228,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789843,"byte_end":11789847,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789291,"byte_end":11789365,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789370,"byte_end":11789373,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789378,"byte_end":11789392,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789397,"byte_end":11789400,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789405,"byte_end":11789412,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789417,"byte_end":11789458,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789463,"byte_end":11789483,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789488,"byte_end":11789491,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789496,"byte_end":11789526,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789531,"byte_end":11789534,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789539,"byte_end":11789558,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789563,"byte_end":11789591,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789596,"byte_end":11789613,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789618,"byte_end":11789680,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789685,"byte_end":11789707,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789712,"byte_end":11789721,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789726,"byte_end":11789733,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789738,"byte_end":11789741,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789746,"byte_end":11789800,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789805,"byte_end":11789819,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11789824,"byte_end":11789831,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790185,"byte_end":11790189,"line_start":120,"line_end":120,"column_start":8,"column_end":12},"name":"drop","qualname":"<WaitGroup as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790403,"byte_end":11790408,"line_start":131,"line_end":131,"column_start":8,"column_end":13},"name":"clone","qualname":"<WaitGroup as std::clone::Clone>::clone","value":"fn clone(&Self) -> WaitGroup","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790628,"byte_end":11790631,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitGroup as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":682},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":739},{"krate":0,"index":775},{"krate":0,"index":780},{"krate":0,"index":741},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":762},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":767}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"cfg(not(crossbeam_loom))","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3288,"byte_end":3315,"line_start":101,"line_end":101,"column_start":9,"column_end":36}},{"value":"/ Threads that can borrow variables from the stack.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11790824,"byte_end":11790877,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11790878,"byte_end":11790881,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11790882,"byte_end":11790960,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11790961,"byte_end":11790964,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11790965,"byte_end":11790972,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11790973,"byte_end":11791005,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791006,"byte_end":11791009,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791010,"byte_end":11791032,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791033,"byte_end":11791061,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791062,"byte_end":11791088,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791089,"byte_end":11791117,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791118,"byte_end":11791124,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791125,"byte_end":11791128,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791129,"byte_end":11791152,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/     for person in &people {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791153,"byte_end":11791184,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/         s.spawn(move |_| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791185,"byte_end":11791215,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/             println!(\"Hello, {}!\", person);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791216,"byte_end":11791263,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/         });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791264,"byte_end":11791279,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791280,"byte_end":11791289,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791290,"byte_end":11791306,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791307,"byte_end":11791314,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791315,"byte_end":11791318,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Why scoped threads?","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791319,"byte_end":11791344,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791345,"byte_end":11791348,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791349,"byte_end":11791424,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791425,"byte_end":11791428,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0597","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791429,"byte_end":11791454,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ use std::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791455,"byte_end":11791475,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791476,"byte_end":11791479,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791480,"byte_end":11791502,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791503,"byte_end":11791531,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791532,"byte_end":11791558,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791559,"byte_end":11791587,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791588,"byte_end":11791594,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791595,"byte_end":11791598,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut threads = Vec::new();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791599,"byte_end":11791632,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791633,"byte_end":11791636,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for person in &people {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791637,"byte_end":11791664,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     threads.push(thread::spawn(move || {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791665,"byte_end":11791709,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         println!(\"Hello, {}!\", person);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791710,"byte_end":11791753,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/     }));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791754,"byte_end":11791766,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791767,"byte_end":11791772,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791773,"byte_end":11791776,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for thread in threads {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791777,"byte_end":11791804,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     thread.join().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791805,"byte_end":11791836,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791837,"byte_end":11791842,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791843,"byte_end":11791850,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791851,"byte_end":11791854,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791855,"byte_end":11791952,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791953,"byte_end":11791956,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791957,"byte_end":11791968,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ error[E0597]: `people` does not live long enough","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11791969,"byte_end":11792021,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/   --> src/main.rs:12:20","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792022,"byte_end":11792049,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792050,"byte_end":11792058,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ 12 |     for person in &people {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792059,"byte_end":11792095,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792096,"byte_end":11792171,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ ...","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792172,"byte_end":11792179,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ 21 | }","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792180,"byte_end":11792190,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/    | - borrowed value only lives until here","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792191,"byte_end":11792238,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/    |","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792239,"byte_end":11792247,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792248,"byte_end":11792318,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792319,"byte_end":11792326,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792327,"byte_end":11792330,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792331,"byte_end":11792428,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792429,"byte_end":11792508,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792509,"byte_end":11792512,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792513,"byte_end":11792612,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ before the scope ends.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792613,"byte_end":11792639,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792640,"byte_end":11792643,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # How scoped threads work","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792644,"byte_end":11792673,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792674,"byte_end":11792677,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792678,"byte_end":11792768,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792769,"byte_end":11792863,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792864,"byte_end":11792959,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792960,"byte_end":11792963,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11792964,"byte_end":11793059,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793060,"byte_end":11793158,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793159,"byte_end":11793257,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ can safely access variables outside it.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793258,"byte_end":11793301,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793302,"byte_end":11793305,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Nesting scoped threads","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793306,"byte_end":11793334,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793335,"byte_end":11793338,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793339,"byte_end":11793434,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793435,"byte_end":11793529,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ cannot be borrowed by scoped threads:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793530,"byte_end":11793571,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793572,"byte_end":11793575,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0373,E0521","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793576,"byte_end":11793607,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793608,"byte_end":11793640,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793641,"byte_end":11793644,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793645,"byte_end":11793668,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793669,"byte_end":11793690,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793691,"byte_end":11793762,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/         // which lives *inside* the scope! :(","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793763,"byte_end":11793812,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793813,"byte_end":11793864,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793865,"byte_end":11793876,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793877,"byte_end":11793884,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793885,"byte_end":11793892,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793893,"byte_end":11793896,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793897,"byte_end":11793995,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ argument, which can be used for spawning nested threads:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11793996,"byte_end":11794056,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794057,"byte_end":11794060,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794061,"byte_end":11794068,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794069,"byte_end":11794101,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794102,"byte_end":11794105,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794106,"byte_end":11794129,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/     // Note the `|s|` here.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794130,"byte_end":11794161,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/     s.spawn(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794162,"byte_end":11794183,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794184,"byte_end":11794259,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794260,"byte_end":11794311,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794312,"byte_end":11794323,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794324,"byte_end":11794340,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794341,"byte_end":11794348,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795271,"byte_end":11795276,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"fn scope<'env, F, R>(F) -> thread::Result<R> where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794620,"byte_end":11794665,"line_start":128,"line_end":128,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794666,"byte_end":11794669,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794670,"byte_end":11794766,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794767,"byte_end":11794860,"line_start":131,"line_end":131,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794861,"byte_end":11794958,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11794959,"byte_end":11795012,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795013,"byte_end":11795016,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795017,"byte_end":11795031,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795032,"byte_end":11795035,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795036,"byte_end":11795043,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795044,"byte_end":11795076,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795077,"byte_end":11795080,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795081,"byte_end":11795109,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795110,"byte_end":11795113,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795114,"byte_end":11795137,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795138,"byte_end":11795159,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795160,"byte_end":11795226,"line_start":144,"line_end":144,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795227,"byte_end":11795238,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795239,"byte_end":11795255,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11795256,"byte_end":11795263,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796586,"byte_end":11796591,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796541,"byte_end":11796574,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798377,"byte_end":11798382,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796956,"byte_end":11796983,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796988,"byte_end":11796991,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796996,"byte_end":11797091,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797096,"byte_end":11797191,"line_start":210,"line_end":210,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797196,"byte_end":11797253,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797258,"byte_end":11797261,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797266,"byte_end":11797361,"line_start":213,"line_end":213,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797366,"byte_end":11797394,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797399,"byte_end":11797402,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [handle](ScopedJoinHandle) can be used to manually","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797407,"byte_end":11797474,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ [join](ScopedJoinHandle::join) the thread before the scope exits.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797479,"byte_end":11797548,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797553,"byte_end":11797556,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797561,"byte_end":11797670,"line_start":219,"line_end":219,"column_start":5,"column_end":114}},{"value":"/ stack size or the name of the thread, use this API instead.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797675,"byte_end":11797738,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797743,"byte_end":11797746,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: std::thread::spawn","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797751,"byte_end":11797784,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797789,"byte_end":11797792,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797797,"byte_end":11797809,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797814,"byte_end":11797817,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797822,"byte_end":11797903,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ to recover from such errors.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797908,"byte_end":11797940,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797945,"byte_end":11797948,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797953,"byte_end":11797967,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797972,"byte_end":11797975,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797980,"byte_end":11797987,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11797992,"byte_end":11798024,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798029,"byte_end":11798032,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798037,"byte_end":11798060,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798065,"byte_end":11798099,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798104,"byte_end":11798154,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798159,"byte_end":11798173,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798178,"byte_end":11798189,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798194,"byte_end":11798197,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798202,"byte_end":11798253,"line_start":240,"line_end":240,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798258,"byte_end":11798299,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798304,"byte_end":11798332,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798337,"byte_end":11798353,"line_start":243,"line_end":243,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798358,"byte_end":11798365,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799007,"byte_end":11799014,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798659,"byte_end":11798725,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798730,"byte_end":11798733,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798738,"byte_end":11798752,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798757,"byte_end":11798760,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798765,"byte_end":11798772,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798777,"byte_end":11798809,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798814,"byte_end":11798817,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798822,"byte_end":11798845,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798850,"byte_end":11798869,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798874,"byte_end":11798935,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798940,"byte_end":11798962,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798967,"byte_end":11798983,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11798988,"byte_end":11798995,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799234,"byte_end":11799237,"line_start":278,"line_end":278,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scope as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":775},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800457,"byte_end":11800476,"line_start":316,"line_end":316,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799329,"byte_end":11799375,"line_start":283,"line_end":283,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799376,"byte_end":11799379,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799380,"byte_end":11799420,"line_start":285,"line_end":285,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799421,"byte_end":11799424,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799425,"byte_end":11799503,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799504,"byte_end":11799588,"line_start":288,"line_end":288,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799589,"byte_end":11799592,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799593,"byte_end":11799688,"line_start":290,"line_end":290,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799689,"byte_end":11799736,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799737,"byte_end":11799740,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799741,"byte_end":11799837,"line_start":293,"line_end":293,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799838,"byte_end":11799933,"line_start":294,"line_end":294,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799934,"byte_end":11799945,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799946,"byte_end":11799949,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799950,"byte_end":11799964,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799965,"byte_end":11799968,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799969,"byte_end":11799976,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799977,"byte_end":11800009,"line_start":300,"line_end":300,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800010,"byte_end":11800013,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800014,"byte_end":11800037,"line_start":302,"line_end":302,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800038,"byte_end":11800057,"line_start":303,"line_end":303,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800058,"byte_end":11800116,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800117,"byte_end":11800139,"line_start":305,"line_end":305,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800140,"byte_end":11800156,"line_start":306,"line_end":306,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800157,"byte_end":11800164,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800165,"byte_end":11800168,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`name`]: ScopedThreadBuilder::name","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800169,"byte_end":11800208,"line_start":309,"line_end":309,"column_start":1,"column_end":40}},{"value":"/ [`stack_size`]: ScopedThreadBuilder::stack_size","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800209,"byte_end":11800260,"line_start":310,"line_end":310,"column_start":1,"column_end":52}},{"value":"/ [`spawn`]: ScopedThreadBuilder::spawn","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800261,"byte_end":11800302,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800303,"byte_end":11800338,"line_start":312,"line_end":312,"column_start":1,"column_end":36}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800339,"byte_end":11800387,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800388,"byte_end":11800428,"line_start":314,"line_end":314,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801235,"byte_end":11801239,"line_start":343,"line_end":343,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800617,"byte_end":11800654,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800659,"byte_end":11800662,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes (`\\0`).","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800667,"byte_end":11800715,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800720,"byte_end":11800723,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see [here][naming-threads].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800728,"byte_end":11800801,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800806,"byte_end":11800809,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800814,"byte_end":11800828,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800833,"byte_end":11800836,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800841,"byte_end":11800848,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800853,"byte_end":11800885,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800890,"byte_end":11800919,"line_start":332,"line_end":332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800924,"byte_end":11800927,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800932,"byte_end":11800955,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800960,"byte_end":11800979,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800984,"byte_end":11801026,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801031,"byte_end":11801102,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801107,"byte_end":11801129,"line_start":338,"line_end":338,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801134,"byte_end":11801150,"line_start":339,"line_end":339,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801155,"byte_end":11801162,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801167,"byte_end":11801170,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801175,"byte_end":11801223,"line_start":342,"line_end":342,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801944,"byte_end":11801954,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801375,"byte_end":11801425,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801430,"byte_end":11801433,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801438,"byte_end":11801478,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801483,"byte_end":11801486,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about the stack size for threads, see [here][stack-size].","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801491,"byte_end":11801573,"line_start":352,"line_end":352,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801578,"byte_end":11801581,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801586,"byte_end":11801600,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801605,"byte_end":11801608,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801613,"byte_end":11801620,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801625,"byte_end":11801657,"line_start":357,"line_end":357,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801662,"byte_end":11801665,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801670,"byte_end":11801693,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801698,"byte_end":11801717,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801722,"byte_end":11801756,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801761,"byte_end":11801819,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801824,"byte_end":11801846,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801851,"byte_end":11801867,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801872,"byte_end":11801879,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801884,"byte_end":11801887,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11801892,"byte_end":11801932,"line_start":367,"line_end":367,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803230,"byte_end":11803235,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802095,"byte_end":11802146,"line_start":373,"line_end":373,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802151,"byte_end":11802154,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802159,"byte_end":11802254,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802259,"byte_end":11802287,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802292,"byte_end":11802295,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802300,"byte_end":11802387,"line_start":378,"line_end":378,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802392,"byte_end":11802395,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802400,"byte_end":11802412,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802417,"byte_end":11802420,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`Scope::spawn`] method, this method yields an","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802425,"byte_end":11802486,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/ [`io::Result`] to capture any failure to create the thread at","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802491,"byte_end":11802556,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ the OS level.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802561,"byte_end":11802578,"line_start":384,"line_end":384,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802583,"byte_end":11802586,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802591,"byte_end":11802626,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802631,"byte_end":11802634,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802639,"byte_end":11802651,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802656,"byte_end":11802659,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Panics if a thread name was set and it contained null bytes.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802664,"byte_end":11802728,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802733,"byte_end":11802736,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802741,"byte_end":11802755,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802760,"byte_end":11802763,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802768,"byte_end":11802775,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802780,"byte_end":11802812,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802817,"byte_end":11802820,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802825,"byte_end":11802848,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802853,"byte_end":11802885,"line_start":398,"line_end":398,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802890,"byte_end":11802914,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802919,"byte_end":11802973,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11802978,"byte_end":11802996,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803001,"byte_end":11803015,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803020,"byte_end":11803042,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803047,"byte_end":11803050,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803055,"byte_end":11803106,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803111,"byte_end":11803152,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803157,"byte_end":11803185,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803190,"byte_end":11803206,"line_start":408,"line_end":408,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11803211,"byte_end":11803218,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805528,"byte_end":11805544,"line_start":476,"line_end":476,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805347,"byte_end":11805403,"line_start":472,"line_end":472,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805404,"byte_end":11805407,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Scope::spawn`] method and the","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805408,"byte_end":11805473,"line_start":474,"line_end":474,"column_start":1,"column_end":66}},{"value":"/ [`ScopedThreadBuilder::spawn`] method.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805474,"byte_end":11805516,"line_start":475,"line_end":475,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806852,"byte_end":11806856,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805940,"byte_end":11805998,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806003,"byte_end":11806006,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806011,"byte_end":11806064,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806069,"byte_end":11806072,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806077,"byte_end":11806089,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806094,"byte_end":11806097,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806102,"byte_end":11806196,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806201,"byte_end":11806248,"line_start":498,"line_end":498,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806253,"byte_end":11806256,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806261,"byte_end":11806275,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806280,"byte_end":11806283,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806288,"byte_end":11806295,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806300,"byte_end":11806332,"line_start":503,"line_end":503,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806337,"byte_end":11806340,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806345,"byte_end":11806368,"line_start":505,"line_end":505,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806373,"byte_end":11806442,"line_start":506,"line_end":506,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806447,"byte_end":11806512,"line_start":507,"line_end":507,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806517,"byte_end":11806520,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806525,"byte_end":11806587,"line_start":509,"line_end":509,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806592,"byte_end":11806625,"line_start":510,"line_end":510,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806630,"byte_end":11806659,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806664,"byte_end":11806667,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806672,"byte_end":11806734,"line_start":513,"line_end":513,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806739,"byte_end":11806772,"line_start":514,"line_end":514,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806777,"byte_end":11806807,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806812,"byte_end":11806828,"line_start":516,"line_end":516,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11806833,"byte_end":11806840,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807665,"byte_end":11807671,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807304,"byte_end":11807350,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807355,"byte_end":11807358,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807363,"byte_end":11807377,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807382,"byte_end":11807385,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807390,"byte_end":11807397,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807402,"byte_end":11807434,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807439,"byte_end":11807442,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807447,"byte_end":11807470,"line_start":536,"line_end":536,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807475,"byte_end":11807547,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807552,"byte_end":11807620,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807625,"byte_end":11807641,"line_start":539,"line_end":539,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807646,"byte_end":11807653,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807902,"byte_end":11807914,"line_start":551,"line_end":551,"column_start":16,"column_end":28},"name":"as_pthread_t","qualname":"<ScopedJoinHandle as std::os::unix::thread::JoinHandleExt>::as_pthread_t","value":"fn as_pthread_t(&Self) -> RawPthread","parent":{"krate":1,"index":6269},"children":[],"decl_id":{"krate":1,"index":6270},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11808255,"byte_end":11808269,"line_start":557,"line_end":557,"column_start":16,"column_end":30},"name":"into_pthread_t","qualname":"<ScopedJoinHandle as std::os::unix::thread::JoinHandleExt>::into_pthread_t","value":"fn into_pthread_t(Self) -> RawPthread","parent":{"krate":1,"index":6269},"children":[],"decl_id":{"krate":1,"index":6271},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11809121,"byte_end":11809124,"line_start":582,"line_end":582,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ScopedJoinHandle as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":11751264,"byte_end":11751271,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":11752916,"byte_end":11752933,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":11753258,"byte_end":11753275,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5974,"byte_end":5984,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6021,"byte_end":6031,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6086,"byte_end":6096,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6153,"byte_end":6163,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6179,"byte_end":6189,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9146,"byte_end":9156,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9528,"byte_end":9538,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9979,"byte_end":9989,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10339,"byte_end":10349,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22813,"byte_end":22823,"line_start":559,"line_end":559,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24664,"byte_end":24674,"line_start":624,"line_end":624,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24783,"byte_end":24793,"line_start":630,"line_end":630,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24932,"byte_end":24942,"line_start":637,"line_end":637,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":29700,"byte_end":29710,"line_start":797,"line_end":797,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":39777,"byte_end":39786,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44889,"byte_end":44900,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44937,"byte_end":44948,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44964,"byte_end":44975,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45641,"byte_end":45652,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45758,"byte_end":45769,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45883,"byte_end":45894,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":46093,"byte_end":46104,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48553,"byte_end":48560,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54481,"byte_end":54488,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54732,"byte_end":54739,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756154,"byte_end":11756160,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756182,"byte_end":11756188,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756535,"byte_end":11756541,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759935,"byte_end":11759941,"line_start":206,"line_end":206,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760174,"byte_end":11760182,"line_start":217,"line_end":217,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760207,"byte_end":11760215,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760225,"byte_end":11760233,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762045,"byte_end":11762053,"line_start":290,"line_end":290,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762176,"byte_end":11762184,"line_start":296,"line_end":296,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762462,"byte_end":11762467,"line_start":314,"line_end":314,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769829,"byte_end":11769840,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769893,"byte_end":11769904,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769943,"byte_end":11769954,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769995,"byte_end":11770006,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770022,"byte_end":11770033,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771499,"byte_end":11771510,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11781873,"byte_end":11781884,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782422,"byte_end":11782439,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782802,"byte_end":11782813,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782930,"byte_end":11782941,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783306,"byte_end":11783326,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783364,"byte_end":11783384,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783531,"byte_end":11783551,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783789,"byte_end":11783809,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784178,"byte_end":11784199,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784236,"byte_end":11784257,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784641,"byte_end":11784662,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784901,"byte_end":11784922,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11785054,"byte_end":11785075,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11785216,"byte_end":11785237,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11786535,"byte_end":11786547,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788790,"byte_end":11788799,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788996,"byte_end":11789005,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790166,"byte_end":11790175,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790384,"byte_end":11790393,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790609,"byte_end":11790618,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796913,"byte_end":11796918,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796938,"byte_end":11796943,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799215,"byte_end":11799220,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800577,"byte_end":11800596,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805268,"byte_end":11805284,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805319,"byte_end":11805335,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805910,"byte_end":11805926,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807861,"byte_end":11807877,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11809088,"byte_end":11809104,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3076,"byte_end":3082,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3273,"byte_end":3277,"line_start":99,"line_end":99,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":400}},{"kind":"Mod","span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3332,"byte_end":3338,"line_start":102,"line_end":102,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":682}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":11751264,"byte_end":11751271,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":11752916,"byte_end":11752933,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":11753258,"byte_end":11753275,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5974,"byte_end":5984,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6021,"byte_end":6031,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6086,"byte_end":6096,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":8927}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6153,"byte_end":6163,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":8928}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6179,"byte_end":6189,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9146,"byte_end":9156,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9528,"byte_end":9538,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9979,"byte_end":9989,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10339,"byte_end":10349,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22813,"byte_end":22823,"line_start":559,"line_end":559,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24664,"byte_end":24674,"line_start":624,"line_end":624,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24783,"byte_end":24793,"line_start":630,"line_end":630,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24932,"byte_end":24942,"line_start":637,"line_end":637,"column_start":43,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":29700,"byte_end":29710,"line_start":797,"line_end":797,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":39777,"byte_end":39786,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":9438},"to":{"krate":0,"index":170}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44889,"byte_end":44900,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44937,"byte_end":44948,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44964,"byte_end":44975,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45641,"byte_end":45652,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45758,"byte_end":45769,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45883,"byte_end":45894,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":46093,"byte_end":46104,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48553,"byte_end":48560,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54481,"byte_end":54488,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54732,"byte_end":54739,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756154,"byte_end":11756160,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756182,"byte_end":11756188,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11756535,"byte_end":11756541,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11759935,"byte_end":11759941,"line_start":206,"line_end":206,"column_start":21,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760174,"byte_end":11760182,"line_start":217,"line_end":217,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760207,"byte_end":11760215,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11760225,"byte_end":11760233,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762045,"byte_end":11762053,"line_start":290,"line_end":290,"column_start":21,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762176,"byte_end":11762184,"line_start":296,"line_end":296,"column_start":16,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":11762462,"byte_end":11762467,"line_start":314,"line_end":314,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769829,"byte_end":11769840,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769893,"byte_end":11769904,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769943,"byte_end":11769954,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":8927}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11769995,"byte_end":11770006,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":8928}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11770022,"byte_end":11770033,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11771499,"byte_end":11771510,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11781873,"byte_end":11781884,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782422,"byte_end":11782439,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782802,"byte_end":11782813,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11782930,"byte_end":11782941,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783306,"byte_end":11783326,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783364,"byte_end":11783384,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783531,"byte_end":11783551,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11783789,"byte_end":11783809,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784178,"byte_end":11784199,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784236,"byte_end":11784257,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784641,"byte_end":11784662,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11784901,"byte_end":11784922,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11785054,"byte_end":11785075,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11785216,"byte_end":11785237,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":11786535,"byte_end":11786547,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":627},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788790,"byte_end":11788799,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":646},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11788996,"byte_end":11789005,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790166,"byte_end":11790175,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":646},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790384,"byte_end":11790393,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":646},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":11790609,"byte_end":11790618,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":646},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796913,"byte_end":11796918,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11796938,"byte_end":11796943,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11799215,"byte_end":11799220,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11800577,"byte_end":11800596,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805268,"byte_end":11805284,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":755},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805319,"byte_end":11805335,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":755},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11805910,"byte_end":11805926,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11807861,"byte_end":11807877,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":755},"to":{"krate":1,"index":6269}},{"span":{"file_name":"/Users/quasar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":11809088,"byte_end":11809104,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":755},"to":{"krate":2,"index":9909}}]}